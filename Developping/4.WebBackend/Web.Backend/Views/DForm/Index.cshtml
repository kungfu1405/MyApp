@using DynamicData.Entities
@model Web.Backend.Models.DynamicForm.DFormListViewModel
@{
    ViewData["Title"] = Model.Table.DisplayName;
    var filterableColumns = Model.Columns
                    .Where(c => ((int)EnumFieldOption.Filter & c.FieldOptions) > 0)
                    .OrderBy(e => e.FilterOrdinal);
    var totalFilterableColumn = filterableColumns.Count();

    var listableColumns = Model.Columns
            .Where(c => ((int)EnumFieldOption.Listable & c.FieldOptions) > 0)
            .OrderBy(e => e.Ordinal);
    var totalListableColumns = listableColumns.Count();

    // use for URL querystring inside datatable Edit, Delete links
    var ktTableParams = "";
    var listPkColumns = Model.GetPkColumns();
    if (listPkColumns.Any())
    {
        for (var i = 0; i < listPkColumns.Count(); i++)
        {
            if (i == 0)
                ktTableParams += string.Format("'?{0}=' + row[\"{0}\"] + ", listPkColumns[i].Id);
            else
                ktTableParams += string.Format("'&{0}=' + row[\"{0}\"] + ", listPkColumns[i].Id);
        }
    }
}

<div class="card card-custom">
    @if (totalFilterableColumn > 0)
    {
        <div id="pnlFilter" class="w-100 collapse">
            <div class="card-header">
                <div class="card-toolbar row">
                    @foreach (var col in filterableColumns)
                    {
                        <div class="col-lg-4 col-sm-6 d-flex flex-fill align-items-center mb-3">
                            <label class="mr-3 mb-0 d-none d-md-block">@col.DisplayName</label>
                            @if (!string.IsNullOrEmpty(col.CustomTypeId))
                            {
                                var custType = Model.CustomTypes.SingleOrDefault(e => e.Id == col.CustomTypeId);
                                if (custType != null && !string.IsNullOrEmpty(custType.JsonKeyValue))
                                {
                                    var custItems = Newtonsoft.Json.JsonConvert.DeserializeObject<List<CustomTypeStruct>>(custType.JsonKeyValue);

                                    switch ((EnumFieldDisplayType)col.DisplayType)
                                    {
                                        case EnumFieldDisplayType.Dropdown:
                                            <select id="f_@col.Id" class="form-control select2 ctrl-filter" style="width: 100%">
                                                <option value="null" selected>-All-</option>
                                                @{
                                                    foreach (var citem in custItems.OrderBy(e => e.Ordinal))
                                                    {
                                                        <option value="@citem.Value">
                                                            @citem.Text
                                                        </option>
                                                    }
                                                }
                                            </select>
                                            <script type="text/javascript">
                                                $(document).ready(function () {
                                                    $('#f_@col.Id').select2({
                                                        placeholder: "@(string.IsNullOrEmpty(col.PlaceHolder) ? " -All- " : col.PlaceHolder))",
                                                        minimumResultsForSearch: 15
                                                    });
                                                });
                                            </script>
                                            break;
                                        case EnumFieldDisplayType.RadioButtonList:
                                            <div class="radio-inline" id="_f_@col.Id">
                                                @{
                                                    foreach (var citem in custItems.OrderBy(e => e.Ordinal))
                                                    {
                                                        <label class="radio @(string.IsNullOrEmpty(citem.ColorCode) ? "" : "radio-" + citem.ColorCode)">
                                                            <input type="radio" name="f_@col.Id" value="@citem.Value" />
                                                            <span></span>
                                                            @citem.Text
                                                        </label>
                                                    }
                                                    <label class="radio">
                                                        <input type="radio" name="f_@col.Id" value="null" checked />
                                                        <span></span>
                                                        All
                                                    </label>
                                                }
                                            </div>
                                            <input type="hidden" id="f_@col.Id" />
                                            <script type="text/javascript">
                                                $(document).ready(function () {
                                                    $('#_@(col.Id) input[name="f_@col.Id"]').click(function () {
                                                        $('#f_@col.Id').val($(this).val());
                                                        container_table.reload();
                                                    });
                                                });
                                            </script>
                                            break;
                                    }
                                }
                            }
                            else
                            {
                                switch ((EnumFieldDisplayType)col.DisplayType)
                                {
                                    case EnumFieldDisplayType.Number:
                                        <input type="number" id="f_@col.Id" class="form-control ctrl-filter"
                                               placeholder="@col.PlaceHolder" />
                                        break;
                                    case EnumFieldDisplayType.Email:
                                    case EnumFieldDisplayType.Text:
                                    case EnumFieldDisplayType.TextArea:
                                        <input type="text" id="f_@col.Id" class="form-control ctrl-filter" placeholder="@col.PlaceHolder" />
                                        break;
                                    case EnumFieldDisplayType.Checkbox:
                                        <span class="switch switch-outline switch-icon switch-brand">
                                            <label>
                                                <input type="checkbox" id="_f_@col.Id" checked="checked" />
                                                <input type="hidden" id="f_@col.Id" value="true" />
                                                <span></span>
                                            </label>
                                        </span>

                                        <script type="text/javascript">
                                        $(document).ready(function () {
                                            $('#_f_@col.Id').click(function () {
                                                $('#f_@col.Id').val($('#_f_@col.Id').is(":checked"));
                                                container_table.reload();
                                            });
                                        });
                                        </script>
                                        break;
                                    case EnumFieldDisplayType.RadioButtonList:
                                        <div class="radio-inline" id="_f_@col.Id">

                                            @if (Model.RefTables != null && Model.RefTables[col.ReferenceTableId] != null)
                                            {
                                                var refdata = Model.RefTables[col.ReferenceTableId].Results;
                                                foreach (var row in refdata)
                                                {
                                                    <label class="radio">
                                                        <input type="radio" name="f_@col.Id" value="@row.Id" />
                                                        <span></span>
                                                        @row.Text
                                                    </label>
                                                }
                                                <label class="radio">
                                                    <input type="radio" name="f_@col.Id" value="null" checked />
                                                    <span></span>
                                                    All
                                                </label>
                                            }
                                        </div>
                                        <input type="hidden" id="f_@col.Id" />
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $('#_@(col.Id) input[name="f_@col.Id"]').click(function () {
                                                    $('#f_@col.Id').val($(this).val());
                                                    container_table.reload();
                                                });
                                            });
                                        </script>
                                        break;
                                    case EnumFieldDisplayType.Dropdown:
                                        <select id="f_@col.Id" class="form-control ctrl-filter" style="width: 100%">
                                            <option value="null" selected>-All-</option>
                                            @if (Model.RefTables != null && Model.RefTables[col.ReferenceTableId] != null)
                                            {
                                                var refdata = Model.RefTables[col.ReferenceTableId].Results;
                                                foreach (var row in refdata)
                                                {
                                                    <option value="@row.Id">@row.Text</option>
                                                }
                                            }
                                        </select>
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $('#f_@col.Id').select2({
                                                    placeholder: "@(string.IsNullOrEmpty(col.PlaceHolder) ? " -All- " : col.PlaceHolder))",
                                                    minimumResultsForSearch: 15
                                                });
                                            });
                                        </script>
                                        break;
                                    case EnumFieldDisplayType.DropdownAjax:
                                        <select id="f_@col.Id" class="form-control ctrl-filter" style="width: 100%">
                                        </select>
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $("#f_@col.Id").select2({
                                                    minimumInputLength: 2,
                                                    placeholder: "-All-",
                                                    allowClear: true,
                                                    ajax: {
                                                        url: '@Url.Action("Search", "DForm")',
                                                        dataType: 'json',
                                                        delay: 250,
                                                        cache: true,
                                                        data: function (params) {
                                                            var queryParameters = {
                                                                keyword: params.term,
                                                                ReferenceTableId: "@col.ReferenceTableId",
                                                                ReferenceColumnId: "@col.ReferenceColumnId",
                                                                ReferenceText1Id: "@col.ReferenceText1Id",
                                                                ReferenceText2Id: "@col.ReferenceText2Id"
                                                            }
                                                            return queryParameters;
                                                        }
                                                    }
                                                });
                                            });
                                        </script>
                                        break;
                                    case EnumFieldDisplayType.DateTime:
                                        <div class='input-group' id='daterangepicker_f_@col.Id'>
                                            <input type='text' class="form-control" id="_f_@col.Id" readonly placeholder="Select date & time range" />
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class="la la-calendar-check-o"></i></span>
                                            </div>
                                        </div>
                                        <input type="hidden" id="f_@col.Id" />
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $('#daterangepicker_f_@col.Id').daterangepicker({
                                                    buttonClasses: ' btn',
                                                    applyClass: 'btn-primary',
                                                    cancelClass: 'btn-secondary',
                                                    timePicker24Hour: true,

                                                    timePicker: true,
                                                    timePickerIncrement: 5,
                                                    locale: {
                                                        format: 'DD-MMM-YY HH:mm'
                                                    }
                                                }, function (start, end, label) {
                                                    $('#_f_@col.Id').val(start.format('DD-MMM-YY HH:mm') + ' - ' + end.format('DD-MMM-YY HH:mm'));
                                                    $('#f_@col.Id').val(start.format('YYYY-MM-DD HH:mm:ss') + ' - ' + end.format('YYYY-MM-DD HH:mm:ss'));
                                                    container_table.reload();
                                                });
                                            });
                                        </script>
                                        break;
                                    case EnumFieldDisplayType.Date:
                                        <div class='input-group' id='daterangepicker_f_@col.Id'>
                                            <input type="text" class="form-control" id="_f_@col.Id" readonly placeholder="Select date range" />
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class="la la-calendar-check-o"></i></span>
                                            </div>
                                        </div>
                                        <input type="hidden" id="f_@col.Id" />
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $('#daterangepicker_f_@col.Id').daterangepicker({
                                                    buttonClasses: ' btn',
                                                    applyClass: 'btn-primary',
                                                    cancelClass: 'btn-secondary',

                                                    locale: {
                                                        format: 'DD-MMM-YY'
                                                    }
                                                }, function (start, end, label) {
                                                    $('#_f_@col.Id').val(start.format('DD-MMM-YY') + ' - ' + end.format('DD-MMM-YY'));
                                                    $('#f_@col.Id').val(start.format('YYYY-MM-DD HH:mm:ss') + ' - ' + end.format('YYYY-MM-DD HH:mm:ss'));
                                                    container_table.reload();
                                                });
                                            });
                                        </script>
                                        break;
                                }

                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    <div class="card-body">
        <div class="table-hover datatable datatable-bordered datatable-head-custom" id="ctbl_@Model.TableId"></div>
    </div>
</div>

<partial name="_Partials/_alertMessage" model="Model.AlertMessages" />

@section Scripts{
    <script type="text/javascript">
    var container_table;
    $(document).ready(function () {
        container_table = $('#ctbl_@Model.TableId').KTDatatable({
            // datasource definition
            data: {
                type: 'remote',
                source: {
                    read: {
                        url: '@Url.Action("GetDatatable")',
                        params: {
                            @foreach(var col in filterableColumns)
                            {
                            <text>
                            'Conditions["@col.Id"]': function () { return $('#f_@col.Id').val(); },
                            </text>
                            }
                            TableId: "@Model.TableId"
                        }
                    },
                },
                pageSize: 10,
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true,
                saveState: false,
            },
            layout: {
                scroll: true,
                footer: false,
            },
            sortable: true,
            pagination: true,

            // columns definition
            columns: [
                @foreach (var col in listableColumns)
                {
                    if (!string.IsNullOrEmpty(col.CustomTypeId))
                    {
                        var custType = Model.CustomTypes.SingleOrDefault(e => e.Id == col.CustomTypeId);
                        var jsStatus = "null";
                        if (custType != null && !string.IsNullOrEmpty(custType.JsonKeyValue))
                        {
                            var custItems = Newtonsoft.Json.JsonConvert.DeserializeObject<List<CustomTypeStruct>>(custType.JsonKeyValue);
                            jsStatus = "{ ";
                            foreach (var cust in custItems)
                            {
                                jsStatus += string.Format("'{0}': \"{1}\", ", cust.Text, cust.ClassName);
                            }
                            jsStatus += " };";
                        }

                    <text>
                    {
                        field: "@col.Id", title: "@col.DisplayName", width: 120, textAlign: "center"
                        , sortable: @(((int)EnumFieldOption.Sortable & (int)col.FieldOptions) > 0 ? "true" : "false")
                        , template: function (row) {
                            var returnText = row["@col.Id"];
                            var status = @(Html.Raw(jsStatus)) ;
                            if (status != null) {
                                returnText = '<span class="' + status[row["@col.Id"]] + '">' + returnText + '</span>';
                            }
                            return returnText;
                        }
                    },
                    </text>
                    }
                    else
                    {
                        switch ((EnumDataType)col.DataType)
                        {
                            case EnumDataType.Bool:
                            <text>
                            {
                                field: "@col.Id", title: "@col.DisplayName", width: 90, textAlign: "center"
                                , sortable: @(((int)EnumFieldOption.Sortable & (int)col.FieldOptions) > 0 ? "true" : "false")
                                , template: function (row) {
                                    var isActiveStatus = @(((int)EnumFieldOption.ActiveStatus & (int)col.FieldOptions) > 0 ? "true" : "false");
                                    var returnText = row["@col.Id"] == "True" ? "YES" : "NO";
                                    var resultHTML = "";
                                    if (isActiveStatus) {
                                        if (returnText == "YES")
                                            resultHTML = '<span class="badge badge-primary">' + returnText + '</span>';
                                        else
                                            resultHTML = '<span class="badge badge-light">' + returnText + '</span>';
                                    } else {
                                        if (returnText == "YES")
                                            resultHTML = '<span class="text-primary">' + returnText + '</span>';
                                        else
                                            resultHTML = '<span class="text-dark">' + returnText + '</span>';
                                    }
                                    return resultHTML;
                                }
                            },
                            </text>
                                break;
                            case EnumDataType.DateTime:
                                switch ((EnumFieldDisplayType)col.DisplayType)
                                {
                                    case EnumFieldDisplayType.DateTime:
                                    <text>
                                    {
                                        field: "@col.Id", title: "@col.DisplayName", width: 120, textAlign: "center"
                                        , sortable: @(((int)EnumFieldOption.Sortable & (int)col.FieldOptions) > 0 ? "true" : "false")
                                        , template: function (row) {
                                            var returnText = moment(row["@col.Id"], 'MM/DD/YYYY hh:mm:ss A').format('DD-MMM-YY HH:mm');
                                            return returnText;
                                        }
                                    },
                                    </text>
                                        break;
                                    case EnumFieldDisplayType.Date:
                                    <text>
                                    {
                                        field: "@col.Id", title: "@col.DisplayName", width: 90, textAlign: "center"
                                        , sortable: @(((int)EnumFieldOption.Sortable & (int)col.FieldOptions) > 0 ? "true" : "false")
                                        , template: function (row) {
                                            var returnText = moment(row["@col.Id"], 'MM/DD/YYYY hh:mm:ss A').format('DD-MMM-YY');
                                            return returnText;
                                        }
                                    },
                                    </text>
                                        break;
                                    case EnumFieldDisplayType.Time:
                                    <text>
                                    {
                                        field: "@col.Id", title: "@col.DisplayName", width: 90, textAlign: "right"
                                        , sortable: @(((int)EnumFieldOption.Sortable & (int)col.FieldOptions) > 0 ? "true" : "false")
                                        , template: function (row) {
                                            var returnText = row["@col.Id"];
                                            return returnText;
                                        }
                                    },
                                    </text>
                                        break;
                                }
                                break;
                            case EnumDataType.Int:
                            case EnumDataType.Long:
                            case EnumDataType.Double:
                            <text>
                            {
                                field: "@col.Id", title: "@col.DisplayName", type: 'number', width: 100, textAlign: "right"
                                , sortable: @(((int)EnumFieldOption.Sortable & (int)col.FieldOptions) > 0 ? "true" : "false")
                            },
                            </text>
                                break;
                            default:
                            <text>
                            {
                                field: "@col.Id", title: "@col.DisplayName"
                                , sortable: @(((int)EnumFieldOption.Sortable & (int)col.FieldOptions) > 0 ? "true" : "false")
                            },
                            </text>
                                break;
                        }
                    }
                }
                {
                    field: "Actions", title: "", sortable: false, width: 35, textAlign: "right", overflow: 'visible', autoHide: false
                    , template: function (row) {
                        var resultHtml = '\
                        <div class="dropdown dropdown-inline">\
                            <a href="javascript:;" class="btn btn-sm btn-clean btn-icon" data-toggle="dropdown" title="Quick actions">\
                                <i class="ki ki-bold-more-ver"></i>\
                            </a>\
                            <div class="dropdown-menu dropdown-menu-sm dropdown-menu-right">\
                                <ul class="navi flex-column navi-hover py-2">\
                                    <li class="navi-header font-weight-bolder text-uppercase font-size-xs text-primary pb-2">\
                                        Choose an action:\
                                    </li>\
                                    <li class="navi-item">\
                                        <a href="#" class="navi-link btn-quickview" \
                                            data-title="@Model.Table.DisplayName detail" \
                                            data-link="@(Url.Action("Detail", new { fid = Model.TableId }))' + @Html.Raw(ktTableParams) '" >\
                                            <span class="navi-icon"><i class="flaticon-eye"></i></span>\
                                            <span class="navi-text">View detail</span>\
                                        </a></li>';

                        @if (((int)EnumTablePermission.Edit & Model.Table.Permissions) > 0)
                        {
                        <text>
                        resultHtml += '<li class="navi-item">\
                                        <a class="navi-link" href="@(Url.Action("AddEdit", new { fid = Model.TableId }))' + @Html.Raw(ktTableParams) '" >\
                                            <span class="navi-icon"><i class="flaticon-edit-1"></i></span>\
                                            <span class="navi-text">Edit record</span>\
                                        </a></li>';
                        </text>
                        }
                        @if (((int)EnumTablePermission.Delete & Model.Table.Permissions) > 0)
                        {
                        <text>
                        resultHtml += '<li class="navi-item">\
                                        <a class="navi-link btn-delete" data-toggle="confirmation" href="#" data-link="@(Url.Action("Delete", new { fid = Model.TableId }))' + @Html.Raw(ktTableParams) '" >\
                                            <span class="navi-icon"><i class="flaticon-delete-1"></i></span>\
                                            <span class="navi-text">Delete record</span>\
                                        </a></li>';
                        </text>
                        }
                        resultHtml += '</ul></div></div>';
                        return resultHtml;
                    }
                }
            ],
            translate: {
                records: {
                    noRecords: "No records found",
                    processing: "Loading...",
                }
            }
        });

        $('#btnReload').click(function (e) {
            container_table.reload();
        });

        $('.ctrl-filter').change(function (e) {
            container_table.reload();
        });

        $('.btn-export').click(function (e) {
            e.preventDefault();
            if ($(this).hasClass('disabled'))
                return;

            var queryString = "@Url.Action("Export", "DForm", new { fid = Model.TableId })?TableId=@Model.TableId&ExportType=" + $(this).attr('data-type');

                @foreach(var col in filterableColumns)
                {
                <text>
            queryString += '&Conditions[@col.Id]=' + $('#f_@col.Id').val()
                </text>
                }

            download(queryString, "@(Model.Table.DisplayName)_Export." + $(this).attr('data-type'));
        });

        $(document).on("click", ".btn-delete", function (e) {
            e.preventDefault();
            var thisButton = $(this);

            var fndelete = function () {
                $.ajax({
                    url: thisButton.attr('data-link'),
                    type: "DELETE",
                    cache: false,
                    contentType: "application/json",
                    beforeSend: function () {
                        thisButton.addClass('spinner spinner-primary spinner-right');
                        addOverlay('#container_table', 5000);
                    },
                    success: function (msg) {
                        removeOverlay('#container_table');
                        Swal.fire(
                            'Deleted!',
                            'Your record has been deleted.',
                            'success'
                        )
                        if ($('#pnlQuickView').hasClass('offcanvas-on')) {
                            KTUtil.getById('btn-quickview-toggle').click();
                        }
                        container_table.reload();
                    },
                    error: function (xhr) {
                        removeOverlay('#container_table');
                        if ($('#pnlQuickView').hasClass('offcanvas-on')) {
                            KTUtil.getById('btn-quickview-toggle').click();
                        }
                        KTUtil.find(thisButton, '.spinner').removeClass('spinner spinner-primary spinner-right');

                        Swal.fire(
                            'Delete failed!',
                            xhr.responseText,
                            'danger'
                        );
                    }
                });
            }

            if ($(thisButton).attr('data-toggle') == 'confirmation') {
                ConfirmDelete(fndelete);
            } else {
                fndelete();
            }

        });
    });
    </script>
}

@section Toolbar{
    @if (((int)EnumTablePermission.Export & Model.Table.Permissions) > 0)
    {
        <div class="dropdown dropdown-inline mr-2">
            <button type="button" class="btn btn-sm btn-light-primary font-weight-bolder dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="svg-icon svg-icon-sm mr-0">
                    <!--begin::Svg Icon | path:assets/media/svg/icons/Design/PenAndRuller.svg-->
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                            <rect x="0" y="0" width="24" height="24" />
                            <path d="M3,16 L5,16 C5.55228475,16 6,15.5522847 6,15 C6,14.4477153 5.55228475,14 5,14 L3,14 L3,12 L5,12 C5.55228475,12 6,11.5522847 6,11 C6,10.4477153 5.55228475,10 5,10 L3,10 L3,8 L5,8 C5.55228475,8 6,7.55228475 6,7 C6,6.44771525 5.55228475,6 5,6 L3,6 L3,4 C3,3.44771525 3.44771525,3 4,3 L10,3 C10.5522847,3 11,3.44771525 11,4 L11,19 C11,19.5522847 10.5522847,20 10,20 L4,20 C3.44771525,20 3,19.5522847 3,19 L3,16 Z" fill="#000000" opacity="0.3" />
                            <path d="M16,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,15.2485298 C21,15.7329761 20.8241635,16.200956 20.5051534,16.565539 L17.8762883,19.5699562 C17.6944473,19.7777745 17.378566,19.7988332 17.1707477,19.6169922 C17.1540423,19.602375 17.1383289,19.5866616 17.1237117,19.5699562 L14.4948466,16.565539 C14.1758365,16.200956 14,15.7329761 14,15.2485298 L14,5 C14,3.8954305 14.8954305,3 16,3 Z" fill="#000000" />
                        </g>
                    </svg>
                    <!--end::Svg Icon-->
                </span>

                <span class="d-none d-sm-inline">Export</span>
            </button>
            <!--begin::Dropdown Menu-->
            <div class="dropdown-menu dropdown-menu-sm dropdown-menu-right">
                <!--begin::Navigation-->
                <ul class="navi flex-column navi-hover py-2">
                    <li class="navi-header font-weight-bolder text-uppercase font-size-sm text-primary pb-2">Choose an option:</li>
                    <li class="navi-item">
                        <a href="#" class="navi-link btn-export disabled" data-type="print">
                            <span class="navi-icon">
                                <i class="la la-print"></i>
                            </span>
                            <span class="navi-text">Print</span>
                        </a>
                    </li>
                    <li class="navi-item">
                        <a href="#" class="navi-link btn-export" data-type="xlsx">
                            <span class="navi-icon">
                                <i class="la la-file-excel-o"></i>
                            </span>
                            <span class="navi-text">Excel</span>
                        </a>
                    </li>
                    <li class="navi-item">
                        <a href="#" class="navi-link btn-export disabled" data-type="csv">
                            <span class="navi-icon">
                                <i class="la la-file-text-o"></i>
                            </span>
                            <span class="navi-text">CSV</span>
                        </a>
                    </li>
                    <li class="navi-item">
                        <a href="#" class="navi-link btn-export disabled" data-type="pdf">
                            <span class="navi-icon">
                                <i class="la la-file-pdf-o"></i>
                            </span>
                            <span class="navi-text">PDF</span>
                        </a>
                    </li>
                </ul>
                <!--end::Navigation-->
            </div>
            <!--end::Dropdown Menu-->
        </div>
    }
    @if (totalFilterableColumn > 0)
    {
        <a class="btn btn-sm btn-primary mr-1" data-toggle="collapse" href="#pnlFilter" role="button" aria-expanded="false" title="Show/hide filters">
            <span class="svg-icon svg-icon-sm mr-0">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <rect x="0" y="0" width="24" height="24" />
                        <path d="M5,4 L19,4 C19.2761424,4 19.5,4.22385763 19.5,4.5 C19.5,4.60818511 19.4649111,4.71345191 19.4,4.8 L14,12 L14,20.190983 C14,20.4671254 13.7761424,20.690983 13.5,20.690983 C13.4223775,20.690983 13.3458209,20.6729105 13.2763932,20.6381966 L10,19 L10,12 L4.6,4.8 C4.43431458,4.5790861 4.4790861,4.26568542 4.7,4.1 C4.78654809,4.03508894 4.89181489,4 5,4 Z" fill="#000000" />
                    </g>
                </svg>
            </span>
            <span class="d-none d-sm-inline">Filter</span>
        </a>
    }
    <a id="btnReload" href="#" class="btn btn-sm btn-success mr-1">
        <span class="svg-icon svg-icon-sm mr-0">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                    <rect x="0" y="0" width="24" height="24" />
                    <path d="M8.43296491,7.17429118 L9.40782327,7.85689436 C9.49616631,7.91875282 9.56214077,8.00751728 9.5959027,8.10994332 C9.68235021,8.37220548 9.53982427,8.65489052 9.27756211,8.74133803 L5.89079566,9.85769242 C5.84469033,9.87288977 5.79661753,9.8812917 5.74809064,9.88263369 C5.4720538,9.8902674 5.24209339,9.67268366 5.23445968,9.39664682 L5.13610134,5.83998177 C5.13313425,5.73269078 5.16477113,5.62729274 5.22633424,5.53937151 C5.384723,5.31316892 5.69649589,5.25819495 5.92269848,5.4165837 L6.72910242,5.98123382 C8.16546398,4.72182424 10.0239806,4 12,4 C16.418278,4 20,7.581722 20,12 C20,16.418278 16.418278,20 12,20 C7.581722,20 4,16.418278 4,12 L6,12 C6,15.3137085 8.6862915,18 12,18 C15.3137085,18 18,15.3137085 18,12 C18,8.6862915 15.3137085,6 12,6 C10.6885336,6 9.44767246,6.42282109 8.43296491,7.17429118 Z" fill="#000000" fill-rule="nonzero" />
                </g>
            </svg>
        </span>
        <span class="d-none d-sm-inline">Reload</span>
    </a>
    @if (((int)EnumTablePermission.Add & Model.Table.Permissions) > 0)
    {
        <a asp-action="AddEdit" asp-route-fid="@Model.TableId" class="btn btn-sm btn-warning mr-1">
            <span class="svg-icon svg-icon-sm mr-0">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <rect x="0" y="0" width="24" height="24" />
                        <circle fill="#000000" opacity="0.3" cx="12" cy="12" r="10" />
                        <path d="M11,11 L11,7 C11,6.44771525 11.4477153,6 12,6 C12.5522847,6 13,6.44771525 13,7 L13,11 L17,11 C17.5522847,11 18,11.4477153 18,12 C18,12.5522847 17.5522847,13 17,13 L13,13 L13,17 C13,17.5522847 12.5522847,18 12,18 C11.4477153,18 11,17.5522847 11,17 L11,13 L7,13 C6.44771525,13 6,12.5522847 6,12 C6,11.4477153 6.44771525,11 7,11 L11,11 Z" fill="#000000" />
                    </g>
                </svg>
            </span>
            <span class="d-none d-sm-inline">Add New</span>
        </a>
    }
}
