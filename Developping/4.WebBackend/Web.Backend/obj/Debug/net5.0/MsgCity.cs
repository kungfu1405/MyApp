// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgCity.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DbData.Protos {

  /// <summary>Holder for reflection information generated from msgCity.proto</summary>
  public static partial class MsgCityReflection {

    #region Descriptor
    /// <summary>File descriptor for msgCity.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgCityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tc2dDaXR5LnByb3RvEgZkYmRhdGEaHmdvb2dsZS9wcm90b2J1Zi93cmFw",
            "cGVycy5wcm90bxoVbXNnRGJEYXRhQ29tbW9uLnByb3RvGhBtc2dDb3VudHJ5",
            "LnByb3RvGg5tc2dTdGF0ZS5wcm90byKVAgoKQ2l0eVN0cnVjdBIKCgJpZBgB",
            "IAEoBRIMCgRuYW1lGAIgASgJEg8KB3N0YXRlSWQYAyABKAUSEQoJc3RhdGVD",
            "b2RlGAQgASgJEhEKCWNvdW50cnlJZBgFIAEoBRITCgtjb3VudHJ5Q29kZRgG",
            "IAEoCRIQCghsYXRpdHVkZRgHIAEoARIRCglsb25naXR1ZGUYCCABKAESMAoK",
            "d2lraURhdGFJZBgJIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRImCgdjb3VudHJ5GAogASgLMhUuZGJkYXRhLkNvdW50cnlTdHJ1Y3QSIgoF",
            "c3RhdGUYCyABKAsyEy5kYmRhdGEuU3RhdGVTdHJ1Y3QioAEKCkNpdHlGaWx0",
            "ZXISIgoGcGFnaW5nGAEgASgLMhIuZGJkYXRhLlBhZ2luZ1R5cGUSHgoEc29y",
            "dBgCIAEoCzIQLmRiZGF0YS5Tb3J0VHlwZRIqCgRuYW1lGAMgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhEKCWNvdW50cnlJZBgEIAEoBRIP",
            "CgdzdGF0ZUlkGAUgASgFIkoKEExpc3RDaXR5UmVzcG9uc2USFAoMdG90YWxS",
            "ZWNvcmRzGAEgASgFEiAKBGRhdGEYAiADKAsyEi5kYmRhdGEuQ2l0eVN0cnVj",
            "dEIQqgINRGJEYXRhLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::DbData.Protos.MsgDbDataCommonReflection.Descriptor, global::DbData.Protos.MsgCountryReflection.Descriptor, global::DbData.Protos.MsgStateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.CityStruct), global::DbData.Protos.CityStruct.Parser, new[]{ "Id", "Name", "StateId", "StateCode", "CountryId", "CountryCode", "Latitude", "Longitude", "WikiDataId", "Country", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.CityFilter), global::DbData.Protos.CityFilter.Parser, new[]{ "Paging", "Sort", "Name", "CountryId", "StateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ListCityResponse), global::DbData.Protos.ListCityResponse.Parser, new[]{ "TotalRecords", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CityStruct : pb::IMessage<CityStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CityStruct> _parser = new pb::MessageParser<CityStruct>(() => new CityStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CityStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgCityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityStruct(CityStruct other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      stateId_ = other.stateId_;
      stateCode_ = other.stateCode_;
      countryId_ = other.countryId_;
      countryCode_ = other.countryCode_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      WikiDataId = other.WikiDataId;
      country_ = other.country_ != null ? other.country_.Clone() : null;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityStruct Clone() {
      return new CityStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stateId" field.</summary>
    public const int StateIdFieldNumber = 3;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "stateCode" field.</summary>
    public const int StateCodeFieldNumber = 4;
    private string stateCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateCode {
      get { return stateCode_; }
      set {
        stateCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 5;
    private int countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountryId {
      get { return countryId_; }
      set {
        countryId_ = value;
      }
    }

    /// <summary>Field number for the "countryCode" field.</summary>
    public const int CountryCodeFieldNumber = 6;
    private string countryCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 7;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 8;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "wikiDataId" field.</summary>
    public const int WikiDataIdFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_wikiDataId_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string wikiDataId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WikiDataId {
      get { return wikiDataId_; }
      set {
        wikiDataId_ = value;
      }
    }


    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 10;
    private global::DbData.Protos.CountryStruct country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.CountryStruct Country {
      get { return country_; }
      set {
        country_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 11;
    private global::DbData.Protos.StateStruct state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.StateStruct State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CityStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CityStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (StateId != other.StateId) return false;
      if (StateCode != other.StateCode) return false;
      if (CountryId != other.CountryId) return false;
      if (CountryCode != other.CountryCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (WikiDataId != other.WikiDataId) return false;
      if (!object.Equals(Country, other.Country)) return false;
      if (!object.Equals(State, other.State)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (StateCode.Length != 0) hash ^= StateCode.GetHashCode();
      if (CountryId != 0) hash ^= CountryId.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (wikiDataId_ != null) hash ^= WikiDataId.GetHashCode();
      if (country_ != null) hash ^= Country.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (StateId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StateId);
      }
      if (StateCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StateCode);
      }
      if (CountryId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CountryId);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CountryCode);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Longitude);
      }
      if (wikiDataId_ != null) {
        _single_wikiDataId_codec.WriteTagAndValue(output, WikiDataId);
      }
      if (country_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Country);
      }
      if (state_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (StateId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StateId);
      }
      if (StateCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StateCode);
      }
      if (CountryId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CountryId);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CountryCode);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Longitude);
      }
      if (wikiDataId_ != null) {
        _single_wikiDataId_codec.WriteTagAndValue(ref output, WikiDataId);
      }
      if (country_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Country);
      }
      if (state_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (StateCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateCode);
      }
      if (CountryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountryId);
      }
      if (CountryCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (wikiDataId_ != null) {
        size += _single_wikiDataId_codec.CalculateSizeWithTag(WikiDataId);
      }
      if (country_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Country);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CityStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.StateCode.Length != 0) {
        StateCode = other.StateCode;
      }
      if (other.CountryId != 0) {
        CountryId = other.CountryId;
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.wikiDataId_ != null) {
        if (wikiDataId_ == null || other.WikiDataId != "") {
          WikiDataId = other.WikiDataId;
        }
      }
      if (other.country_ != null) {
        if (country_ == null) {
          Country = new global::DbData.Protos.CountryStruct();
        }
        Country.MergeFrom(other.Country);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::DbData.Protos.StateStruct();
        }
        State.MergeFrom(other.State);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            StateId = input.ReadInt32();
            break;
          }
          case 34: {
            StateCode = input.ReadString();
            break;
          }
          case 40: {
            CountryId = input.ReadInt32();
            break;
          }
          case 50: {
            CountryCode = input.ReadString();
            break;
          }
          case 57: {
            Latitude = input.ReadDouble();
            break;
          }
          case 65: {
            Longitude = input.ReadDouble();
            break;
          }
          case 74: {
            string value = _single_wikiDataId_codec.Read(input);
            if (wikiDataId_ == null || value != "") {
              WikiDataId = value;
            }
            break;
          }
          case 82: {
            if (country_ == null) {
              Country = new global::DbData.Protos.CountryStruct();
            }
            input.ReadMessage(Country);
            break;
          }
          case 90: {
            if (state_ == null) {
              State = new global::DbData.Protos.StateStruct();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            StateId = input.ReadInt32();
            break;
          }
          case 34: {
            StateCode = input.ReadString();
            break;
          }
          case 40: {
            CountryId = input.ReadInt32();
            break;
          }
          case 50: {
            CountryCode = input.ReadString();
            break;
          }
          case 57: {
            Latitude = input.ReadDouble();
            break;
          }
          case 65: {
            Longitude = input.ReadDouble();
            break;
          }
          case 74: {
            string value = _single_wikiDataId_codec.Read(ref input);
            if (wikiDataId_ == null || value != "") {
              WikiDataId = value;
            }
            break;
          }
          case 82: {
            if (country_ == null) {
              Country = new global::DbData.Protos.CountryStruct();
            }
            input.ReadMessage(Country);
            break;
          }
          case 90: {
            if (state_ == null) {
              State = new global::DbData.Protos.StateStruct();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CityFilter : pb::IMessage<CityFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CityFilter> _parser = new pb::MessageParser<CityFilter>(() => new CityFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CityFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgCityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityFilter(CityFilter other) : this() {
      paging_ = other.paging_ != null ? other.paging_.Clone() : null;
      sort_ = other.sort_ != null ? other.sort_.Clone() : null;
      Name = other.Name;
      countryId_ = other.countryId_;
      stateId_ = other.stateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CityFilter Clone() {
      return new CityFilter(this);
    }

    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 1;
    private global::DbData.Protos.PagingType paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.PagingType Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 2;
    private global::DbData.Protos.SortType sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.SortType Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 4;
    private int countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountryId {
      get { return countryId_; }
      set {
        countryId_ = value;
      }
    }

    /// <summary>Field number for the "stateId" field.</summary>
    public const int StateIdFieldNumber = 5;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CityFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CityFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Paging, other.Paging)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (Name != other.Name) return false;
      if (CountryId != other.CountryId) return false;
      if (StateId != other.StateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (paging_ != null) hash ^= Paging.GetHashCode();
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (CountryId != 0) hash ^= CountryId.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (CountryId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CountryId);
      }
      if (StateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(ref output, Name);
      }
      if (CountryId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CountryId);
      }
      if (StateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (paging_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
      }
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (CountryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountryId);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CityFilter other) {
      if (other == null) {
        return;
      }
      if (other.paging_ != null) {
        if (paging_ == null) {
          Paging = new global::DbData.Protos.PagingType();
        }
        Paging.MergeFrom(other.Paging);
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          Sort = new global::DbData.Protos.SortType();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.CountryId != 0) {
        CountryId = other.CountryId;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 32: {
            CountryId = input.ReadInt32();
            break;
          }
          case 40: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(ref input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 32: {
            CountryId = input.ReadInt32();
            break;
          }
          case 40: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListCityResponse : pb::IMessage<ListCityResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListCityResponse> _parser = new pb::MessageParser<ListCityResponse>(() => new ListCityResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgCityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCityResponse(ListCityResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCityResponse Clone() {
      return new ListCityResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DbData.Protos.CityStruct> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::DbData.Protos.CityStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.CityStruct> data_ = new pbc::RepeatedField<global::DbData.Protos.CityStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.CityStruct> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCityResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
