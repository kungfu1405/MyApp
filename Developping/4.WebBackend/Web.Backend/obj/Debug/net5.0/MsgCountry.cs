// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgCountry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DbData.Protos {

  /// <summary>Holder for reflection information generated from msgCountry.proto</summary>
  public static partial class MsgCountryReflection {

    #region Descriptor
    /// <summary>File descriptor for msgCountry.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgCountryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBtc2dDb3VudHJ5LnByb3RvEgZkYmRhdGEaHmdvb2dsZS9wcm90b2J1Zi93",
            "cmFwcGVycy5wcm90bxoVbXNnRGJEYXRhQ29tbW9uLnByb3RvGhJtc2dDb250",
            "aW5lbnQucHJvdG8ijQQKDUNvdW50cnlTdHJ1Y3QSCgoCaWQYASABKAUSEwoL",
            "Y29udGluZW50SWQYAiABKAUSDAoEbmFtZRgDIAEoCRIqCgRpc28yGAQgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioKBGlzbzMYBSABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLAoGbmF0aXZlGAggASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KB2NhcGl0YWwYBiAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIY3VycmVuY3kY",
            "ByABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLwoJcGhvbmVD",
            "b2RlGAwgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEisKBWVt",
            "b2ppGAkgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEiwKBmVt",
            "b2ppVRgKIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIwCgp3",
            "aWtpRGF0YUlkGAsgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EioKCWNvbnRpbmVudBgNIAEoCzIXLmRiZGF0YS5Db250aW5lbnRTdHJ1Y3Qi",
            "lAEKDUNvdW50cnlGaWx0ZXISIgoGcGFnaW5nGAEgASgLMhIuZGJkYXRhLlBh",
            "Z2luZ1R5cGUSHgoEc29ydBgCIAEoCzIQLmRiZGF0YS5Tb3J0VHlwZRIqCgRu",
            "YW1lGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhMKC2Nv",
            "bnRpbmVudElkGAQgASgFIlAKE0xpc3RDb3VudHJ5UmVzcG9uc2USFAoMdG90",
            "YWxSZWNvcmRzGAEgASgFEiMKBGRhdGEYAiADKAsyFS5kYmRhdGEuQ291bnRy",
            "eVN0cnVjdEIQqgINRGJEYXRhLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::DbData.Protos.MsgDbDataCommonReflection.Descriptor, global::DbData.Protos.MsgContinentReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.CountryStruct), global::DbData.Protos.CountryStruct.Parser, new[]{ "Id", "ContinentId", "Name", "Iso2", "Iso3", "Native", "Capital", "Currency", "PhoneCode", "Emoji", "EmojiU", "WikiDataId", "Continent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.CountryFilter), global::DbData.Protos.CountryFilter.Parser, new[]{ "Paging", "Sort", "Name", "ContinentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ListCountryResponse), global::DbData.Protos.ListCountryResponse.Parser, new[]{ "TotalRecords", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CountryStruct : pb::IMessage<CountryStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CountryStruct> _parser = new pb::MessageParser<CountryStruct>(() => new CountryStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountryStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgCountryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryStruct(CountryStruct other) : this() {
      id_ = other.id_;
      continentId_ = other.continentId_;
      name_ = other.name_;
      Iso2 = other.Iso2;
      Iso3 = other.Iso3;
      Native = other.Native;
      Capital = other.Capital;
      Currency = other.Currency;
      PhoneCode = other.PhoneCode;
      Emoji = other.Emoji;
      EmojiU = other.EmojiU;
      WikiDataId = other.WikiDataId;
      continent_ = other.continent_ != null ? other.continent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryStruct Clone() {
      return new CountryStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "continentId" field.</summary>
    public const int ContinentIdFieldNumber = 2;
    private int continentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContinentId {
      get { return continentId_; }
      set {
        continentId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iso2" field.</summary>
    public const int Iso2FieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_iso2_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string iso2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iso2 {
      get { return iso2_; }
      set {
        iso2_ = value;
      }
    }


    /// <summary>Field number for the "iso3" field.</summary>
    public const int Iso3FieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_iso3_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string iso3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iso3 {
      get { return iso3_; }
      set {
        iso3_ = value;
      }
    }


    /// <summary>Field number for the "native" field.</summary>
    public const int NativeFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_native_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string native_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Native {
      get { return native_; }
      set {
        native_ = value;
      }
    }


    /// <summary>Field number for the "capital" field.</summary>
    public const int CapitalFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_capital_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string capital_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Capital {
      get { return capital_; }
      set {
        capital_ = value;
      }
    }


    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_currency_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string currency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }


    /// <summary>Field number for the "phoneCode" field.</summary>
    public const int PhoneCodeFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_phoneCode_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string phoneCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneCode {
      get { return phoneCode_; }
      set {
        phoneCode_ = value;
      }
    }


    /// <summary>Field number for the "emoji" field.</summary>
    public const int EmojiFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_emoji_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string emoji_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Emoji {
      get { return emoji_; }
      set {
        emoji_ = value;
      }
    }


    /// <summary>Field number for the "emojiU" field.</summary>
    public const int EmojiUFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_emojiU_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string emojiU_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmojiU {
      get { return emojiU_; }
      set {
        emojiU_ = value;
      }
    }


    /// <summary>Field number for the "wikiDataId" field.</summary>
    public const int WikiDataIdFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_wikiDataId_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string wikiDataId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WikiDataId {
      get { return wikiDataId_; }
      set {
        wikiDataId_ = value;
      }
    }


    /// <summary>Field number for the "continent" field.</summary>
    public const int ContinentFieldNumber = 13;
    private global::DbData.Protos.ContinentStruct continent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.ContinentStruct Continent {
      get { return continent_; }
      set {
        continent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountryStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountryStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContinentId != other.ContinentId) return false;
      if (Name != other.Name) return false;
      if (Iso2 != other.Iso2) return false;
      if (Iso3 != other.Iso3) return false;
      if (Native != other.Native) return false;
      if (Capital != other.Capital) return false;
      if (Currency != other.Currency) return false;
      if (PhoneCode != other.PhoneCode) return false;
      if (Emoji != other.Emoji) return false;
      if (EmojiU != other.EmojiU) return false;
      if (WikiDataId != other.WikiDataId) return false;
      if (!object.Equals(Continent, other.Continent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ContinentId != 0) hash ^= ContinentId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (iso2_ != null) hash ^= Iso2.GetHashCode();
      if (iso3_ != null) hash ^= Iso3.GetHashCode();
      if (native_ != null) hash ^= Native.GetHashCode();
      if (capital_ != null) hash ^= Capital.GetHashCode();
      if (currency_ != null) hash ^= Currency.GetHashCode();
      if (phoneCode_ != null) hash ^= PhoneCode.GetHashCode();
      if (emoji_ != null) hash ^= Emoji.GetHashCode();
      if (emojiU_ != null) hash ^= EmojiU.GetHashCode();
      if (wikiDataId_ != null) hash ^= WikiDataId.GetHashCode();
      if (continent_ != null) hash ^= Continent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ContinentId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ContinentId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (iso2_ != null) {
        _single_iso2_codec.WriteTagAndValue(output, Iso2);
      }
      if (iso3_ != null) {
        _single_iso3_codec.WriteTagAndValue(output, Iso3);
      }
      if (capital_ != null) {
        _single_capital_codec.WriteTagAndValue(output, Capital);
      }
      if (currency_ != null) {
        _single_currency_codec.WriteTagAndValue(output, Currency);
      }
      if (native_ != null) {
        _single_native_codec.WriteTagAndValue(output, Native);
      }
      if (emoji_ != null) {
        _single_emoji_codec.WriteTagAndValue(output, Emoji);
      }
      if (emojiU_ != null) {
        _single_emojiU_codec.WriteTagAndValue(output, EmojiU);
      }
      if (wikiDataId_ != null) {
        _single_wikiDataId_codec.WriteTagAndValue(output, WikiDataId);
      }
      if (phoneCode_ != null) {
        _single_phoneCode_codec.WriteTagAndValue(output, PhoneCode);
      }
      if (continent_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Continent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ContinentId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ContinentId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (iso2_ != null) {
        _single_iso2_codec.WriteTagAndValue(ref output, Iso2);
      }
      if (iso3_ != null) {
        _single_iso3_codec.WriteTagAndValue(ref output, Iso3);
      }
      if (capital_ != null) {
        _single_capital_codec.WriteTagAndValue(ref output, Capital);
      }
      if (currency_ != null) {
        _single_currency_codec.WriteTagAndValue(ref output, Currency);
      }
      if (native_ != null) {
        _single_native_codec.WriteTagAndValue(ref output, Native);
      }
      if (emoji_ != null) {
        _single_emoji_codec.WriteTagAndValue(ref output, Emoji);
      }
      if (emojiU_ != null) {
        _single_emojiU_codec.WriteTagAndValue(ref output, EmojiU);
      }
      if (wikiDataId_ != null) {
        _single_wikiDataId_codec.WriteTagAndValue(ref output, WikiDataId);
      }
      if (phoneCode_ != null) {
        _single_phoneCode_codec.WriteTagAndValue(ref output, PhoneCode);
      }
      if (continent_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Continent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ContinentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContinentId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (iso2_ != null) {
        size += _single_iso2_codec.CalculateSizeWithTag(Iso2);
      }
      if (iso3_ != null) {
        size += _single_iso3_codec.CalculateSizeWithTag(Iso3);
      }
      if (native_ != null) {
        size += _single_native_codec.CalculateSizeWithTag(Native);
      }
      if (capital_ != null) {
        size += _single_capital_codec.CalculateSizeWithTag(Capital);
      }
      if (currency_ != null) {
        size += _single_currency_codec.CalculateSizeWithTag(Currency);
      }
      if (phoneCode_ != null) {
        size += _single_phoneCode_codec.CalculateSizeWithTag(PhoneCode);
      }
      if (emoji_ != null) {
        size += _single_emoji_codec.CalculateSizeWithTag(Emoji);
      }
      if (emojiU_ != null) {
        size += _single_emojiU_codec.CalculateSizeWithTag(EmojiU);
      }
      if (wikiDataId_ != null) {
        size += _single_wikiDataId_codec.CalculateSizeWithTag(WikiDataId);
      }
      if (continent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Continent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountryStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ContinentId != 0) {
        ContinentId = other.ContinentId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.iso2_ != null) {
        if (iso2_ == null || other.Iso2 != "") {
          Iso2 = other.Iso2;
        }
      }
      if (other.iso3_ != null) {
        if (iso3_ == null || other.Iso3 != "") {
          Iso3 = other.Iso3;
        }
      }
      if (other.native_ != null) {
        if (native_ == null || other.Native != "") {
          Native = other.Native;
        }
      }
      if (other.capital_ != null) {
        if (capital_ == null || other.Capital != "") {
          Capital = other.Capital;
        }
      }
      if (other.currency_ != null) {
        if (currency_ == null || other.Currency != "") {
          Currency = other.Currency;
        }
      }
      if (other.phoneCode_ != null) {
        if (phoneCode_ == null || other.PhoneCode != "") {
          PhoneCode = other.PhoneCode;
        }
      }
      if (other.emoji_ != null) {
        if (emoji_ == null || other.Emoji != "") {
          Emoji = other.Emoji;
        }
      }
      if (other.emojiU_ != null) {
        if (emojiU_ == null || other.EmojiU != "") {
          EmojiU = other.EmojiU;
        }
      }
      if (other.wikiDataId_ != null) {
        if (wikiDataId_ == null || other.WikiDataId != "") {
          WikiDataId = other.WikiDataId;
        }
      }
      if (other.continent_ != null) {
        if (continent_ == null) {
          Continent = new global::DbData.Protos.ContinentStruct();
        }
        Continent.MergeFrom(other.Continent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ContinentId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            string value = _single_iso2_codec.Read(input);
            if (iso2_ == null || value != "") {
              Iso2 = value;
            }
            break;
          }
          case 42: {
            string value = _single_iso3_codec.Read(input);
            if (iso3_ == null || value != "") {
              Iso3 = value;
            }
            break;
          }
          case 50: {
            string value = _single_capital_codec.Read(input);
            if (capital_ == null || value != "") {
              Capital = value;
            }
            break;
          }
          case 58: {
            string value = _single_currency_codec.Read(input);
            if (currency_ == null || value != "") {
              Currency = value;
            }
            break;
          }
          case 66: {
            string value = _single_native_codec.Read(input);
            if (native_ == null || value != "") {
              Native = value;
            }
            break;
          }
          case 74: {
            string value = _single_emoji_codec.Read(input);
            if (emoji_ == null || value != "") {
              Emoji = value;
            }
            break;
          }
          case 82: {
            string value = _single_emojiU_codec.Read(input);
            if (emojiU_ == null || value != "") {
              EmojiU = value;
            }
            break;
          }
          case 90: {
            string value = _single_wikiDataId_codec.Read(input);
            if (wikiDataId_ == null || value != "") {
              WikiDataId = value;
            }
            break;
          }
          case 98: {
            string value = _single_phoneCode_codec.Read(input);
            if (phoneCode_ == null || value != "") {
              PhoneCode = value;
            }
            break;
          }
          case 106: {
            if (continent_ == null) {
              Continent = new global::DbData.Protos.ContinentStruct();
            }
            input.ReadMessage(Continent);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ContinentId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            string value = _single_iso2_codec.Read(ref input);
            if (iso2_ == null || value != "") {
              Iso2 = value;
            }
            break;
          }
          case 42: {
            string value = _single_iso3_codec.Read(ref input);
            if (iso3_ == null || value != "") {
              Iso3 = value;
            }
            break;
          }
          case 50: {
            string value = _single_capital_codec.Read(ref input);
            if (capital_ == null || value != "") {
              Capital = value;
            }
            break;
          }
          case 58: {
            string value = _single_currency_codec.Read(ref input);
            if (currency_ == null || value != "") {
              Currency = value;
            }
            break;
          }
          case 66: {
            string value = _single_native_codec.Read(ref input);
            if (native_ == null || value != "") {
              Native = value;
            }
            break;
          }
          case 74: {
            string value = _single_emoji_codec.Read(ref input);
            if (emoji_ == null || value != "") {
              Emoji = value;
            }
            break;
          }
          case 82: {
            string value = _single_emojiU_codec.Read(ref input);
            if (emojiU_ == null || value != "") {
              EmojiU = value;
            }
            break;
          }
          case 90: {
            string value = _single_wikiDataId_codec.Read(ref input);
            if (wikiDataId_ == null || value != "") {
              WikiDataId = value;
            }
            break;
          }
          case 98: {
            string value = _single_phoneCode_codec.Read(ref input);
            if (phoneCode_ == null || value != "") {
              PhoneCode = value;
            }
            break;
          }
          case 106: {
            if (continent_ == null) {
              Continent = new global::DbData.Protos.ContinentStruct();
            }
            input.ReadMessage(Continent);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CountryFilter : pb::IMessage<CountryFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CountryFilter> _parser = new pb::MessageParser<CountryFilter>(() => new CountryFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountryFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgCountryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryFilter(CountryFilter other) : this() {
      paging_ = other.paging_ != null ? other.paging_.Clone() : null;
      sort_ = other.sort_ != null ? other.sort_.Clone() : null;
      Name = other.Name;
      continentId_ = other.continentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryFilter Clone() {
      return new CountryFilter(this);
    }

    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 1;
    private global::DbData.Protos.PagingType paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.PagingType Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 2;
    private global::DbData.Protos.SortType sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.SortType Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "continentId" field.</summary>
    public const int ContinentIdFieldNumber = 4;
    private int continentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContinentId {
      get { return continentId_; }
      set {
        continentId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountryFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountryFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Paging, other.Paging)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (Name != other.Name) return false;
      if (ContinentId != other.ContinentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (paging_ != null) hash ^= Paging.GetHashCode();
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (ContinentId != 0) hash ^= ContinentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (ContinentId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ContinentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(ref output, Name);
      }
      if (ContinentId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ContinentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (paging_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
      }
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (ContinentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContinentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountryFilter other) {
      if (other == null) {
        return;
      }
      if (other.paging_ != null) {
        if (paging_ == null) {
          Paging = new global::DbData.Protos.PagingType();
        }
        Paging.MergeFrom(other.Paging);
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          Sort = new global::DbData.Protos.SortType();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.ContinentId != 0) {
        ContinentId = other.ContinentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 32: {
            ContinentId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(ref input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 32: {
            ContinentId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListCountryResponse : pb::IMessage<ListCountryResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListCountryResponse> _parser = new pb::MessageParser<ListCountryResponse>(() => new ListCountryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCountryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgCountryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCountryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCountryResponse(ListCountryResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCountryResponse Clone() {
      return new ListCountryResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DbData.Protos.CountryStruct> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::DbData.Protos.CountryStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.CountryStruct> data_ = new pbc::RepeatedField<global::DbData.Protos.CountryStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.CountryStruct> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCountryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCountryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCountryResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
