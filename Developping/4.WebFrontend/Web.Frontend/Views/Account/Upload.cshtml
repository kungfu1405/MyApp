@model EExperience
@{
    try
    {
        //ViewData["Title"] = Model.ExperienceLanguage.Title;
    }
    catch
    {
        ViewData["Title"] = "Upload";
    }
}
<style>
    .card-upload {
        display: none;
    }
</style>
<div class="container">
    @try
    {
        @foreach (var session in Model.ExperienceSessions)
        {
            <div id="@(session.Id)" class="col-lg-9 col-md-9 col-xl-9 col-sm-12 ex-edit" style="margin: 0 auto;position: relative;">
                <div class="ex-content">
                    <h2>@(session.Title)</h2>
                    <p class="ex-author">By Pickpack Consultant | Published @Model.PublishDate.ToString("MMM dd, yyyy") | 3 Minute Read</p>
                    <p class="ex-date">
                        8 282 km from Hanoi . Visited in @session.CreateDate.ToString("MMM") . Lasted 3 days . Traveled by Plane . $$$
                    </p>
                    <div class="ex-thumb">
                        @if (session.Images.Count() > 1)
                        {
                            var sessId = string.Format("Exp-slide-{0}", session.Id);
                            var countImg = 0;
                            var countInd = 0;
                            <div id="@sessId" class="carousel slide" data-interval="false" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    @foreach (var imgSession in session.Images)
                                    {
                                        countInd++;
                                        <li data-target="#@sessId" data-slide-to="@countInd" class="@(countInd == 1 ? "active" : "")"></li>
                                    }
                                    
                                </ol>
                                <div class="carousel-inner">
                                    @foreach (var imgSession in session.Images)
                                    {
                                        countImg++;
                                        <div class="carousel-item @(countImg == 1 ? "active" : "")">
                                            <img class="d-block w-100" src="@(String.Format("{0}{1}", UrlList.FileServer, imgSession.ImagerUrl))" alt="@System.IO.Path.GetFileName(imgSession.ImagerUrl)">
                                        </div>
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#@sessId" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#@sessId" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        }
                        else
                        {
                            var firstSession = session.Images.FirstOrDefault();
                            <img style="margin-bottom: 5px;" src="@(firstSession != null ? String.Format("{0}{1}", UrlList.FileServer, firstSession.ImagerUrl) : "")" />
                        }
                    </div>
                    <div class="ex-des">
                        @Html.Raw(session.Detail)
                    </div>
                    <div class="ex-edit-setting">
                        <a class="ex-edit-session" data-edited="0" onclick="editSession('@(session.Id)', this)">Edit</a>
                        <a class="ex-delete-session" onclick="deleteSession('@(session.Id)')">Delete</a>
                    </div>

                    <a class="ex-read-more" alt-show="more" onclick="readMore(this)">[Read More]</a>
                </div>
            </div>
        }
        <div class="card-add">
            <a title="Add New Session" onclick="scrollToUpload('#session-upload')">+</a>
        </div>
    }
    catch
    {

    }

    <div id="session-upload" class="gutter-b example example-compact col-lg-9 col-md-9 col-xl-9 col-sm-12 ex-upload" style="margin: 0 auto;position: relative;">
        <div class="card card-custom" id="first-card" style="margin-bottom: 50px;">
            <form id="frmUpload">
                <div class="card-body">
                    <div class="form-group row">
                        <div class="col-12">
                            <input type="text" id="upload_title" required placeholder="Add a Title" class="form-control shadow-none" name="txtTitle" />
                        </div>
                        <div class="col-sm-12 col-lg-6 col-md-6  my-select2">                            
                            <select class="form-control" id="mySelect2_destination" ></select>                            
                        </div>
                        
                        <div class="col-sm-12 col-lg-6 col-md-6 my-select2">                            
                            <select class="js-example-basic-single js-states form-control" id="mySelect2_attraction"></select>
                        </div>
                    </div>
                    <div class="form-group row" style="padding-left: 15px;">
                        <div class="col-12">
                            <div id="editor"></div>
                        </div>
                        @*<div class="col-12">
                <a style="font-size: 14px;color: #3699FF;font-weight: bold;">Pin to a Location</a>
            </div>*@
                    </div>

                    <div class="form-group dropzone row dropzone-box dropzone-box_1" style="padding-left: 15px;">
                        <div class="upload-image" style="float: left;">
                            <div class="dropzone dropzone-default idDropzone" id="kt_dropzone_2">
                                <div class="dropzone-msg dz-message needsclick">
                                    <h3 class="dropzone-msg-title">+ Add Photos</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <a class="" id="btnUpload" style="float: right;">Publish</a>
                    </div>           
                </div>
            </form>
        </div>
        <div class="addSession">
            <a class="addBtn" data-sess="1" onclick="addSession(this)">+</a>
            <span>1</span>
        </div>
    </div>
</div>
<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" id="mi-modal">
    <div class="modal-dialog modal-lg modal-sm modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <h4 class="modal-title" style="text-align: center;width: 100%;" id="myModalLabel">Are You Sure To Delete This Section ?</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="modal-btn-si">YES</button>
                <button type="button" class="btn btn-primary" id="modal-btn-no">NO</button>
            </div>
        </div>
    </div>
</div>
<script src="~/js/quill.js"></script>
<script src="~/js/dropzone.js"></script>
<link href="~/css/dropzone.css" rel="stylesheet" type="text/css">
<link href="~/css/quill.snow.css" rel="stylesheet" type="text/css">
@*<script src="~/js/upload.js"></script>*@
<script src="https://cdn.jsdelivr.net/npm/bootstrap-4-autocomplete/dist/bootstrap-4-autocomplete.min.js" crossorigin="anonymous"></script>

<script type="text/javascript">

    Dropzone.autoDiscover = false;
    var dataFiles = [];
    var editFiles = [];
    var expId = "@(Model != null && Model.Id != Guid.Empty ? Model.Id : string.Empty) ";

    $(document).ready(function () {
        activeNavBar("nav_post");

        $("#upload_title").on("change", function () {
            if ($("#upload_title").val().length > 0) {
                $("#btnUpload").addClass("active");
            }
            else {
                $("#btnUpload").removeClass("active");
            }
        });

        var quill = new Quill('#editor', {
            modules: {
                    toolbar: false
            },
            placeholder: 'Add a Description',
            theme: 'snow'
        });
        var id = '#kt_dropzone_2';
        // multiple file upload
        var myDropzone2 = new Dropzone(id, {
            url: "@(string.Format("{0}/api/file/upload", UrlList.FileServer))", // Set the url for your upload script location
            paramName: "file", // The name that will be used to transfer the file
            maxFiles: 10,
            maxFilesize: 10, // MB
            autoQueue: false,
            addRemoveLinks: true,
            thumbnailWidth: 250,
            thumbnailHeight: 250,
            acceptedFiles: ".jpeg,.jpg,.png,.gif",
            previewsContainer: ".dropzone-box_1"
        });

        myDropzone2.on("addedfiles", function (file) {
            var dataFr = new FormData();

            $.each(myDropzone2.files, function (i, file) {
                    dataFr.append('file', file);
                });

                if (myDropzone2.files.length == 0) {
                    alert("You should be select any file");
                } else if (myDropzone2.getRejectedFiles().length > 0) {
                    alert("The attached file is invalid");
                } else {
                    //console.log(myDropzone2); return;
                    myDropzone2.processQueue();
                $.ajax({
                    url: "@(string.Format("{0}/api/file/upload", UrlList.FileServer))",
                    type: "POST",
                    data: dataFr,
                    processData: false,
                    contentType: false,
                    enctype: "multipart/form-data",
                    beforeSend: function () {

                        },
                    success: function (data, textStatus, xhr) {
                            if (data.length > 0) {
                                dataFiles = data;
                            }
                        },
                    error: function () {

                        }
                    });
                }
            });

        // Setup the buttons for all transfers
        document.querySelector("#btnUpload").onclick = function (e) {
            e.preventDefault();
            var parent = $(this).parents();

                var txtTitle = $("input#upload_title").val();
                //var des = $("#txtDes").val();
                var des = quill.getText();
                var regex = /(<([^>]+)>)/ig
                 hasText = !!des.replace(regex, "").length;

                var errMess = "";

                if (txtTitle.length <= 0) {
                    errMess = "Please Input Title!";
                }
                else if (!hasText) {
                    errMess = "Please Input Description!";
                }
                //else if (myDropzone2.files.length == 0) {
                //    errMess = "Please Select Any File!";
                //}

                if (errMess.length > 0) {
                $(".txtStt_Upload").empty().removeClass("text-success").addClass("text-danger").html(errMess);
                    return;
                }

                var data = {
                    title: txtTitle,
                    description: des,
                    files: dataFiles,
                    experienceId: expId
                };

            $.ajax({
            url: "/Session/Upload",
                type: "POST",
                data: data,
                //dataType: "json",
                beforeSend: function () {
                    //$(".txtStt_Upload").removeClass("text-danger").removeClass("text-success").empty().html("Uploading ...");
                    $("#btnUpload").css("display", "none");
                },
                success: function (data, textStatus, xhr) {
                    if (data.status == 1) {
                        notifi("success", "Upload Success!")
                        myDropzone2.removeAllFiles(true);
                        $("#frmUpload").trigger("reset");
                        quill.setText('');
                        expId = data.data.experienceId;

                        if (data.data.images.length > 0) {
                            getSession(data.data.id, data.data.title, data.data.detail, data.data.images);
                        }
                        else {
                            getSession(data.data.id, data.data.title, data.data.detail, "");
                        }

                    }
                    else {
                        notifi("error", "Upload Fail!");
                        //$(".txtStt_Upload").empty().removeClass("text-success").addClass("text-danger").html("Upload Fail!");
                    }
                },
                error: function () {
                    notifi("error", "Upload Fail. Please Contact Admin!");
                    //$(".txtStt_Upload").empty().removeClass("text-success").addClass("text-danger").html("Upload Fail. Please Contact Admin.");
                },
                complete : function () {
                    $("#btnUpload").css("display", "block");
                }
            });

        };

        myDropzone2.on("removedfile", function (file) {
            if (myDropzone2.files.length < 1) {
                $("form[name=kt_dropzone_2] .dropzone-upload, form[name=kt_dropzone_2] .dropzone-remove-all").css('display', 'none');
            }
        });
        var countries = ["Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Anguilla", "Antigua & Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan",
            "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan"];
        var src = {
            "Bootstrap 4 Autocomplete example": 1,
            "Best example in the world": 2,
            "Bootstrap 4 Autocomplete is very nice": 3,
            "It contains neatly arranged example items": 4,
            "With many autocomplete values": 5,
            "And it uses default Bootstrap 4 components": 6,
            "You can use this example to test": 7,
        }



        function onSelectItem(item, element) {
            $('#output').html(
                'Element <b>' + $(element).attr('id') + '</b> was selected<br/>' +
                '<b>Value:</b> ' + item.value + ' - <b>Label:</b> ' + item.label
            );
        }

        //$('#upload_Destination').autocomplete({
        //    source: src,
        //    //onSelectItem: onSelectItem,
        //    highlightClass: 'text-default'
        //});
        //source: @Url.Action("Search", "Destination"),

        @*$('#mySelect2').select2({
            ajax: {
                url:  @Url.Action("Search", "Destination"),
                data: function (params) {
                    var query = {
                        search: params.term,
                        type: 'public'
                    }

                    return query;
                }
            }
        });*@

       $("#mySelect2_destination").select2({
            minimumInputLength: 2,
             allowClear: true,
             placeholder: 'Pin to your Destination',
            ajax: {
                url: '@Url.Action("Destination", "Search")',
                dataType: 'json',
                delay: 250,
                cache: true,
                data: function (params) {
                    var queryParameters = {
                        keyword: params.term,
                    }
                    return queryParameters;
                },
                processResults: function (data, params) {
                    return { results: data };
                }
            }
        }).on('change', function () {
            $(this).trigger('blur');
        });


        $("#mySelect2_attraction").select2({
            minimumInputLength: 2,
             allowClear: true,
             placeholder: 'Pin to your attraction',
            ajax: {
                url: '@Url.Action("Attraction", "Search")',
                dataType: 'json',
                delay: 250,
                cache: true,
                data: function (params) {
                    var destinationId = $("#mySelect2_destination").val();
                    //debugger
                    var queryParameters = {
                        keyword: params.term,
                        destinationId: destinationId != null ? destinationId: null
                    }
                    return queryParameters;
                },
                processResults: function (data, params) {
                    return { results: data };
                }
            }
        }).on('change', function () {
            $(this).trigger('blur');
        });
    });

</script>
@await Html.PartialAsync("../Shared/_EditSession.cshtml")
