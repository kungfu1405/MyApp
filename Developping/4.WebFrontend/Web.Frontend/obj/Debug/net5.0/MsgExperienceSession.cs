// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgExperienceSession.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DbData.Protos {

  /// <summary>Holder for reflection information generated from msgExperienceSession.proto</summary>
  public static partial class MsgExperienceSessionReflection {

    #region Descriptor
    /// <summary>File descriptor for msgExperienceSession.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgExperienceSessionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chptc2dFeHBlcmllbmNlU2Vzc2lvbi5wcm90bxIGZGJkYXRhGh5nb29nbGUv",
            "cHJvdG9idWYvd3JhcHBlcnMucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1l",
            "c3RhbXAucHJvdG8aFW1zZ0RiRGF0YUNvbW1vbi5wcm90bxoTbXNnQXR0cmFj",
            "dGlvbi5wcm90byKwBQoXRXhwZXJpZW5jZVNlc3Npb25TdHJ1Y3QSKAoCaWQY",
            "ASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMZXhwZXJp",
            "ZW5jZUlkGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhAK",
            "CGxhbmdDb2RlGAMgASgJEjIKDGF0dHJhY3Rpb25JZBgEIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI2ChBkZWZhdWx0R2FsbGVyeUlkGAUg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhgKEGltYWdlRGlz",
            "cGxheVR5cGUYBiABKAUSKwoFdGl0bGUYByABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSLgoIc3ViVGl0bGUYCCABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSLAoGZGV0YWlsGAkgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEjEKC3RyYW5zbGF0ZUJ5GAogASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEiwKBnVzZXJJZBgLIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIOCgZzdGF0dXMYDCABKAUSDwoH",
            "b3JkaW5hbBgNIAEoBRI0CgZpbWFnZXMYDiADKAsyJC5kYmRhdGEuRXhwZXJp",
            "ZW5jZVNlc3Npb25JbWFnZVN0cnVjdBIsCgphdHRyYWN0aW9uGA8gASgLMhgu",
            "ZGJkYXRhLkF0dHJhY3Rpb25TdHJ1Y3QSLgoKY3JlYXRlRGF0ZRgQIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAi2wEKHEV4cGVyaWVuY2VTZXNz",
            "aW9uSW1hZ2VTdHJ1Y3QSKAoCaWQYASABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSMgoMZXhwZXJpZW5jZUlkGAIgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEjkKE2V4cGVyaWVuY2VTZXNzaW9uSWQYAyAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEQoJSW1hZ2VyVXJs",
            "GAQgASgJEg8KB29yZGluYWwYBSABKAUidwoZRXhwZXJpZW5jZVNlc3Npb25S",
            "ZXNwb25zZRIwCgdzZXNzaW9uGAEgASgLMh8uZGJkYXRhLkV4cGVyaWVuY2VT",
            "ZXNzaW9uU3RydWN0EigKB21lc3NhZ2UYAiABKAsyFy5kYmRhdGEuUmVzcG9u",
            "c2VNZXNzYWdlImQKHUxpc3RFeHBlcmllbmNlU2Vzc2lvblJlc3BvbnNlEhQK",
            "DHRvdGFsUmVjb3JkcxgBIAEoBRItCgREYXRhGAIgAygLMh8uZGJkYXRhLkV4",
            "cGVyaWVuY2VTZXNzaW9uU3RydWN0QhCqAg1EYkRhdGEuUHJvdG9zYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::DbData.Protos.MsgDbDataCommonReflection.Descriptor, global::DbData.Protos.MsgAttractionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ExperienceSessionStruct), global::DbData.Protos.ExperienceSessionStruct.Parser, new[]{ "Id", "ExperienceId", "LangCode", "AttractionId", "DefaultGalleryId", "ImageDisplayType", "Title", "SubTitle", "Detail", "TranslateBy", "UserId", "Status", "Ordinal", "Images", "Attraction", "CreateDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ExperienceSessionImageStruct), global::DbData.Protos.ExperienceSessionImageStruct.Parser, new[]{ "Id", "ExperienceId", "ExperienceSessionId", "ImagerUrl", "Ordinal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ExperienceSessionResponse), global::DbData.Protos.ExperienceSessionResponse.Parser, new[]{ "Session", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ListExperienceSessionResponse), global::DbData.Protos.ListExperienceSessionResponse.Parser, new[]{ "TotalRecords", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ExperienceSessionStruct : pb::IMessage<ExperienceSessionStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExperienceSessionStruct> _parser = new pb::MessageParser<ExperienceSessionStruct>(() => new ExperienceSessionStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperienceSessionStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceSessionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionStruct(ExperienceSessionStruct other) : this() {
      Id = other.Id;
      ExperienceId = other.ExperienceId;
      langCode_ = other.langCode_;
      AttractionId = other.AttractionId;
      DefaultGalleryId = other.DefaultGalleryId;
      imageDisplayType_ = other.imageDisplayType_;
      Title = other.Title;
      SubTitle = other.SubTitle;
      Detail = other.Detail;
      TranslateBy = other.TranslateBy;
      UserId = other.UserId;
      status_ = other.status_;
      ordinal_ = other.ordinal_;
      images_ = other.images_.Clone();
      attraction_ = other.attraction_ != null ? other.attraction_.Clone() : null;
      createDate_ = other.createDate_ != null ? other.createDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionStruct Clone() {
      return new ExperienceSessionStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "experienceId" field.</summary>
    public const int ExperienceIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_experienceId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string experienceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExperienceId {
      get { return experienceId_; }
      set {
        experienceId_ = value;
      }
    }


    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 3;
    private string langCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attractionId" field.</summary>
    public const int AttractionIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_attractionId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string attractionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttractionId {
      get { return attractionId_; }
      set {
        attractionId_ = value;
      }
    }


    /// <summary>Field number for the "defaultGalleryId" field.</summary>
    public const int DefaultGalleryIdFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_defaultGalleryId_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string defaultGalleryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultGalleryId {
      get { return defaultGalleryId_; }
      set {
        defaultGalleryId_ = value;
      }
    }


    /// <summary>Field number for the "imageDisplayType" field.</summary>
    public const int ImageDisplayTypeFieldNumber = 6;
    private int imageDisplayType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageDisplayType {
      get { return imageDisplayType_; }
      set {
        imageDisplayType_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_title_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }


    /// <summary>Field number for the "subTitle" field.</summary>
    public const int SubTitleFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_subTitle_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string subTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubTitle {
      get { return subTitle_; }
      set {
        subTitle_ = value;
      }
    }


    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_detail_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string detail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }


    /// <summary>Field number for the "translateBy" field.</summary>
    public const int TranslateByFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_translateBy_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string translateBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TranslateBy {
      get { return translateBy_; }
      set {
        translateBy_ = value;
      }
    }


    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_userId_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }


    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 12;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ordinal" field.</summary>
    public const int OrdinalFieldNumber = 13;
    private int ordinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ordinal {
      get { return ordinal_; }
      set {
        ordinal_ = value;
      }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 14;
    private static readonly pb::FieldCodec<global::DbData.Protos.ExperienceSessionImageStruct> _repeated_images_codec
        = pb::FieldCodec.ForMessage(114, global::DbData.Protos.ExperienceSessionImageStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.ExperienceSessionImageStruct> images_ = new pbc::RepeatedField<global::DbData.Protos.ExperienceSessionImageStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.ExperienceSessionImageStruct> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "attraction" field.</summary>
    public const int AttractionFieldNumber = 15;
    private global::DbData.Protos.AttractionStruct attraction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.AttractionStruct Attraction {
      get { return attraction_; }
      set {
        attraction_ = value;
      }
    }

    /// <summary>Field number for the "createDate" field.</summary>
    public const int CreateDateFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateDate {
      get { return createDate_; }
      set {
        createDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperienceSessionStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperienceSessionStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExperienceId != other.ExperienceId) return false;
      if (LangCode != other.LangCode) return false;
      if (AttractionId != other.AttractionId) return false;
      if (DefaultGalleryId != other.DefaultGalleryId) return false;
      if (ImageDisplayType != other.ImageDisplayType) return false;
      if (Title != other.Title) return false;
      if (SubTitle != other.SubTitle) return false;
      if (Detail != other.Detail) return false;
      if (TranslateBy != other.TranslateBy) return false;
      if (UserId != other.UserId) return false;
      if (Status != other.Status) return false;
      if (Ordinal != other.Ordinal) return false;
      if(!images_.Equals(other.images_)) return false;
      if (!object.Equals(Attraction, other.Attraction)) return false;
      if (!object.Equals(CreateDate, other.CreateDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (experienceId_ != null) hash ^= ExperienceId.GetHashCode();
      if (LangCode.Length != 0) hash ^= LangCode.GetHashCode();
      if (attractionId_ != null) hash ^= AttractionId.GetHashCode();
      if (defaultGalleryId_ != null) hash ^= DefaultGalleryId.GetHashCode();
      if (ImageDisplayType != 0) hash ^= ImageDisplayType.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (subTitle_ != null) hash ^= SubTitle.GetHashCode();
      if (detail_ != null) hash ^= Detail.GetHashCode();
      if (translateBy_ != null) hash ^= TranslateBy.GetHashCode();
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Ordinal != 0) hash ^= Ordinal.GetHashCode();
      hash ^= images_.GetHashCode();
      if (attraction_ != null) hash ^= Attraction.GetHashCode();
      if (createDate_ != null) hash ^= CreateDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (experienceId_ != null) {
        _single_experienceId_codec.WriteTagAndValue(output, ExperienceId);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LangCode);
      }
      if (attractionId_ != null) {
        _single_attractionId_codec.WriteTagAndValue(output, AttractionId);
      }
      if (defaultGalleryId_ != null) {
        _single_defaultGalleryId_codec.WriteTagAndValue(output, DefaultGalleryId);
      }
      if (ImageDisplayType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ImageDisplayType);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(output, Title);
      }
      if (subTitle_ != null) {
        _single_subTitle_codec.WriteTagAndValue(output, SubTitle);
      }
      if (detail_ != null) {
        _single_detail_codec.WriteTagAndValue(output, Detail);
      }
      if (translateBy_ != null) {
        _single_translateBy_codec.WriteTagAndValue(output, TranslateBy);
      }
      if (userId_ != null) {
        _single_userId_codec.WriteTagAndValue(output, UserId);
      }
      if (Status != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Status);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Ordinal);
      }
      images_.WriteTo(output, _repeated_images_codec);
      if (attraction_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Attraction);
      }
      if (createDate_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (experienceId_ != null) {
        _single_experienceId_codec.WriteTagAndValue(ref output, ExperienceId);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LangCode);
      }
      if (attractionId_ != null) {
        _single_attractionId_codec.WriteTagAndValue(ref output, AttractionId);
      }
      if (defaultGalleryId_ != null) {
        _single_defaultGalleryId_codec.WriteTagAndValue(ref output, DefaultGalleryId);
      }
      if (ImageDisplayType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ImageDisplayType);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(ref output, Title);
      }
      if (subTitle_ != null) {
        _single_subTitle_codec.WriteTagAndValue(ref output, SubTitle);
      }
      if (detail_ != null) {
        _single_detail_codec.WriteTagAndValue(ref output, Detail);
      }
      if (translateBy_ != null) {
        _single_translateBy_codec.WriteTagAndValue(ref output, TranslateBy);
      }
      if (userId_ != null) {
        _single_userId_codec.WriteTagAndValue(ref output, UserId);
      }
      if (Status != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Status);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Ordinal);
      }
      images_.WriteTo(ref output, _repeated_images_codec);
      if (attraction_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Attraction);
      }
      if (createDate_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (experienceId_ != null) {
        size += _single_experienceId_codec.CalculateSizeWithTag(ExperienceId);
      }
      if (LangCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangCode);
      }
      if (attractionId_ != null) {
        size += _single_attractionId_codec.CalculateSizeWithTag(AttractionId);
      }
      if (defaultGalleryId_ != null) {
        size += _single_defaultGalleryId_codec.CalculateSizeWithTag(DefaultGalleryId);
      }
      if (ImageDisplayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageDisplayType);
      }
      if (title_ != null) {
        size += _single_title_codec.CalculateSizeWithTag(Title);
      }
      if (subTitle_ != null) {
        size += _single_subTitle_codec.CalculateSizeWithTag(SubTitle);
      }
      if (detail_ != null) {
        size += _single_detail_codec.CalculateSizeWithTag(Detail);
      }
      if (translateBy_ != null) {
        size += _single_translateBy_codec.CalculateSizeWithTag(TranslateBy);
      }
      if (userId_ != null) {
        size += _single_userId_codec.CalculateSizeWithTag(UserId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Ordinal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ordinal);
      }
      size += images_.CalculateSize(_repeated_images_codec);
      if (attraction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attraction);
      }
      if (createDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperienceSessionStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.experienceId_ != null) {
        if (experienceId_ == null || other.ExperienceId != "") {
          ExperienceId = other.ExperienceId;
        }
      }
      if (other.LangCode.Length != 0) {
        LangCode = other.LangCode;
      }
      if (other.attractionId_ != null) {
        if (attractionId_ == null || other.AttractionId != "") {
          AttractionId = other.AttractionId;
        }
      }
      if (other.defaultGalleryId_ != null) {
        if (defaultGalleryId_ == null || other.DefaultGalleryId != "") {
          DefaultGalleryId = other.DefaultGalleryId;
        }
      }
      if (other.ImageDisplayType != 0) {
        ImageDisplayType = other.ImageDisplayType;
      }
      if (other.title_ != null) {
        if (title_ == null || other.Title != "") {
          Title = other.Title;
        }
      }
      if (other.subTitle_ != null) {
        if (subTitle_ == null || other.SubTitle != "") {
          SubTitle = other.SubTitle;
        }
      }
      if (other.detail_ != null) {
        if (detail_ == null || other.Detail != "") {
          Detail = other.Detail;
        }
      }
      if (other.translateBy_ != null) {
        if (translateBy_ == null || other.TranslateBy != "") {
          TranslateBy = other.TranslateBy;
        }
      }
      if (other.userId_ != null) {
        if (userId_ == null || other.UserId != "") {
          UserId = other.UserId;
        }
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Ordinal != 0) {
        Ordinal = other.Ordinal;
      }
      images_.Add(other.images_);
      if (other.attraction_ != null) {
        if (attraction_ == null) {
          Attraction = new global::DbData.Protos.AttractionStruct();
        }
        Attraction.MergeFrom(other.Attraction);
      }
      if (other.createDate_ != null) {
        if (createDate_ == null) {
          CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateDate.MergeFrom(other.CreateDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_experienceId_codec.Read(input);
            if (experienceId_ == null || value != "") {
              ExperienceId = value;
            }
            break;
          }
          case 26: {
            LangCode = input.ReadString();
            break;
          }
          case 34: {
            string value = _single_attractionId_codec.Read(input);
            if (attractionId_ == null || value != "") {
              AttractionId = value;
            }
            break;
          }
          case 42: {
            string value = _single_defaultGalleryId_codec.Read(input);
            if (defaultGalleryId_ == null || value != "") {
              DefaultGalleryId = value;
            }
            break;
          }
          case 48: {
            ImageDisplayType = input.ReadInt32();
            break;
          }
          case 58: {
            string value = _single_title_codec.Read(input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 66: {
            string value = _single_subTitle_codec.Read(input);
            if (subTitle_ == null || value != "") {
              SubTitle = value;
            }
            break;
          }
          case 74: {
            string value = _single_detail_codec.Read(input);
            if (detail_ == null || value != "") {
              Detail = value;
            }
            break;
          }
          case 82: {
            string value = _single_translateBy_codec.Read(input);
            if (translateBy_ == null || value != "") {
              TranslateBy = value;
            }
            break;
          }
          case 90: {
            string value = _single_userId_codec.Read(input);
            if (userId_ == null || value != "") {
              UserId = value;
            }
            break;
          }
          case 96: {
            Status = input.ReadInt32();
            break;
          }
          case 104: {
            Ordinal = input.ReadInt32();
            break;
          }
          case 114: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 122: {
            if (attraction_ == null) {
              Attraction = new global::DbData.Protos.AttractionStruct();
            }
            input.ReadMessage(Attraction);
            break;
          }
          case 130: {
            if (createDate_ == null) {
              CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateDate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_experienceId_codec.Read(ref input);
            if (experienceId_ == null || value != "") {
              ExperienceId = value;
            }
            break;
          }
          case 26: {
            LangCode = input.ReadString();
            break;
          }
          case 34: {
            string value = _single_attractionId_codec.Read(ref input);
            if (attractionId_ == null || value != "") {
              AttractionId = value;
            }
            break;
          }
          case 42: {
            string value = _single_defaultGalleryId_codec.Read(ref input);
            if (defaultGalleryId_ == null || value != "") {
              DefaultGalleryId = value;
            }
            break;
          }
          case 48: {
            ImageDisplayType = input.ReadInt32();
            break;
          }
          case 58: {
            string value = _single_title_codec.Read(ref input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 66: {
            string value = _single_subTitle_codec.Read(ref input);
            if (subTitle_ == null || value != "") {
              SubTitle = value;
            }
            break;
          }
          case 74: {
            string value = _single_detail_codec.Read(ref input);
            if (detail_ == null || value != "") {
              Detail = value;
            }
            break;
          }
          case 82: {
            string value = _single_translateBy_codec.Read(ref input);
            if (translateBy_ == null || value != "") {
              TranslateBy = value;
            }
            break;
          }
          case 90: {
            string value = _single_userId_codec.Read(ref input);
            if (userId_ == null || value != "") {
              UserId = value;
            }
            break;
          }
          case 96: {
            Status = input.ReadInt32();
            break;
          }
          case 104: {
            Ordinal = input.ReadInt32();
            break;
          }
          case 114: {
            images_.AddEntriesFrom(ref input, _repeated_images_codec);
            break;
          }
          case 122: {
            if (attraction_ == null) {
              Attraction = new global::DbData.Protos.AttractionStruct();
            }
            input.ReadMessage(Attraction);
            break;
          }
          case 130: {
            if (createDate_ == null) {
              CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateDate);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExperienceSessionImageStruct : pb::IMessage<ExperienceSessionImageStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExperienceSessionImageStruct> _parser = new pb::MessageParser<ExperienceSessionImageStruct>(() => new ExperienceSessionImageStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperienceSessionImageStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceSessionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionImageStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionImageStruct(ExperienceSessionImageStruct other) : this() {
      Id = other.Id;
      ExperienceId = other.ExperienceId;
      ExperienceSessionId = other.ExperienceSessionId;
      imagerUrl_ = other.imagerUrl_;
      ordinal_ = other.ordinal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionImageStruct Clone() {
      return new ExperienceSessionImageStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "experienceId" field.</summary>
    public const int ExperienceIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_experienceId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string experienceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExperienceId {
      get { return experienceId_; }
      set {
        experienceId_ = value;
      }
    }


    /// <summary>Field number for the "experienceSessionId" field.</summary>
    public const int ExperienceSessionIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_experienceSessionId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string experienceSessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExperienceSessionId {
      get { return experienceSessionId_; }
      set {
        experienceSessionId_ = value;
      }
    }


    /// <summary>Field number for the "ImagerUrl" field.</summary>
    public const int ImagerUrlFieldNumber = 4;
    private string imagerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImagerUrl {
      get { return imagerUrl_; }
      set {
        imagerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ordinal" field.</summary>
    public const int OrdinalFieldNumber = 5;
    private int ordinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ordinal {
      get { return ordinal_; }
      set {
        ordinal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperienceSessionImageStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperienceSessionImageStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExperienceId != other.ExperienceId) return false;
      if (ExperienceSessionId != other.ExperienceSessionId) return false;
      if (ImagerUrl != other.ImagerUrl) return false;
      if (Ordinal != other.Ordinal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (experienceId_ != null) hash ^= ExperienceId.GetHashCode();
      if (experienceSessionId_ != null) hash ^= ExperienceSessionId.GetHashCode();
      if (ImagerUrl.Length != 0) hash ^= ImagerUrl.GetHashCode();
      if (Ordinal != 0) hash ^= Ordinal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (experienceId_ != null) {
        _single_experienceId_codec.WriteTagAndValue(output, ExperienceId);
      }
      if (experienceSessionId_ != null) {
        _single_experienceSessionId_codec.WriteTagAndValue(output, ExperienceSessionId);
      }
      if (ImagerUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImagerUrl);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Ordinal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (experienceId_ != null) {
        _single_experienceId_codec.WriteTagAndValue(ref output, ExperienceId);
      }
      if (experienceSessionId_ != null) {
        _single_experienceSessionId_codec.WriteTagAndValue(ref output, ExperienceSessionId);
      }
      if (ImagerUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImagerUrl);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Ordinal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (experienceId_ != null) {
        size += _single_experienceId_codec.CalculateSizeWithTag(ExperienceId);
      }
      if (experienceSessionId_ != null) {
        size += _single_experienceSessionId_codec.CalculateSizeWithTag(ExperienceSessionId);
      }
      if (ImagerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImagerUrl);
      }
      if (Ordinal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ordinal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperienceSessionImageStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.experienceId_ != null) {
        if (experienceId_ == null || other.ExperienceId != "") {
          ExperienceId = other.ExperienceId;
        }
      }
      if (other.experienceSessionId_ != null) {
        if (experienceSessionId_ == null || other.ExperienceSessionId != "") {
          ExperienceSessionId = other.ExperienceSessionId;
        }
      }
      if (other.ImagerUrl.Length != 0) {
        ImagerUrl = other.ImagerUrl;
      }
      if (other.Ordinal != 0) {
        Ordinal = other.Ordinal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_experienceId_codec.Read(input);
            if (experienceId_ == null || value != "") {
              ExperienceId = value;
            }
            break;
          }
          case 26: {
            string value = _single_experienceSessionId_codec.Read(input);
            if (experienceSessionId_ == null || value != "") {
              ExperienceSessionId = value;
            }
            break;
          }
          case 34: {
            ImagerUrl = input.ReadString();
            break;
          }
          case 40: {
            Ordinal = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_experienceId_codec.Read(ref input);
            if (experienceId_ == null || value != "") {
              ExperienceId = value;
            }
            break;
          }
          case 26: {
            string value = _single_experienceSessionId_codec.Read(ref input);
            if (experienceSessionId_ == null || value != "") {
              ExperienceSessionId = value;
            }
            break;
          }
          case 34: {
            ImagerUrl = input.ReadString();
            break;
          }
          case 40: {
            Ordinal = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExperienceSessionResponse : pb::IMessage<ExperienceSessionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExperienceSessionResponse> _parser = new pb::MessageParser<ExperienceSessionResponse>(() => new ExperienceSessionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperienceSessionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceSessionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionResponse(ExperienceSessionResponse other) : this() {
      session_ = other.session_ != null ? other.session_.Clone() : null;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceSessionResponse Clone() {
      return new ExperienceSessionResponse(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private global::DbData.Protos.ExperienceSessionStruct session_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.ExperienceSessionStruct Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::DbData.Protos.ResponseMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.ResponseMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperienceSessionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperienceSessionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Session, other.Session)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (session_ != null) hash ^= Session.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (session_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Session);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (session_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Session);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (session_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperienceSessionResponse other) {
      if (other == null) {
        return;
      }
      if (other.session_ != null) {
        if (session_ == null) {
          Session = new global::DbData.Protos.ExperienceSessionStruct();
        }
        Session.MergeFrom(other.Session);
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::DbData.Protos.ResponseMessage();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (session_ == null) {
              Session = new global::DbData.Protos.ExperienceSessionStruct();
            }
            input.ReadMessage(Session);
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::DbData.Protos.ResponseMessage();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (session_ == null) {
              Session = new global::DbData.Protos.ExperienceSessionStruct();
            }
            input.ReadMessage(Session);
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::DbData.Protos.ResponseMessage();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListExperienceSessionResponse : pb::IMessage<ListExperienceSessionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListExperienceSessionResponse> _parser = new pb::MessageParser<ListExperienceSessionResponse>(() => new ListExperienceSessionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListExperienceSessionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceSessionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExperienceSessionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExperienceSessionResponse(ListExperienceSessionResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExperienceSessionResponse Clone() {
      return new ListExperienceSessionResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DbData.Protos.ExperienceSessionStruct> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::DbData.Protos.ExperienceSessionStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.ExperienceSessionStruct> data_ = new pbc::RepeatedField<global::DbData.Protos.ExperienceSessionStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.ExperienceSessionStruct> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListExperienceSessionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListExperienceSessionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListExperienceSessionResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
