// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgState.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DbData.Protos {

  /// <summary>Holder for reflection information generated from msgState.proto</summary>
  public static partial class MsgStateReflection {

    #region Descriptor
    /// <summary>File descriptor for msgState.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgStateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tc2dTdGF0ZS5wcm90bxIGZGJkYXRhGh5nb29nbGUvcHJvdG9idWYvd3Jh",
            "cHBlcnMucHJvdG8aFW1zZ0RiRGF0YUNvbW1vbi5wcm90bxoQbXNnQ291bnRy",
            "eS5wcm90byKFAgoLU3RhdGVTdHJ1Y3QSCgoCaWQYASABKAUSDAoEbmFtZRgC",
            "IAEoCRIRCgljb3VudHJ5SWQYAyABKAUSEwoLY291bnRyeUNvZGUYBCABKAkS",
            "LgoIZmlwc0NvZGUYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSKgoEaXNvMhgGIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRIwCgp3aWtpRGF0YUlkGAcgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEiYKB2NvdW50cnkYCCABKAsyFS5kYmRhdGEuQ291bnRyeVN0cnVj",
            "dCKQAQoLU3RhdGVGaWx0ZXISIgoGcGFnaW5nGAEgASgLMhIuZGJkYXRhLlBh",
            "Z2luZ1R5cGUSHgoEc29ydBgCIAEoCzIQLmRiZGF0YS5Tb3J0VHlwZRIqCgRu",
            "YW1lGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhEKCWNv",
            "dW50cnlJZBgEIAEoBSJMChFMaXN0U3RhdGVSZXNwb25zZRIUCgx0b3RhbFJl",
            "Y29yZHMYASABKAUSIQoEZGF0YRgCIAMoCzITLmRiZGF0YS5TdGF0ZVN0cnVj",
            "dEIQqgINRGJEYXRhLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::DbData.Protos.MsgDbDataCommonReflection.Descriptor, global::DbData.Protos.MsgCountryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.StateStruct), global::DbData.Protos.StateStruct.Parser, new[]{ "Id", "Name", "CountryId", "CountryCode", "FipsCode", "Iso2", "WikiDataId", "Country" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.StateFilter), global::DbData.Protos.StateFilter.Parser, new[]{ "Paging", "Sort", "Name", "CountryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ListStateResponse), global::DbData.Protos.ListStateResponse.Parser, new[]{ "TotalRecords", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StateStruct : pb::IMessage<StateStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StateStruct> _parser = new pb::MessageParser<StateStruct>(() => new StateStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StateStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgStateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateStruct(StateStruct other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      countryId_ = other.countryId_;
      countryCode_ = other.countryCode_;
      FipsCode = other.FipsCode;
      Iso2 = other.Iso2;
      WikiDataId = other.WikiDataId;
      country_ = other.country_ != null ? other.country_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateStruct Clone() {
      return new StateStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 3;
    private int countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountryId {
      get { return countryId_; }
      set {
        countryId_ = value;
      }
    }

    /// <summary>Field number for the "countryCode" field.</summary>
    public const int CountryCodeFieldNumber = 4;
    private string countryCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fipsCode" field.</summary>
    public const int FipsCodeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_fipsCode_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string fipsCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FipsCode {
      get { return fipsCode_; }
      set {
        fipsCode_ = value;
      }
    }


    /// <summary>Field number for the "iso2" field.</summary>
    public const int Iso2FieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_iso2_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string iso2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iso2 {
      get { return iso2_; }
      set {
        iso2_ = value;
      }
    }


    /// <summary>Field number for the "wikiDataId" field.</summary>
    public const int WikiDataIdFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_wikiDataId_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string wikiDataId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WikiDataId {
      get { return wikiDataId_; }
      set {
        wikiDataId_ = value;
      }
    }


    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 8;
    private global::DbData.Protos.CountryStruct country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.CountryStruct Country {
      get { return country_; }
      set {
        country_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StateStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StateStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (CountryId != other.CountryId) return false;
      if (CountryCode != other.CountryCode) return false;
      if (FipsCode != other.FipsCode) return false;
      if (Iso2 != other.Iso2) return false;
      if (WikiDataId != other.WikiDataId) return false;
      if (!object.Equals(Country, other.Country)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CountryId != 0) hash ^= CountryId.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (fipsCode_ != null) hash ^= FipsCode.GetHashCode();
      if (iso2_ != null) hash ^= Iso2.GetHashCode();
      if (wikiDataId_ != null) hash ^= WikiDataId.GetHashCode();
      if (country_ != null) hash ^= Country.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (CountryId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CountryId);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CountryCode);
      }
      if (fipsCode_ != null) {
        _single_fipsCode_codec.WriteTagAndValue(output, FipsCode);
      }
      if (iso2_ != null) {
        _single_iso2_codec.WriteTagAndValue(output, Iso2);
      }
      if (wikiDataId_ != null) {
        _single_wikiDataId_codec.WriteTagAndValue(output, WikiDataId);
      }
      if (country_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Country);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (CountryId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CountryId);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CountryCode);
      }
      if (fipsCode_ != null) {
        _single_fipsCode_codec.WriteTagAndValue(ref output, FipsCode);
      }
      if (iso2_ != null) {
        _single_iso2_codec.WriteTagAndValue(ref output, Iso2);
      }
      if (wikiDataId_ != null) {
        _single_wikiDataId_codec.WriteTagAndValue(ref output, WikiDataId);
      }
      if (country_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Country);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CountryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountryId);
      }
      if (CountryCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (fipsCode_ != null) {
        size += _single_fipsCode_codec.CalculateSizeWithTag(FipsCode);
      }
      if (iso2_ != null) {
        size += _single_iso2_codec.CalculateSizeWithTag(Iso2);
      }
      if (wikiDataId_ != null) {
        size += _single_wikiDataId_codec.CalculateSizeWithTag(WikiDataId);
      }
      if (country_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Country);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StateStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CountryId != 0) {
        CountryId = other.CountryId;
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      if (other.fipsCode_ != null) {
        if (fipsCode_ == null || other.FipsCode != "") {
          FipsCode = other.FipsCode;
        }
      }
      if (other.iso2_ != null) {
        if (iso2_ == null || other.Iso2 != "") {
          Iso2 = other.Iso2;
        }
      }
      if (other.wikiDataId_ != null) {
        if (wikiDataId_ == null || other.WikiDataId != "") {
          WikiDataId = other.WikiDataId;
        }
      }
      if (other.country_ != null) {
        if (country_ == null) {
          Country = new global::DbData.Protos.CountryStruct();
        }
        Country.MergeFrom(other.Country);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            CountryId = input.ReadInt32();
            break;
          }
          case 34: {
            CountryCode = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_fipsCode_codec.Read(input);
            if (fipsCode_ == null || value != "") {
              FipsCode = value;
            }
            break;
          }
          case 50: {
            string value = _single_iso2_codec.Read(input);
            if (iso2_ == null || value != "") {
              Iso2 = value;
            }
            break;
          }
          case 58: {
            string value = _single_wikiDataId_codec.Read(input);
            if (wikiDataId_ == null || value != "") {
              WikiDataId = value;
            }
            break;
          }
          case 66: {
            if (country_ == null) {
              Country = new global::DbData.Protos.CountryStruct();
            }
            input.ReadMessage(Country);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            CountryId = input.ReadInt32();
            break;
          }
          case 34: {
            CountryCode = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_fipsCode_codec.Read(ref input);
            if (fipsCode_ == null || value != "") {
              FipsCode = value;
            }
            break;
          }
          case 50: {
            string value = _single_iso2_codec.Read(ref input);
            if (iso2_ == null || value != "") {
              Iso2 = value;
            }
            break;
          }
          case 58: {
            string value = _single_wikiDataId_codec.Read(ref input);
            if (wikiDataId_ == null || value != "") {
              WikiDataId = value;
            }
            break;
          }
          case 66: {
            if (country_ == null) {
              Country = new global::DbData.Protos.CountryStruct();
            }
            input.ReadMessage(Country);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StateFilter : pb::IMessage<StateFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StateFilter> _parser = new pb::MessageParser<StateFilter>(() => new StateFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StateFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgStateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateFilter(StateFilter other) : this() {
      paging_ = other.paging_ != null ? other.paging_.Clone() : null;
      sort_ = other.sort_ != null ? other.sort_.Clone() : null;
      Name = other.Name;
      countryId_ = other.countryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateFilter Clone() {
      return new StateFilter(this);
    }

    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 1;
    private global::DbData.Protos.PagingType paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.PagingType Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 2;
    private global::DbData.Protos.SortType sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.SortType Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 4;
    private int countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountryId {
      get { return countryId_; }
      set {
        countryId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StateFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StateFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Paging, other.Paging)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (Name != other.Name) return false;
      if (CountryId != other.CountryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (paging_ != null) hash ^= Paging.GetHashCode();
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (CountryId != 0) hash ^= CountryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (CountryId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CountryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(ref output, Name);
      }
      if (CountryId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CountryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (paging_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
      }
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (CountryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StateFilter other) {
      if (other == null) {
        return;
      }
      if (other.paging_ != null) {
        if (paging_ == null) {
          Paging = new global::DbData.Protos.PagingType();
        }
        Paging.MergeFrom(other.Paging);
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          Sort = new global::DbData.Protos.SortType();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.CountryId != 0) {
        CountryId = other.CountryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 32: {
            CountryId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(ref input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 32: {
            CountryId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListStateResponse : pb::IMessage<ListStateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListStateResponse> _parser = new pb::MessageParser<ListStateResponse>(() => new ListStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgStateReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStateResponse(ListStateResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStateResponse Clone() {
      return new ListStateResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DbData.Protos.StateStruct> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::DbData.Protos.StateStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.StateStruct> data_ = new pbc::RepeatedField<global::DbData.Protos.StateStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.StateStruct> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
