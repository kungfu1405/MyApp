// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgExperience.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DbData.Protos {

  /// <summary>Holder for reflection information generated from msgExperience.proto</summary>
  public static partial class MsgExperienceReflection {

    #region Descriptor
    /// <summary>File descriptor for msgExperience.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgExperienceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNtc2dFeHBlcmllbmNlLnByb3RvEgZkYmRhdGEaHmdvb2dsZS9wcm90b2J1",
            "Zi93cmFwcGVycy5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90bxoVbXNnRGJEYXRhQ29tbW9uLnByb3RvGhptc2dFeHBlcmllbmNlU2Vz",
            "c2lvbi5wcm90byKFBwoQRXhwZXJpZW5jZVN0cnVjdBIoCgJpZBgBIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg1kZXN0aW5hdGlvbklk",
            "GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhAKCHJvdXRl",
            "VXJpGAMgASgJEjEKC2RlZmF1bHROYW1lGAQgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEjEKC2Rlc2NyaXB0aW9uGAUgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDHRodW1ibmFpbFVybBgGIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIvCglyZWZQbGFuSWQYByAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLAoIZnJvbURhdGUY",
            "CCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKBnRvRGF0ZRgJ",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoGYXV0aG9yGAog",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhAKCGF1dGhvcklk",
            "GAsgASgJEhUKDXRvdGFsQ29tbWVudHMYDCABKAUSEgoKdG90YWxMaWtlcxgN",
            "IAEoBRISCgp0b3RhbFJhdGVzGA4gASgFEhAKCGF2Z1JhdGVzGA8gASgCEi4K",
            "CmNyZWF0ZURhdGUYECABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "Ei8KC3B1Ymxpc2hEYXRlGBEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIOCgZzdGF0dXMYEiABKAUSPAoSZXhwZXJpZW5jZUxhbmd1YWdlGBMg",
            "ASgLMiAuZGJkYXRhLkV4cGVyaWVuY2VMYW5ndWFnZVN0cnVjdBI9ChNleHBl",
            "cmllbmNlTGFuZ3VhZ2VzGBQgAygLMiAuZGJkYXRhLkV4cGVyaWVuY2VMYW5n",
            "dWFnZVN0cnVjdBI7ChJleHBlcmllbmNlU2Vzc2lvbnMYFSADKAsyHy5kYmRh",
            "dGEuRXhwZXJpZW5jZVNlc3Npb25TdHJ1Y3QSHwoEVGFncxgWIAMoCzIRLmRi",
            "ZGF0YS5UYWdTdHJ1Y3QizAEKGEV4cGVyaWVuY2VMYW5ndWFnZVN0cnVjdBIo",
            "CgJpZBgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIyCgxl",
            "eHBlcmllbmNlSWQYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSEAoIbGFuZ0NvZGUYAyABKAkSDQoFdGl0bGUYBCABKAkSMQoLZGVzY3Jp",
            "cHRpb24YBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUibAoS",
            "RXhwZXJpZW5jZVJlc3BvbnNlEiwKCmV4cGVyaWVuY2UYASABKAsyGC5kYmRh",
            "dGEuRXhwZXJpZW5jZVN0cnVjdBIoCgdtZXNzYWdlGAIgASgLMhcuZGJkYXRh",
            "LlJlc3BvbnNlTWVzc2FnZSKzBAoQRXhwZXJpZW5jZUZpbHRlchIiCgZwYWdp",
            "bmcYASABKAsyEi5kYmRhdGEuUGFnaW5nVHlwZRIeCgRzb3J0GAIgASgLMhAu",
            "ZGJkYXRhLlNvcnRUeXBlEjMKDWRlc3RpbmF0aW9uSWQYAyABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMYXR0cmFjdGlvbklkGAQgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCGF1dGhvcklkGAUg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEisKBXRpdGxlGAYg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioKBHRhZ3MYByAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLAoIZnJvbURhdGUY",
            "CCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKBnRvRGF0ZRgJ",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoGc3RhdHVzGAog",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCGxhbmdDb2Rl",
            "GAsgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjEKC2RlZmF1",
            "bHRMYW5nGAwgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIlYK",
            "Fkxpc3RFeHBlcmllbmNlUmVzcG9uc2USFAoMdG90YWxSZWNvcmRzGAEgASgF",
            "EiYKBERhdGEYAiADKAsyGC5kYmRhdGEuRXhwZXJpZW5jZVN0cnVjdEIQqgIN",
            "RGJEYXRhLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::DbData.Protos.MsgDbDataCommonReflection.Descriptor, global::DbData.Protos.MsgExperienceSessionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ExperienceStruct), global::DbData.Protos.ExperienceStruct.Parser, new[]{ "Id", "DestinationId", "RouteUri", "DefaultName", "Description", "ThumbnailUrl", "RefPlanId", "FromDate", "ToDate", "Author", "AuthorId", "TotalComments", "TotalLikes", "TotalRates", "AvgRates", "CreateDate", "PublishDate", "Status", "ExperienceLanguage", "ExperienceLanguages", "ExperienceSessions", "Tags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ExperienceLanguageStruct), global::DbData.Protos.ExperienceLanguageStruct.Parser, new[]{ "Id", "ExperienceId", "LangCode", "Title", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ExperienceResponse), global::DbData.Protos.ExperienceResponse.Parser, new[]{ "Experience", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ExperienceFilter), global::DbData.Protos.ExperienceFilter.Parser, new[]{ "Paging", "Sort", "DestinationId", "AttractionId", "AuthorId", "Title", "Tags", "FromDate", "ToDate", "Status", "LangCode", "DefaultLang" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ListExperienceResponse), global::DbData.Protos.ListExperienceResponse.Parser, new[]{ "TotalRecords", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ExperienceStruct : pb::IMessage<ExperienceStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExperienceStruct> _parser = new pb::MessageParser<ExperienceStruct>(() => new ExperienceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperienceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceStruct(ExperienceStruct other) : this() {
      Id = other.Id;
      DestinationId = other.DestinationId;
      routeUri_ = other.routeUri_;
      DefaultName = other.DefaultName;
      Description = other.Description;
      ThumbnailUrl = other.ThumbnailUrl;
      RefPlanId = other.RefPlanId;
      fromDate_ = other.fromDate_ != null ? other.fromDate_.Clone() : null;
      toDate_ = other.toDate_ != null ? other.toDate_.Clone() : null;
      Author = other.Author;
      authorId_ = other.authorId_;
      totalComments_ = other.totalComments_;
      totalLikes_ = other.totalLikes_;
      totalRates_ = other.totalRates_;
      avgRates_ = other.avgRates_;
      createDate_ = other.createDate_ != null ? other.createDate_.Clone() : null;
      publishDate_ = other.publishDate_ != null ? other.publishDate_.Clone() : null;
      status_ = other.status_;
      experienceLanguage_ = other.experienceLanguage_ != null ? other.experienceLanguage_.Clone() : null;
      experienceLanguages_ = other.experienceLanguages_.Clone();
      experienceSessions_ = other.experienceSessions_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceStruct Clone() {
      return new ExperienceStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "destinationId" field.</summary>
    public const int DestinationIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_destinationId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string destinationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationId {
      get { return destinationId_; }
      set {
        destinationId_ = value;
      }
    }


    /// <summary>Field number for the "routeUri" field.</summary>
    public const int RouteUriFieldNumber = 3;
    private string routeUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RouteUri {
      get { return routeUri_; }
      set {
        routeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "defaultName" field.</summary>
    public const int DefaultNameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_defaultName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string defaultName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultName {
      get { return defaultName_; }
      set {
        defaultName_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "thumbnailUrl" field.</summary>
    public const int ThumbnailUrlFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_thumbnailUrl_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string thumbnailUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbnailUrl {
      get { return thumbnailUrl_; }
      set {
        thumbnailUrl_ = value;
      }
    }


    /// <summary>Field number for the "refPlanId" field.</summary>
    public const int RefPlanIdFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_refPlanId_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string refPlanId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefPlanId {
      get { return refPlanId_; }
      set {
        refPlanId_ = value;
      }
    }


    /// <summary>Field number for the "fromDate" field.</summary>
    public const int FromDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fromDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FromDate {
      get { return fromDate_; }
      set {
        fromDate_ = value;
      }
    }

    /// <summary>Field number for the "toDate" field.</summary>
    public const int ToDateFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp toDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ToDate {
      get { return toDate_; }
      set {
        toDate_ = value;
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_author_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string author_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Author {
      get { return author_; }
      set {
        author_ = value;
      }
    }


    /// <summary>Field number for the "authorId" field.</summary>
    public const int AuthorIdFieldNumber = 11;
    private string authorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorId {
      get { return authorId_; }
      set {
        authorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "totalComments" field.</summary>
    public const int TotalCommentsFieldNumber = 12;
    private int totalComments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalComments {
      get { return totalComments_; }
      set {
        totalComments_ = value;
      }
    }

    /// <summary>Field number for the "totalLikes" field.</summary>
    public const int TotalLikesFieldNumber = 13;
    private int totalLikes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalLikes {
      get { return totalLikes_; }
      set {
        totalLikes_ = value;
      }
    }

    /// <summary>Field number for the "totalRates" field.</summary>
    public const int TotalRatesFieldNumber = 14;
    private int totalRates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRates {
      get { return totalRates_; }
      set {
        totalRates_ = value;
      }
    }

    /// <summary>Field number for the "avgRates" field.</summary>
    public const int AvgRatesFieldNumber = 15;
    private float avgRates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AvgRates {
      get { return avgRates_; }
      set {
        avgRates_ = value;
      }
    }

    /// <summary>Field number for the "createDate" field.</summary>
    public const int CreateDateFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateDate {
      get { return createDate_; }
      set {
        createDate_ = value;
      }
    }

    /// <summary>Field number for the "publishDate" field.</summary>
    public const int PublishDateFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishDate {
      get { return publishDate_; }
      set {
        publishDate_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 18;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "experienceLanguage" field.</summary>
    public const int ExperienceLanguageFieldNumber = 19;
    private global::DbData.Protos.ExperienceLanguageStruct experienceLanguage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.ExperienceLanguageStruct ExperienceLanguage {
      get { return experienceLanguage_; }
      set {
        experienceLanguage_ = value;
      }
    }

    /// <summary>Field number for the "experienceLanguages" field.</summary>
    public const int ExperienceLanguagesFieldNumber = 20;
    private static readonly pb::FieldCodec<global::DbData.Protos.ExperienceLanguageStruct> _repeated_experienceLanguages_codec
        = pb::FieldCodec.ForMessage(162, global::DbData.Protos.ExperienceLanguageStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.ExperienceLanguageStruct> experienceLanguages_ = new pbc::RepeatedField<global::DbData.Protos.ExperienceLanguageStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.ExperienceLanguageStruct> ExperienceLanguages {
      get { return experienceLanguages_; }
    }

    /// <summary>Field number for the "experienceSessions" field.</summary>
    public const int ExperienceSessionsFieldNumber = 21;
    private static readonly pb::FieldCodec<global::DbData.Protos.ExperienceSessionStruct> _repeated_experienceSessions_codec
        = pb::FieldCodec.ForMessage(170, global::DbData.Protos.ExperienceSessionStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.ExperienceSessionStruct> experienceSessions_ = new pbc::RepeatedField<global::DbData.Protos.ExperienceSessionStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.ExperienceSessionStruct> ExperienceSessions {
      get { return experienceSessions_; }
    }

    /// <summary>Field number for the "Tags" field.</summary>
    public const int TagsFieldNumber = 22;
    private static readonly pb::FieldCodec<global::DbData.Protos.TagStruct> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(178, global::DbData.Protos.TagStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.TagStruct> tags_ = new pbc::RepeatedField<global::DbData.Protos.TagStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.TagStruct> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperienceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperienceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DestinationId != other.DestinationId) return false;
      if (RouteUri != other.RouteUri) return false;
      if (DefaultName != other.DefaultName) return false;
      if (Description != other.Description) return false;
      if (ThumbnailUrl != other.ThumbnailUrl) return false;
      if (RefPlanId != other.RefPlanId) return false;
      if (!object.Equals(FromDate, other.FromDate)) return false;
      if (!object.Equals(ToDate, other.ToDate)) return false;
      if (Author != other.Author) return false;
      if (AuthorId != other.AuthorId) return false;
      if (TotalComments != other.TotalComments) return false;
      if (TotalLikes != other.TotalLikes) return false;
      if (TotalRates != other.TotalRates) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgRates, other.AvgRates)) return false;
      if (!object.Equals(CreateDate, other.CreateDate)) return false;
      if (!object.Equals(PublishDate, other.PublishDate)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(ExperienceLanguage, other.ExperienceLanguage)) return false;
      if(!experienceLanguages_.Equals(other.experienceLanguages_)) return false;
      if(!experienceSessions_.Equals(other.experienceSessions_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (destinationId_ != null) hash ^= DestinationId.GetHashCode();
      if (RouteUri.Length != 0) hash ^= RouteUri.GetHashCode();
      if (defaultName_ != null) hash ^= DefaultName.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (thumbnailUrl_ != null) hash ^= ThumbnailUrl.GetHashCode();
      if (refPlanId_ != null) hash ^= RefPlanId.GetHashCode();
      if (fromDate_ != null) hash ^= FromDate.GetHashCode();
      if (toDate_ != null) hash ^= ToDate.GetHashCode();
      if (author_ != null) hash ^= Author.GetHashCode();
      if (AuthorId.Length != 0) hash ^= AuthorId.GetHashCode();
      if (TotalComments != 0) hash ^= TotalComments.GetHashCode();
      if (TotalLikes != 0) hash ^= TotalLikes.GetHashCode();
      if (TotalRates != 0) hash ^= TotalRates.GetHashCode();
      if (AvgRates != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgRates);
      if (createDate_ != null) hash ^= CreateDate.GetHashCode();
      if (publishDate_ != null) hash ^= PublishDate.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (experienceLanguage_ != null) hash ^= ExperienceLanguage.GetHashCode();
      hash ^= experienceLanguages_.GetHashCode();
      hash ^= experienceSessions_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (destinationId_ != null) {
        _single_destinationId_codec.WriteTagAndValue(output, DestinationId);
      }
      if (RouteUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RouteUri);
      }
      if (defaultName_ != null) {
        _single_defaultName_codec.WriteTagAndValue(output, DefaultName);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (thumbnailUrl_ != null) {
        _single_thumbnailUrl_codec.WriteTagAndValue(output, ThumbnailUrl);
      }
      if (refPlanId_ != null) {
        _single_refPlanId_codec.WriteTagAndValue(output, RefPlanId);
      }
      if (fromDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FromDate);
      }
      if (toDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ToDate);
      }
      if (author_ != null) {
        _single_author_codec.WriteTagAndValue(output, Author);
      }
      if (AuthorId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AuthorId);
      }
      if (TotalComments != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalComments);
      }
      if (TotalLikes != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(TotalLikes);
      }
      if (TotalRates != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(TotalRates);
      }
      if (AvgRates != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(AvgRates);
      }
      if (createDate_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateDate);
      }
      if (publishDate_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(PublishDate);
      }
      if (Status != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Status);
      }
      if (experienceLanguage_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(ExperienceLanguage);
      }
      experienceLanguages_.WriteTo(output, _repeated_experienceLanguages_codec);
      experienceSessions_.WriteTo(output, _repeated_experienceSessions_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (destinationId_ != null) {
        _single_destinationId_codec.WriteTagAndValue(ref output, DestinationId);
      }
      if (RouteUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RouteUri);
      }
      if (defaultName_ != null) {
        _single_defaultName_codec.WriteTagAndValue(ref output, DefaultName);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(ref output, Description);
      }
      if (thumbnailUrl_ != null) {
        _single_thumbnailUrl_codec.WriteTagAndValue(ref output, ThumbnailUrl);
      }
      if (refPlanId_ != null) {
        _single_refPlanId_codec.WriteTagAndValue(ref output, RefPlanId);
      }
      if (fromDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FromDate);
      }
      if (toDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ToDate);
      }
      if (author_ != null) {
        _single_author_codec.WriteTagAndValue(ref output, Author);
      }
      if (AuthorId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AuthorId);
      }
      if (TotalComments != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalComments);
      }
      if (TotalLikes != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(TotalLikes);
      }
      if (TotalRates != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(TotalRates);
      }
      if (AvgRates != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(AvgRates);
      }
      if (createDate_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CreateDate);
      }
      if (publishDate_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(PublishDate);
      }
      if (Status != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Status);
      }
      if (experienceLanguage_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(ExperienceLanguage);
      }
      experienceLanguages_.WriteTo(ref output, _repeated_experienceLanguages_codec);
      experienceSessions_.WriteTo(ref output, _repeated_experienceSessions_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (destinationId_ != null) {
        size += _single_destinationId_codec.CalculateSizeWithTag(DestinationId);
      }
      if (RouteUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RouteUri);
      }
      if (defaultName_ != null) {
        size += _single_defaultName_codec.CalculateSizeWithTag(DefaultName);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (thumbnailUrl_ != null) {
        size += _single_thumbnailUrl_codec.CalculateSizeWithTag(ThumbnailUrl);
      }
      if (refPlanId_ != null) {
        size += _single_refPlanId_codec.CalculateSizeWithTag(RefPlanId);
      }
      if (fromDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromDate);
      }
      if (toDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToDate);
      }
      if (author_ != null) {
        size += _single_author_codec.CalculateSizeWithTag(Author);
      }
      if (AuthorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorId);
      }
      if (TotalComments != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalComments);
      }
      if (TotalLikes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalLikes);
      }
      if (TotalRates != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRates);
      }
      if (AvgRates != 0F) {
        size += 1 + 4;
      }
      if (createDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateDate);
      }
      if (publishDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublishDate);
      }
      if (Status != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (experienceLanguage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExperienceLanguage);
      }
      size += experienceLanguages_.CalculateSize(_repeated_experienceLanguages_codec);
      size += experienceSessions_.CalculateSize(_repeated_experienceSessions_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperienceStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.destinationId_ != null) {
        if (destinationId_ == null || other.DestinationId != "") {
          DestinationId = other.DestinationId;
        }
      }
      if (other.RouteUri.Length != 0) {
        RouteUri = other.RouteUri;
      }
      if (other.defaultName_ != null) {
        if (defaultName_ == null || other.DefaultName != "") {
          DefaultName = other.DefaultName;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.thumbnailUrl_ != null) {
        if (thumbnailUrl_ == null || other.ThumbnailUrl != "") {
          ThumbnailUrl = other.ThumbnailUrl;
        }
      }
      if (other.refPlanId_ != null) {
        if (refPlanId_ == null || other.RefPlanId != "") {
          RefPlanId = other.RefPlanId;
        }
      }
      if (other.fromDate_ != null) {
        if (fromDate_ == null) {
          FromDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FromDate.MergeFrom(other.FromDate);
      }
      if (other.toDate_ != null) {
        if (toDate_ == null) {
          ToDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ToDate.MergeFrom(other.ToDate);
      }
      if (other.author_ != null) {
        if (author_ == null || other.Author != "") {
          Author = other.Author;
        }
      }
      if (other.AuthorId.Length != 0) {
        AuthorId = other.AuthorId;
      }
      if (other.TotalComments != 0) {
        TotalComments = other.TotalComments;
      }
      if (other.TotalLikes != 0) {
        TotalLikes = other.TotalLikes;
      }
      if (other.TotalRates != 0) {
        TotalRates = other.TotalRates;
      }
      if (other.AvgRates != 0F) {
        AvgRates = other.AvgRates;
      }
      if (other.createDate_ != null) {
        if (createDate_ == null) {
          CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateDate.MergeFrom(other.CreateDate);
      }
      if (other.publishDate_ != null) {
        if (publishDate_ == null) {
          PublishDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishDate.MergeFrom(other.PublishDate);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.experienceLanguage_ != null) {
        if (experienceLanguage_ == null) {
          ExperienceLanguage = new global::DbData.Protos.ExperienceLanguageStruct();
        }
        ExperienceLanguage.MergeFrom(other.ExperienceLanguage);
      }
      experienceLanguages_.Add(other.experienceLanguages_);
      experienceSessions_.Add(other.experienceSessions_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_destinationId_codec.Read(input);
            if (destinationId_ == null || value != "") {
              DestinationId = value;
            }
            break;
          }
          case 26: {
            RouteUri = input.ReadString();
            break;
          }
          case 34: {
            string value = _single_defaultName_codec.Read(input);
            if (defaultName_ == null || value != "") {
              DefaultName = value;
            }
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 50: {
            string value = _single_thumbnailUrl_codec.Read(input);
            if (thumbnailUrl_ == null || value != "") {
              ThumbnailUrl = value;
            }
            break;
          }
          case 58: {
            string value = _single_refPlanId_codec.Read(input);
            if (refPlanId_ == null || value != "") {
              RefPlanId = value;
            }
            break;
          }
          case 66: {
            if (fromDate_ == null) {
              FromDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FromDate);
            break;
          }
          case 74: {
            if (toDate_ == null) {
              ToDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ToDate);
            break;
          }
          case 82: {
            string value = _single_author_codec.Read(input);
            if (author_ == null || value != "") {
              Author = value;
            }
            break;
          }
          case 90: {
            AuthorId = input.ReadString();
            break;
          }
          case 96: {
            TotalComments = input.ReadInt32();
            break;
          }
          case 104: {
            TotalLikes = input.ReadInt32();
            break;
          }
          case 112: {
            TotalRates = input.ReadInt32();
            break;
          }
          case 125: {
            AvgRates = input.ReadFloat();
            break;
          }
          case 130: {
            if (createDate_ == null) {
              CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateDate);
            break;
          }
          case 138: {
            if (publishDate_ == null) {
              PublishDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishDate);
            break;
          }
          case 144: {
            Status = input.ReadInt32();
            break;
          }
          case 154: {
            if (experienceLanguage_ == null) {
              ExperienceLanguage = new global::DbData.Protos.ExperienceLanguageStruct();
            }
            input.ReadMessage(ExperienceLanguage);
            break;
          }
          case 162: {
            experienceLanguages_.AddEntriesFrom(input, _repeated_experienceLanguages_codec);
            break;
          }
          case 170: {
            experienceSessions_.AddEntriesFrom(input, _repeated_experienceSessions_codec);
            break;
          }
          case 178: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_destinationId_codec.Read(ref input);
            if (destinationId_ == null || value != "") {
              DestinationId = value;
            }
            break;
          }
          case 26: {
            RouteUri = input.ReadString();
            break;
          }
          case 34: {
            string value = _single_defaultName_codec.Read(ref input);
            if (defaultName_ == null || value != "") {
              DefaultName = value;
            }
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(ref input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 50: {
            string value = _single_thumbnailUrl_codec.Read(ref input);
            if (thumbnailUrl_ == null || value != "") {
              ThumbnailUrl = value;
            }
            break;
          }
          case 58: {
            string value = _single_refPlanId_codec.Read(ref input);
            if (refPlanId_ == null || value != "") {
              RefPlanId = value;
            }
            break;
          }
          case 66: {
            if (fromDate_ == null) {
              FromDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FromDate);
            break;
          }
          case 74: {
            if (toDate_ == null) {
              ToDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ToDate);
            break;
          }
          case 82: {
            string value = _single_author_codec.Read(ref input);
            if (author_ == null || value != "") {
              Author = value;
            }
            break;
          }
          case 90: {
            AuthorId = input.ReadString();
            break;
          }
          case 96: {
            TotalComments = input.ReadInt32();
            break;
          }
          case 104: {
            TotalLikes = input.ReadInt32();
            break;
          }
          case 112: {
            TotalRates = input.ReadInt32();
            break;
          }
          case 125: {
            AvgRates = input.ReadFloat();
            break;
          }
          case 130: {
            if (createDate_ == null) {
              CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateDate);
            break;
          }
          case 138: {
            if (publishDate_ == null) {
              PublishDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishDate);
            break;
          }
          case 144: {
            Status = input.ReadInt32();
            break;
          }
          case 154: {
            if (experienceLanguage_ == null) {
              ExperienceLanguage = new global::DbData.Protos.ExperienceLanguageStruct();
            }
            input.ReadMessage(ExperienceLanguage);
            break;
          }
          case 162: {
            experienceLanguages_.AddEntriesFrom(ref input, _repeated_experienceLanguages_codec);
            break;
          }
          case 170: {
            experienceSessions_.AddEntriesFrom(ref input, _repeated_experienceSessions_codec);
            break;
          }
          case 178: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExperienceLanguageStruct : pb::IMessage<ExperienceLanguageStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExperienceLanguageStruct> _parser = new pb::MessageParser<ExperienceLanguageStruct>(() => new ExperienceLanguageStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperienceLanguageStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceLanguageStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceLanguageStruct(ExperienceLanguageStruct other) : this() {
      Id = other.Id;
      ExperienceId = other.ExperienceId;
      langCode_ = other.langCode_;
      title_ = other.title_;
      Description = other.Description;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceLanguageStruct Clone() {
      return new ExperienceLanguageStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "experienceId" field.</summary>
    public const int ExperienceIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_experienceId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string experienceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExperienceId {
      get { return experienceId_; }
      set {
        experienceId_ = value;
      }
    }


    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 3;
    private string langCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperienceLanguageStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperienceLanguageStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExperienceId != other.ExperienceId) return false;
      if (LangCode != other.LangCode) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (experienceId_ != null) hash ^= ExperienceId.GetHashCode();
      if (LangCode.Length != 0) hash ^= LangCode.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (experienceId_ != null) {
        _single_experienceId_codec.WriteTagAndValue(output, ExperienceId);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LangCode);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (experienceId_ != null) {
        _single_experienceId_codec.WriteTagAndValue(ref output, ExperienceId);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LangCode);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(ref output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (experienceId_ != null) {
        size += _single_experienceId_codec.CalculateSizeWithTag(ExperienceId);
      }
      if (LangCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangCode);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperienceLanguageStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.experienceId_ != null) {
        if (experienceId_ == null || other.ExperienceId != "") {
          ExperienceId = other.ExperienceId;
        }
      }
      if (other.LangCode.Length != 0) {
        LangCode = other.LangCode;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_experienceId_codec.Read(input);
            if (experienceId_ == null || value != "") {
              ExperienceId = value;
            }
            break;
          }
          case 26: {
            LangCode = input.ReadString();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_experienceId_codec.Read(ref input);
            if (experienceId_ == null || value != "") {
              ExperienceId = value;
            }
            break;
          }
          case 26: {
            LangCode = input.ReadString();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(ref input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExperienceResponse : pb::IMessage<ExperienceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExperienceResponse> _parser = new pb::MessageParser<ExperienceResponse>(() => new ExperienceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperienceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceResponse(ExperienceResponse other) : this() {
      experience_ = other.experience_ != null ? other.experience_.Clone() : null;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceResponse Clone() {
      return new ExperienceResponse(this);
    }

    /// <summary>Field number for the "experience" field.</summary>
    public const int ExperienceFieldNumber = 1;
    private global::DbData.Protos.ExperienceStruct experience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.ExperienceStruct Experience {
      get { return experience_; }
      set {
        experience_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::DbData.Protos.ResponseMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.ResponseMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperienceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperienceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Experience, other.Experience)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (experience_ != null) hash ^= Experience.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (experience_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Experience);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (experience_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Experience);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (experience_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Experience);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperienceResponse other) {
      if (other == null) {
        return;
      }
      if (other.experience_ != null) {
        if (experience_ == null) {
          Experience = new global::DbData.Protos.ExperienceStruct();
        }
        Experience.MergeFrom(other.Experience);
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::DbData.Protos.ResponseMessage();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (experience_ == null) {
              Experience = new global::DbData.Protos.ExperienceStruct();
            }
            input.ReadMessage(Experience);
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::DbData.Protos.ResponseMessage();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (experience_ == null) {
              Experience = new global::DbData.Protos.ExperienceStruct();
            }
            input.ReadMessage(Experience);
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::DbData.Protos.ResponseMessage();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExperienceFilter : pb::IMessage<ExperienceFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExperienceFilter> _parser = new pb::MessageParser<ExperienceFilter>(() => new ExperienceFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperienceFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceFilter(ExperienceFilter other) : this() {
      paging_ = other.paging_ != null ? other.paging_.Clone() : null;
      sort_ = other.sort_ != null ? other.sort_.Clone() : null;
      DestinationId = other.DestinationId;
      AttractionId = other.AttractionId;
      AuthorId = other.AuthorId;
      Title = other.Title;
      Tags = other.Tags;
      fromDate_ = other.fromDate_ != null ? other.fromDate_.Clone() : null;
      toDate_ = other.toDate_ != null ? other.toDate_.Clone() : null;
      Status = other.Status;
      LangCode = other.LangCode;
      DefaultLang = other.DefaultLang;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceFilter Clone() {
      return new ExperienceFilter(this);
    }

    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 1;
    private global::DbData.Protos.PagingType paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.PagingType Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 2;
    private global::DbData.Protos.SortType sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.SortType Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "destinationId" field.</summary>
    public const int DestinationIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_destinationId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string destinationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationId {
      get { return destinationId_; }
      set {
        destinationId_ = value;
      }
    }


    /// <summary>Field number for the "attractionId" field.</summary>
    public const int AttractionIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_attractionId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string attractionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttractionId {
      get { return attractionId_; }
      set {
        attractionId_ = value;
      }
    }


    /// <summary>Field number for the "authorId" field.</summary>
    public const int AuthorIdFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_authorId_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string authorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorId {
      get { return authorId_; }
      set {
        authorId_ = value;
      }
    }


    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_title_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }


    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_tags_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }


    /// <summary>Field number for the "fromDate" field.</summary>
    public const int FromDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fromDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FromDate {
      get { return fromDate_; }
      set {
        fromDate_ = value;
      }
    }

    /// <summary>Field number for the "toDate" field.</summary>
    public const int ToDateFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp toDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ToDate {
      get { return toDate_; }
      set {
        toDate_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_status_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }


    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_langCode_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string langCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = value;
      }
    }


    /// <summary>Field number for the "defaultLang" field.</summary>
    public const int DefaultLangFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_defaultLang_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string defaultLang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultLang {
      get { return defaultLang_; }
      set {
        defaultLang_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperienceFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperienceFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Paging, other.Paging)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (DestinationId != other.DestinationId) return false;
      if (AttractionId != other.AttractionId) return false;
      if (AuthorId != other.AuthorId) return false;
      if (Title != other.Title) return false;
      if (Tags != other.Tags) return false;
      if (!object.Equals(FromDate, other.FromDate)) return false;
      if (!object.Equals(ToDate, other.ToDate)) return false;
      if (Status != other.Status) return false;
      if (LangCode != other.LangCode) return false;
      if (DefaultLang != other.DefaultLang) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (paging_ != null) hash ^= Paging.GetHashCode();
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (destinationId_ != null) hash ^= DestinationId.GetHashCode();
      if (attractionId_ != null) hash ^= AttractionId.GetHashCode();
      if (authorId_ != null) hash ^= AuthorId.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (tags_ != null) hash ^= Tags.GetHashCode();
      if (fromDate_ != null) hash ^= FromDate.GetHashCode();
      if (toDate_ != null) hash ^= ToDate.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (langCode_ != null) hash ^= LangCode.GetHashCode();
      if (defaultLang_ != null) hash ^= DefaultLang.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (destinationId_ != null) {
        _single_destinationId_codec.WriteTagAndValue(output, DestinationId);
      }
      if (attractionId_ != null) {
        _single_attractionId_codec.WriteTagAndValue(output, AttractionId);
      }
      if (authorId_ != null) {
        _single_authorId_codec.WriteTagAndValue(output, AuthorId);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(output, Title);
      }
      if (tags_ != null) {
        _single_tags_codec.WriteTagAndValue(output, Tags);
      }
      if (fromDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FromDate);
      }
      if (toDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ToDate);
      }
      if (status_ != null) {
        _single_status_codec.WriteTagAndValue(output, Status);
      }
      if (langCode_ != null) {
        _single_langCode_codec.WriteTagAndValue(output, LangCode);
      }
      if (defaultLang_ != null) {
        _single_defaultLang_codec.WriteTagAndValue(output, DefaultLang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (destinationId_ != null) {
        _single_destinationId_codec.WriteTagAndValue(ref output, DestinationId);
      }
      if (attractionId_ != null) {
        _single_attractionId_codec.WriteTagAndValue(ref output, AttractionId);
      }
      if (authorId_ != null) {
        _single_authorId_codec.WriteTagAndValue(ref output, AuthorId);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(ref output, Title);
      }
      if (tags_ != null) {
        _single_tags_codec.WriteTagAndValue(ref output, Tags);
      }
      if (fromDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FromDate);
      }
      if (toDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ToDate);
      }
      if (status_ != null) {
        _single_status_codec.WriteTagAndValue(ref output, Status);
      }
      if (langCode_ != null) {
        _single_langCode_codec.WriteTagAndValue(ref output, LangCode);
      }
      if (defaultLang_ != null) {
        _single_defaultLang_codec.WriteTagAndValue(ref output, DefaultLang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (paging_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
      }
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (destinationId_ != null) {
        size += _single_destinationId_codec.CalculateSizeWithTag(DestinationId);
      }
      if (attractionId_ != null) {
        size += _single_attractionId_codec.CalculateSizeWithTag(AttractionId);
      }
      if (authorId_ != null) {
        size += _single_authorId_codec.CalculateSizeWithTag(AuthorId);
      }
      if (title_ != null) {
        size += _single_title_codec.CalculateSizeWithTag(Title);
      }
      if (tags_ != null) {
        size += _single_tags_codec.CalculateSizeWithTag(Tags);
      }
      if (fromDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromDate);
      }
      if (toDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToDate);
      }
      if (status_ != null) {
        size += _single_status_codec.CalculateSizeWithTag(Status);
      }
      if (langCode_ != null) {
        size += _single_langCode_codec.CalculateSizeWithTag(LangCode);
      }
      if (defaultLang_ != null) {
        size += _single_defaultLang_codec.CalculateSizeWithTag(DefaultLang);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperienceFilter other) {
      if (other == null) {
        return;
      }
      if (other.paging_ != null) {
        if (paging_ == null) {
          Paging = new global::DbData.Protos.PagingType();
        }
        Paging.MergeFrom(other.Paging);
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          Sort = new global::DbData.Protos.SortType();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.destinationId_ != null) {
        if (destinationId_ == null || other.DestinationId != "") {
          DestinationId = other.DestinationId;
        }
      }
      if (other.attractionId_ != null) {
        if (attractionId_ == null || other.AttractionId != "") {
          AttractionId = other.AttractionId;
        }
      }
      if (other.authorId_ != null) {
        if (authorId_ == null || other.AuthorId != "") {
          AuthorId = other.AuthorId;
        }
      }
      if (other.title_ != null) {
        if (title_ == null || other.Title != "") {
          Title = other.Title;
        }
      }
      if (other.tags_ != null) {
        if (tags_ == null || other.Tags != "") {
          Tags = other.Tags;
        }
      }
      if (other.fromDate_ != null) {
        if (fromDate_ == null) {
          FromDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FromDate.MergeFrom(other.FromDate);
      }
      if (other.toDate_ != null) {
        if (toDate_ == null) {
          ToDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ToDate.MergeFrom(other.ToDate);
      }
      if (other.status_ != null) {
        if (status_ == null || other.Status != "") {
          Status = other.Status;
        }
      }
      if (other.langCode_ != null) {
        if (langCode_ == null || other.LangCode != "") {
          LangCode = other.LangCode;
        }
      }
      if (other.defaultLang_ != null) {
        if (defaultLang_ == null || other.DefaultLang != "") {
          DefaultLang = other.DefaultLang;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_destinationId_codec.Read(input);
            if (destinationId_ == null || value != "") {
              DestinationId = value;
            }
            break;
          }
          case 34: {
            string value = _single_attractionId_codec.Read(input);
            if (attractionId_ == null || value != "") {
              AttractionId = value;
            }
            break;
          }
          case 42: {
            string value = _single_authorId_codec.Read(input);
            if (authorId_ == null || value != "") {
              AuthorId = value;
            }
            break;
          }
          case 50: {
            string value = _single_title_codec.Read(input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 58: {
            string value = _single_tags_codec.Read(input);
            if (tags_ == null || value != "") {
              Tags = value;
            }
            break;
          }
          case 66: {
            if (fromDate_ == null) {
              FromDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FromDate);
            break;
          }
          case 74: {
            if (toDate_ == null) {
              ToDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ToDate);
            break;
          }
          case 82: {
            string value = _single_status_codec.Read(input);
            if (status_ == null || value != "") {
              Status = value;
            }
            break;
          }
          case 90: {
            string value = _single_langCode_codec.Read(input);
            if (langCode_ == null || value != "") {
              LangCode = value;
            }
            break;
          }
          case 98: {
            string value = _single_defaultLang_codec.Read(input);
            if (defaultLang_ == null || value != "") {
              DefaultLang = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_destinationId_codec.Read(ref input);
            if (destinationId_ == null || value != "") {
              DestinationId = value;
            }
            break;
          }
          case 34: {
            string value = _single_attractionId_codec.Read(ref input);
            if (attractionId_ == null || value != "") {
              AttractionId = value;
            }
            break;
          }
          case 42: {
            string value = _single_authorId_codec.Read(ref input);
            if (authorId_ == null || value != "") {
              AuthorId = value;
            }
            break;
          }
          case 50: {
            string value = _single_title_codec.Read(ref input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 58: {
            string value = _single_tags_codec.Read(ref input);
            if (tags_ == null || value != "") {
              Tags = value;
            }
            break;
          }
          case 66: {
            if (fromDate_ == null) {
              FromDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FromDate);
            break;
          }
          case 74: {
            if (toDate_ == null) {
              ToDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ToDate);
            break;
          }
          case 82: {
            string value = _single_status_codec.Read(ref input);
            if (status_ == null || value != "") {
              Status = value;
            }
            break;
          }
          case 90: {
            string value = _single_langCode_codec.Read(ref input);
            if (langCode_ == null || value != "") {
              LangCode = value;
            }
            break;
          }
          case 98: {
            string value = _single_defaultLang_codec.Read(ref input);
            if (defaultLang_ == null || value != "") {
              DefaultLang = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListExperienceResponse : pb::IMessage<ListExperienceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListExperienceResponse> _parser = new pb::MessageParser<ListExperienceResponse>(() => new ListExperienceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListExperienceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgExperienceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExperienceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExperienceResponse(ListExperienceResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExperienceResponse Clone() {
      return new ListExperienceResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DbData.Protos.ExperienceStruct> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::DbData.Protos.ExperienceStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.ExperienceStruct> data_ = new pbc::RepeatedField<global::DbData.Protos.ExperienceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.ExperienceStruct> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListExperienceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListExperienceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListExperienceResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
