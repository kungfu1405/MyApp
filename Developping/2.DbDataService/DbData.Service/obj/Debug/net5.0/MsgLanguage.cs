// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgLanguage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UserDb.Protos {

  /// <summary>Holder for reflection information generated from msgLanguage.proto</summary>
  public static partial class MsgLanguageReflection {

    #region Descriptor
    /// <summary>File descriptor for msgLanguage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgLanguageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFtc2dMYW5ndWFnZS5wcm90bxIGZGJkYXRhGh5nb29nbGUvcHJvdG9idWYv",
            "d3JhcHBlcnMucHJvdG8i0gEKDkxhbmd1YWdlU3RydWN0EhAKCGxhbmdDb2Rl",
            "GAEgASgJEgwKBG5hbWUYAiABKAkSLAoGbmF0aXZlGAMgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KB2ljb25VcmwYBCABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEQoJaXNEZWZhdWx0GAUgASgIEg0K",
            "BWlzUnRsGAYgASgIEg8KB29yZGluYWwYByABKAUSEAoIaXNBY3RpdmUYCCAB",
            "KAgidQoSTGFuZ3VhZ2VEYXRhU3RydWN0Eg8KB2xhbmdLZXkYASABKAkSEAoI",
            "bGFuZ0NvZGUYAiABKAkSKwoFdmFsdWUYAyABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSDwoHaXNHcm91cBgEIAEoCCJXChRMaXN0TGFuZ3Vh",
            "Z2VSZXNwb25zZRIUCgx0b3RhbFJlY29yZHMYASABKAUSKQoJTGFuZ3VhZ2Vz",
            "GAIgAygLMhYuZGJkYXRhLkxhbmd1YWdlU3RydWN0IkwKEkxhbmd1YWdlRGF0",
            "YUZpbHRlchIPCgdsYW5nS2V5GAEgASgJEhAKCGxhbmdDb2RlGAIgASgJEhMK",
            "C2lzR3JvdXBPbmx5GAMgASgIIloKGExpc3RMYW5ndWFnZURhdGFSZXNwb25z",
            "ZRIUCgx0b3RhbFJlY29yZHMYASABKAUSKAoERGF0YRgCIAMoCzIaLmRiZGF0",
            "YS5MYW5ndWFnZURhdGFTdHJ1Y3RCEKoCDVVzZXJEYi5Qcm90b3NiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UserDb.Protos.LanguageStruct), global::UserDb.Protos.LanguageStruct.Parser, new[]{ "LangCode", "Name", "Native", "IconUrl", "IsDefault", "IsRtl", "Ordinal", "IsActive" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserDb.Protos.LanguageDataStruct), global::UserDb.Protos.LanguageDataStruct.Parser, new[]{ "LangKey", "LangCode", "Value", "IsGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserDb.Protos.ListLanguageResponse), global::UserDb.Protos.ListLanguageResponse.Parser, new[]{ "TotalRecords", "Languages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserDb.Protos.LanguageDataFilter), global::UserDb.Protos.LanguageDataFilter.Parser, new[]{ "LangKey", "LangCode", "IsGroupOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserDb.Protos.ListLanguageDataResponse), global::UserDb.Protos.ListLanguageDataResponse.Parser, new[]{ "TotalRecords", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LanguageStruct : pb::IMessage<LanguageStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LanguageStruct> _parser = new pb::MessageParser<LanguageStruct>(() => new LanguageStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LanguageStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserDb.Protos.MsgLanguageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageStruct(LanguageStruct other) : this() {
      langCode_ = other.langCode_;
      name_ = other.name_;
      Native = other.Native;
      IconUrl = other.IconUrl;
      isDefault_ = other.isDefault_;
      isRtl_ = other.isRtl_;
      ordinal_ = other.ordinal_;
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageStruct Clone() {
      return new LanguageStruct(this);
    }

    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 1;
    private string langCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "native" field.</summary>
    public const int NativeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_native_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string native_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Native {
      get { return native_; }
      set {
        native_ = value;
      }
    }


    /// <summary>Field number for the "iconUrl" field.</summary>
    public const int IconUrlFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_iconUrl_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string iconUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconUrl {
      get { return iconUrl_; }
      set {
        iconUrl_ = value;
      }
    }


    /// <summary>Field number for the "isDefault" field.</summary>
    public const int IsDefaultFieldNumber = 5;
    private bool isDefault_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDefault {
      get { return isDefault_; }
      set {
        isDefault_ = value;
      }
    }

    /// <summary>Field number for the "isRtl" field.</summary>
    public const int IsRtlFieldNumber = 6;
    private bool isRtl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRtl {
      get { return isRtl_; }
      set {
        isRtl_ = value;
      }
    }

    /// <summary>Field number for the "ordinal" field.</summary>
    public const int OrdinalFieldNumber = 7;
    private int ordinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ordinal {
      get { return ordinal_; }
      set {
        ordinal_ = value;
      }
    }

    /// <summary>Field number for the "isActive" field.</summary>
    public const int IsActiveFieldNumber = 8;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LanguageStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LanguageStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LangCode != other.LangCode) return false;
      if (Name != other.Name) return false;
      if (Native != other.Native) return false;
      if (IconUrl != other.IconUrl) return false;
      if (IsDefault != other.IsDefault) return false;
      if (IsRtl != other.IsRtl) return false;
      if (Ordinal != other.Ordinal) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LangCode.Length != 0) hash ^= LangCode.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (native_ != null) hash ^= Native.GetHashCode();
      if (iconUrl_ != null) hash ^= IconUrl.GetHashCode();
      if (IsDefault != false) hash ^= IsDefault.GetHashCode();
      if (IsRtl != false) hash ^= IsRtl.GetHashCode();
      if (Ordinal != 0) hash ^= Ordinal.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LangCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LangCode);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (native_ != null) {
        _single_native_codec.WriteTagAndValue(output, Native);
      }
      if (iconUrl_ != null) {
        _single_iconUrl_codec.WriteTagAndValue(output, IconUrl);
      }
      if (IsDefault != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDefault);
      }
      if (IsRtl != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsRtl);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ordinal);
      }
      if (IsActive != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LangCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LangCode);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (native_ != null) {
        _single_native_codec.WriteTagAndValue(ref output, Native);
      }
      if (iconUrl_ != null) {
        _single_iconUrl_codec.WriteTagAndValue(ref output, IconUrl);
      }
      if (IsDefault != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDefault);
      }
      if (IsRtl != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsRtl);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ordinal);
      }
      if (IsActive != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LangCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangCode);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (native_ != null) {
        size += _single_native_codec.CalculateSizeWithTag(Native);
      }
      if (iconUrl_ != null) {
        size += _single_iconUrl_codec.CalculateSizeWithTag(IconUrl);
      }
      if (IsDefault != false) {
        size += 1 + 1;
      }
      if (IsRtl != false) {
        size += 1 + 1;
      }
      if (Ordinal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ordinal);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LanguageStruct other) {
      if (other == null) {
        return;
      }
      if (other.LangCode.Length != 0) {
        LangCode = other.LangCode;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.native_ != null) {
        if (native_ == null || other.Native != "") {
          Native = other.Native;
        }
      }
      if (other.iconUrl_ != null) {
        if (iconUrl_ == null || other.IconUrl != "") {
          IconUrl = other.IconUrl;
        }
      }
      if (other.IsDefault != false) {
        IsDefault = other.IsDefault;
      }
      if (other.IsRtl != false) {
        IsRtl = other.IsRtl;
      }
      if (other.Ordinal != 0) {
        Ordinal = other.Ordinal;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LangCode = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            string value = _single_native_codec.Read(input);
            if (native_ == null || value != "") {
              Native = value;
            }
            break;
          }
          case 34: {
            string value = _single_iconUrl_codec.Read(input);
            if (iconUrl_ == null || value != "") {
              IconUrl = value;
            }
            break;
          }
          case 40: {
            IsDefault = input.ReadBool();
            break;
          }
          case 48: {
            IsRtl = input.ReadBool();
            break;
          }
          case 56: {
            Ordinal = input.ReadInt32();
            break;
          }
          case 64: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LangCode = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            string value = _single_native_codec.Read(ref input);
            if (native_ == null || value != "") {
              Native = value;
            }
            break;
          }
          case 34: {
            string value = _single_iconUrl_codec.Read(ref input);
            if (iconUrl_ == null || value != "") {
              IconUrl = value;
            }
            break;
          }
          case 40: {
            IsDefault = input.ReadBool();
            break;
          }
          case 48: {
            IsRtl = input.ReadBool();
            break;
          }
          case 56: {
            Ordinal = input.ReadInt32();
            break;
          }
          case 64: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LanguageDataStruct : pb::IMessage<LanguageDataStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LanguageDataStruct> _parser = new pb::MessageParser<LanguageDataStruct>(() => new LanguageDataStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LanguageDataStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserDb.Protos.MsgLanguageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageDataStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageDataStruct(LanguageDataStruct other) : this() {
      langKey_ = other.langKey_;
      langCode_ = other.langCode_;
      Value = other.Value;
      isGroup_ = other.isGroup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageDataStruct Clone() {
      return new LanguageDataStruct(this);
    }

    /// <summary>Field number for the "langKey" field.</summary>
    public const int LangKeyFieldNumber = 1;
    private string langKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangKey {
      get { return langKey_; }
      set {
        langKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 2;
    private string langCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_value_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }


    /// <summary>Field number for the "isGroup" field.</summary>
    public const int IsGroupFieldNumber = 4;
    private bool isGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGroup {
      get { return isGroup_; }
      set {
        isGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LanguageDataStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LanguageDataStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LangKey != other.LangKey) return false;
      if (LangCode != other.LangCode) return false;
      if (Value != other.Value) return false;
      if (IsGroup != other.IsGroup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LangKey.Length != 0) hash ^= LangKey.GetHashCode();
      if (LangCode.Length != 0) hash ^= LangCode.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (IsGroup != false) hash ^= IsGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LangKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LangKey);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LangCode);
      }
      if (value_ != null) {
        _single_value_codec.WriteTagAndValue(output, Value);
      }
      if (IsGroup != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LangKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LangKey);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LangCode);
      }
      if (value_ != null) {
        _single_value_codec.WriteTagAndValue(ref output, Value);
      }
      if (IsGroup != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LangKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangKey);
      }
      if (LangCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangCode);
      }
      if (value_ != null) {
        size += _single_value_codec.CalculateSizeWithTag(Value);
      }
      if (IsGroup != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LanguageDataStruct other) {
      if (other == null) {
        return;
      }
      if (other.LangKey.Length != 0) {
        LangKey = other.LangKey;
      }
      if (other.LangCode.Length != 0) {
        LangCode = other.LangCode;
      }
      if (other.value_ != null) {
        if (value_ == null || other.Value != "") {
          Value = other.Value;
        }
      }
      if (other.IsGroup != false) {
        IsGroup = other.IsGroup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LangKey = input.ReadString();
            break;
          }
          case 18: {
            LangCode = input.ReadString();
            break;
          }
          case 26: {
            string value = _single_value_codec.Read(input);
            if (value_ == null || value != "") {
              Value = value;
            }
            break;
          }
          case 32: {
            IsGroup = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LangKey = input.ReadString();
            break;
          }
          case 18: {
            LangCode = input.ReadString();
            break;
          }
          case 26: {
            string value = _single_value_codec.Read(ref input);
            if (value_ == null || value != "") {
              Value = value;
            }
            break;
          }
          case 32: {
            IsGroup = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListLanguageResponse : pb::IMessage<ListLanguageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListLanguageResponse> _parser = new pb::MessageParser<ListLanguageResponse>(() => new ListLanguageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListLanguageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserDb.Protos.MsgLanguageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLanguageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLanguageResponse(ListLanguageResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      languages_ = other.languages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLanguageResponse Clone() {
      return new ListLanguageResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "Languages" field.</summary>
    public const int LanguagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::UserDb.Protos.LanguageStruct> _repeated_languages_codec
        = pb::FieldCodec.ForMessage(18, global::UserDb.Protos.LanguageStruct.Parser);
    private readonly pbc::RepeatedField<global::UserDb.Protos.LanguageStruct> languages_ = new pbc::RepeatedField<global::UserDb.Protos.LanguageStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UserDb.Protos.LanguageStruct> Languages {
      get { return languages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListLanguageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListLanguageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!languages_.Equals(other.languages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= languages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      languages_.WriteTo(output, _repeated_languages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      languages_.WriteTo(ref output, _repeated_languages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += languages_.CalculateSize(_repeated_languages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListLanguageResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      languages_.Add(other.languages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            languages_.AddEntriesFrom(input, _repeated_languages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            languages_.AddEntriesFrom(ref input, _repeated_languages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LanguageDataFilter : pb::IMessage<LanguageDataFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LanguageDataFilter> _parser = new pb::MessageParser<LanguageDataFilter>(() => new LanguageDataFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LanguageDataFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserDb.Protos.MsgLanguageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageDataFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageDataFilter(LanguageDataFilter other) : this() {
      langKey_ = other.langKey_;
      langCode_ = other.langCode_;
      isGroupOnly_ = other.isGroupOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguageDataFilter Clone() {
      return new LanguageDataFilter(this);
    }

    /// <summary>Field number for the "langKey" field.</summary>
    public const int LangKeyFieldNumber = 1;
    private string langKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangKey {
      get { return langKey_; }
      set {
        langKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 2;
    private string langCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isGroupOnly" field.</summary>
    public const int IsGroupOnlyFieldNumber = 3;
    private bool isGroupOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGroupOnly {
      get { return isGroupOnly_; }
      set {
        isGroupOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LanguageDataFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LanguageDataFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LangKey != other.LangKey) return false;
      if (LangCode != other.LangCode) return false;
      if (IsGroupOnly != other.IsGroupOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LangKey.Length != 0) hash ^= LangKey.GetHashCode();
      if (LangCode.Length != 0) hash ^= LangCode.GetHashCode();
      if (IsGroupOnly != false) hash ^= IsGroupOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LangKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LangKey);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LangCode);
      }
      if (IsGroupOnly != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsGroupOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LangKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LangKey);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LangCode);
      }
      if (IsGroupOnly != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsGroupOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LangKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangKey);
      }
      if (LangCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangCode);
      }
      if (IsGroupOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LanguageDataFilter other) {
      if (other == null) {
        return;
      }
      if (other.LangKey.Length != 0) {
        LangKey = other.LangKey;
      }
      if (other.LangCode.Length != 0) {
        LangCode = other.LangCode;
      }
      if (other.IsGroupOnly != false) {
        IsGroupOnly = other.IsGroupOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LangKey = input.ReadString();
            break;
          }
          case 18: {
            LangCode = input.ReadString();
            break;
          }
          case 24: {
            IsGroupOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LangKey = input.ReadString();
            break;
          }
          case 18: {
            LangCode = input.ReadString();
            break;
          }
          case 24: {
            IsGroupOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListLanguageDataResponse : pb::IMessage<ListLanguageDataResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListLanguageDataResponse> _parser = new pb::MessageParser<ListLanguageDataResponse>(() => new ListLanguageDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListLanguageDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserDb.Protos.MsgLanguageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLanguageDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLanguageDataResponse(ListLanguageDataResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLanguageDataResponse Clone() {
      return new ListLanguageDataResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::UserDb.Protos.LanguageDataStruct> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::UserDb.Protos.LanguageDataStruct.Parser);
    private readonly pbc::RepeatedField<global::UserDb.Protos.LanguageDataStruct> data_ = new pbc::RepeatedField<global::UserDb.Protos.LanguageDataStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UserDb.Protos.LanguageDataStruct> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListLanguageDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListLanguageDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListLanguageDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
