// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgAttraction.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DbData.Protos {

  /// <summary>Holder for reflection information generated from msgAttraction.proto</summary>
  public static partial class MsgAttractionReflection {

    #region Descriptor
    /// <summary>File descriptor for msgAttraction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgAttractionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNtc2dBdHRyYWN0aW9uLnByb3RvEgZkYmRhdGEaHmdvb2dsZS9wcm90b2J1",
            "Zi93cmFwcGVycy5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90bxoVbXNnRGJEYXRhQ29tbW9uLnByb3RvGhRtc2dEZXN0aW5hdGlvbi5w",
            "cm90byKQCgoQQXR0cmFjdGlvblN0cnVjdBIoCgJpZBgBIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIVCg1EZXN0aW5hdGlvbklkGAIgASgJ",
            "EhAKCFJvdXRlVXJpGAMgASgJEhMKC0RlZmF1bHROYW1lGAQgASgJEjEKC0Rl",
            "c2NyaXB0aW9uGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EhcKD0F0dHJhY3Rpb25UeXBlcxgGIAEoBRIWCg5Ub3VyaXN0Q2xhc3NlcxgH",
            "IAEoBRIWCg5Ub3VyaXN0T2JqZWN0cxgIIAEoBRIWCg5Qcm9wZXJ0eUdyb3Vw",
            "cxgJIAEoBRIyCgxUaHVtYm5haWxVcmwYCiABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSNgoQRGVmYXVsdEdhbGxlcnlJZBgLIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI5ChNEZWZhdWx0RXhwZXJpZW5j",
            "ZUlkGAwgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KB0Fk",
            "ZHJlc3MYDSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoH",
            "Q29udGFjdBgOIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIt",
            "CgdXZWJzaXRlGA8gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EhUKDVZpc2l0RHVyYXRpb24YECABKAUSEQoJUHJpY2VGcm9tGBEgASgCEi4K",
            "CEN1cnJlbmN5GBIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EhAKCExhdGl0dWRlGBMgASgBEhEKCUxvbmdpdHVkZRgUIAEoARIxCgtNYXBJ",
            "bWFnZVVyaRgVIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIS",
            "CgpUb3RhbExpa2VzGBYgASgFEhUKDVRvdGFsQ29tbWVudHMYFyABKAUSEgoK",
            "VG90YWxSYXRlcxgYIAEoBRIQCghBdmdSYXRlcxgZIAEoBRIsCgZBdXRob3IY",
            "GiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIQXV0aG9y",
            "SWQYGyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoKQ3Jl",
            "YXRlRGF0ZRgcIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFgoO",
            "RnJvbUV4cGVyaWVuY2UYHSABKAgSEAoIUHJpb3JpdHkYHiABKAUSDgoGU3Rh",
            "dHVzGB8gASgFEi4KC0Rlc3RpbmF0aW9uGCAgASgLMhkuZGJkYXRhLkRlc3Rp",
            "bmF0aW9uU3RydWN0EjMKDkF0dHJhY3Rpb25UYWdzGCEgAygLMhsuZGJkYXRh",
            "LkF0dHJhY3Rpb25UYWdTdHJ1Y3QSPAoSQXR0cmFjdGlvbkxhbmd1YWdlGCIg",
            "ASgLMiAuZGJkYXRhLkF0dHJhY3Rpb25MYW5ndWFnZVN0cnVjdBI9ChNBdHRy",
            "YWN0aW9uTGFuZ3VhZ2VzGCMgAygLMiAuZGJkYXRhLkF0dHJhY3Rpb25MYW5n",
            "dWFnZVN0cnVjdBIfCgRUYWdzGCQgAygLMhEuZGJkYXRhLlRhZ1N0cnVjdCLL",
            "AQoYQXR0cmFjdGlvbkxhbmd1YWdlU3RydWN0EigKAmlkGAEgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDGF0dHJhY3Rpb25JZBgCIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIQCghsYW5nQ29kZRgD",
            "IAEoCRIMCgRuYW1lGAQgASgJEjEKC2Rlc2NyaXB0aW9uGAUgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIqcDChBBdHRyYWN0aW9uRmlsdGVy",
            "EiIKBnBhZ2luZxgBIAEoCzISLmRiZGF0YS5QYWdpbmdUeXBlEh4KBHNvcnQY",
            "AiABKAsyEC5kYmRhdGEuU29ydFR5cGUSKgoEbmFtZRgDIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg1kZXN0aW5hdGlvbklkGAQgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhcKD2F0dHJhY3Rpb25U",
            "eXBlcxgFIAEoBRIWCg50b3VyaXN0Q2xhc3NlcxgGIAEoBRIWCg50b3VyaXN0",
            "T2JqZWN0cxgHIAEoBRIWCg5wcm9wZXJ0eUdyb3VwcxgIIAEoBRIqCgR0YWdz",
            "GAkgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCGxhbmdD",
            "b2RlGAogASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjEKC2Rl",
            "ZmF1bHRMYW5nGAsgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "IlYKFkxpc3RBdHRyYWN0aW9uUmVzcG9uc2USFAoMdG90YWxSZWNvcmRzGAEg",
            "ASgFEiYKBERhdGEYAiADKAsyGC5kYmRhdGEuQXR0cmFjdGlvblN0cnVjdCJ2",
            "ChNBdHRyYWN0aW9uVGFnU3RydWN0EjIKDGF0dHJhY3Rpb25JZBgBIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIrCgV0YWdJZBgCIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZUIQqgINRGJEYXRhLlByb3Rv",
            "c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::DbData.Protos.MsgDbDataCommonReflection.Descriptor, global::DbData.Protos.MsgDestinationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.AttractionStruct), global::DbData.Protos.AttractionStruct.Parser, new[]{ "Id", "DestinationId", "RouteUri", "DefaultName", "Description", "AttractionTypes", "TouristClasses", "TouristObjects", "PropertyGroups", "ThumbnailUrl", "DefaultGalleryId", "DefaultExperienceId", "Address", "Contact", "Website", "VisitDuration", "PriceFrom", "Currency", "Latitude", "Longitude", "MapImageUri", "TotalLikes", "TotalComments", "TotalRates", "AvgRates", "Author", "AuthorId", "CreateDate", "FromExperience", "Priority", "Status", "Destination", "AttractionTags", "AttractionLanguage", "AttractionLanguages", "Tags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.AttractionLanguageStruct), global::DbData.Protos.AttractionLanguageStruct.Parser, new[]{ "Id", "AttractionId", "LangCode", "Name", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.AttractionFilter), global::DbData.Protos.AttractionFilter.Parser, new[]{ "Paging", "Sort", "Name", "DestinationId", "AttractionTypes", "TouristClasses", "TouristObjects", "PropertyGroups", "Tags", "LangCode", "DefaultLang" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ListAttractionResponse), global::DbData.Protos.ListAttractionResponse.Parser, new[]{ "TotalRecords", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.AttractionTagStruct), global::DbData.Protos.AttractionTagStruct.Parser, new[]{ "AttractionId", "TagId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AttractionStruct : pb::IMessage<AttractionStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttractionStruct> _parser = new pb::MessageParser<AttractionStruct>(() => new AttractionStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttractionStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgAttractionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionStruct(AttractionStruct other) : this() {
      Id = other.Id;
      destinationId_ = other.destinationId_;
      routeUri_ = other.routeUri_;
      defaultName_ = other.defaultName_;
      Description = other.Description;
      attractionTypes_ = other.attractionTypes_;
      touristClasses_ = other.touristClasses_;
      touristObjects_ = other.touristObjects_;
      propertyGroups_ = other.propertyGroups_;
      ThumbnailUrl = other.ThumbnailUrl;
      DefaultGalleryId = other.DefaultGalleryId;
      DefaultExperienceId = other.DefaultExperienceId;
      Address = other.Address;
      Contact = other.Contact;
      Website = other.Website;
      visitDuration_ = other.visitDuration_;
      priceFrom_ = other.priceFrom_;
      Currency = other.Currency;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      MapImageUri = other.MapImageUri;
      totalLikes_ = other.totalLikes_;
      totalComments_ = other.totalComments_;
      totalRates_ = other.totalRates_;
      avgRates_ = other.avgRates_;
      Author = other.Author;
      AuthorId = other.AuthorId;
      createDate_ = other.createDate_ != null ? other.createDate_.Clone() : null;
      fromExperience_ = other.fromExperience_;
      priority_ = other.priority_;
      status_ = other.status_;
      destination_ = other.destination_ != null ? other.destination_.Clone() : null;
      attractionTags_ = other.attractionTags_.Clone();
      attractionLanguage_ = other.attractionLanguage_ != null ? other.attractionLanguage_.Clone() : null;
      attractionLanguages_ = other.attractionLanguages_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionStruct Clone() {
      return new AttractionStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "DestinationId" field.</summary>
    public const int DestinationIdFieldNumber = 2;
    private string destinationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationId {
      get { return destinationId_; }
      set {
        destinationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RouteUri" field.</summary>
    public const int RouteUriFieldNumber = 3;
    private string routeUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RouteUri {
      get { return routeUri_; }
      set {
        routeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DefaultName" field.</summary>
    public const int DefaultNameFieldNumber = 4;
    private string defaultName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultName {
      get { return defaultName_; }
      set {
        defaultName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "AttractionTypes" field.</summary>
    public const int AttractionTypesFieldNumber = 6;
    private int attractionTypes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttractionTypes {
      get { return attractionTypes_; }
      set {
        attractionTypes_ = value;
      }
    }

    /// <summary>Field number for the "TouristClasses" field.</summary>
    public const int TouristClassesFieldNumber = 7;
    private int touristClasses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TouristClasses {
      get { return touristClasses_; }
      set {
        touristClasses_ = value;
      }
    }

    /// <summary>Field number for the "TouristObjects" field.</summary>
    public const int TouristObjectsFieldNumber = 8;
    private int touristObjects_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TouristObjects {
      get { return touristObjects_; }
      set {
        touristObjects_ = value;
      }
    }

    /// <summary>Field number for the "PropertyGroups" field.</summary>
    public const int PropertyGroupsFieldNumber = 9;
    private int propertyGroups_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropertyGroups {
      get { return propertyGroups_; }
      set {
        propertyGroups_ = value;
      }
    }

    /// <summary>Field number for the "ThumbnailUrl" field.</summary>
    public const int ThumbnailUrlFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_thumbnailUrl_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string thumbnailUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbnailUrl {
      get { return thumbnailUrl_; }
      set {
        thumbnailUrl_ = value;
      }
    }


    /// <summary>Field number for the "DefaultGalleryId" field.</summary>
    public const int DefaultGalleryIdFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_defaultGalleryId_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string defaultGalleryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultGalleryId {
      get { return defaultGalleryId_; }
      set {
        defaultGalleryId_ = value;
      }
    }


    /// <summary>Field number for the "DefaultExperienceId" field.</summary>
    public const int DefaultExperienceIdFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_defaultExperienceId_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string defaultExperienceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultExperienceId {
      get { return defaultExperienceId_; }
      set {
        defaultExperienceId_ = value;
      }
    }


    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_address_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }


    /// <summary>Field number for the "Contact" field.</summary>
    public const int ContactFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_contact_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string contact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Contact {
      get { return contact_; }
      set {
        contact_ = value;
      }
    }


    /// <summary>Field number for the "Website" field.</summary>
    public const int WebsiteFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_website_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string website_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Website {
      get { return website_; }
      set {
        website_ = value;
      }
    }


    /// <summary>Field number for the "VisitDuration" field.</summary>
    public const int VisitDurationFieldNumber = 16;
    private int visitDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VisitDuration {
      get { return visitDuration_; }
      set {
        visitDuration_ = value;
      }
    }

    /// <summary>Field number for the "PriceFrom" field.</summary>
    public const int PriceFromFieldNumber = 17;
    private float priceFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PriceFrom {
      get { return priceFrom_; }
      set {
        priceFrom_ = value;
      }
    }

    /// <summary>Field number for the "Currency" field.</summary>
    public const int CurrencyFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_currency_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string currency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }


    /// <summary>Field number for the "Latitude" field.</summary>
    public const int LatitudeFieldNumber = 19;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "Longitude" field.</summary>
    public const int LongitudeFieldNumber = 20;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "MapImageUri" field.</summary>
    public const int MapImageUriFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_mapImageUri_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string mapImageUri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapImageUri {
      get { return mapImageUri_; }
      set {
        mapImageUri_ = value;
      }
    }


    /// <summary>Field number for the "TotalLikes" field.</summary>
    public const int TotalLikesFieldNumber = 22;
    private int totalLikes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalLikes {
      get { return totalLikes_; }
      set {
        totalLikes_ = value;
      }
    }

    /// <summary>Field number for the "TotalComments" field.</summary>
    public const int TotalCommentsFieldNumber = 23;
    private int totalComments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalComments {
      get { return totalComments_; }
      set {
        totalComments_ = value;
      }
    }

    /// <summary>Field number for the "TotalRates" field.</summary>
    public const int TotalRatesFieldNumber = 24;
    private int totalRates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRates {
      get { return totalRates_; }
      set {
        totalRates_ = value;
      }
    }

    /// <summary>Field number for the "AvgRates" field.</summary>
    public const int AvgRatesFieldNumber = 25;
    private int avgRates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvgRates {
      get { return avgRates_; }
      set {
        avgRates_ = value;
      }
    }

    /// <summary>Field number for the "Author" field.</summary>
    public const int AuthorFieldNumber = 26;
    private static readonly pb::FieldCodec<string> _single_author_codec = pb::FieldCodec.ForClassWrapper<string>(210);
    private string author_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Author {
      get { return author_; }
      set {
        author_ = value;
      }
    }


    /// <summary>Field number for the "AuthorId" field.</summary>
    public const int AuthorIdFieldNumber = 27;
    private static readonly pb::FieldCodec<string> _single_authorId_codec = pb::FieldCodec.ForClassWrapper<string>(218);
    private string authorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorId {
      get { return authorId_; }
      set {
        authorId_ = value;
      }
    }


    /// <summary>Field number for the "CreateDate" field.</summary>
    public const int CreateDateFieldNumber = 28;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateDate {
      get { return createDate_; }
      set {
        createDate_ = value;
      }
    }

    /// <summary>Field number for the "FromExperience" field.</summary>
    public const int FromExperienceFieldNumber = 29;
    private bool fromExperience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FromExperience {
      get { return fromExperience_; }
      set {
        fromExperience_ = value;
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 30;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 31;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Destination" field.</summary>
    public const int DestinationFieldNumber = 32;
    private global::DbData.Protos.DestinationStruct destination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.DestinationStruct Destination {
      get { return destination_; }
      set {
        destination_ = value;
      }
    }

    /// <summary>Field number for the "AttractionTags" field.</summary>
    public const int AttractionTagsFieldNumber = 33;
    private static readonly pb::FieldCodec<global::DbData.Protos.AttractionTagStruct> _repeated_attractionTags_codec
        = pb::FieldCodec.ForMessage(266, global::DbData.Protos.AttractionTagStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.AttractionTagStruct> attractionTags_ = new pbc::RepeatedField<global::DbData.Protos.AttractionTagStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.AttractionTagStruct> AttractionTags {
      get { return attractionTags_; }
    }

    /// <summary>Field number for the "AttractionLanguage" field.</summary>
    public const int AttractionLanguageFieldNumber = 34;
    private global::DbData.Protos.AttractionLanguageStruct attractionLanguage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.AttractionLanguageStruct AttractionLanguage {
      get { return attractionLanguage_; }
      set {
        attractionLanguage_ = value;
      }
    }

    /// <summary>Field number for the "AttractionLanguages" field.</summary>
    public const int AttractionLanguagesFieldNumber = 35;
    private static readonly pb::FieldCodec<global::DbData.Protos.AttractionLanguageStruct> _repeated_attractionLanguages_codec
        = pb::FieldCodec.ForMessage(282, global::DbData.Protos.AttractionLanguageStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.AttractionLanguageStruct> attractionLanguages_ = new pbc::RepeatedField<global::DbData.Protos.AttractionLanguageStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.AttractionLanguageStruct> AttractionLanguages {
      get { return attractionLanguages_; }
    }

    /// <summary>Field number for the "Tags" field.</summary>
    public const int TagsFieldNumber = 36;
    private static readonly pb::FieldCodec<global::DbData.Protos.TagStruct> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(290, global::DbData.Protos.TagStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.TagStruct> tags_ = new pbc::RepeatedField<global::DbData.Protos.TagStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.TagStruct> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttractionStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttractionStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DestinationId != other.DestinationId) return false;
      if (RouteUri != other.RouteUri) return false;
      if (DefaultName != other.DefaultName) return false;
      if (Description != other.Description) return false;
      if (AttractionTypes != other.AttractionTypes) return false;
      if (TouristClasses != other.TouristClasses) return false;
      if (TouristObjects != other.TouristObjects) return false;
      if (PropertyGroups != other.PropertyGroups) return false;
      if (ThumbnailUrl != other.ThumbnailUrl) return false;
      if (DefaultGalleryId != other.DefaultGalleryId) return false;
      if (DefaultExperienceId != other.DefaultExperienceId) return false;
      if (Address != other.Address) return false;
      if (Contact != other.Contact) return false;
      if (Website != other.Website) return false;
      if (VisitDuration != other.VisitDuration) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PriceFrom, other.PriceFrom)) return false;
      if (Currency != other.Currency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (MapImageUri != other.MapImageUri) return false;
      if (TotalLikes != other.TotalLikes) return false;
      if (TotalComments != other.TotalComments) return false;
      if (TotalRates != other.TotalRates) return false;
      if (AvgRates != other.AvgRates) return false;
      if (Author != other.Author) return false;
      if (AuthorId != other.AuthorId) return false;
      if (!object.Equals(CreateDate, other.CreateDate)) return false;
      if (FromExperience != other.FromExperience) return false;
      if (Priority != other.Priority) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Destination, other.Destination)) return false;
      if(!attractionTags_.Equals(other.attractionTags_)) return false;
      if (!object.Equals(AttractionLanguage, other.AttractionLanguage)) return false;
      if(!attractionLanguages_.Equals(other.attractionLanguages_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (DestinationId.Length != 0) hash ^= DestinationId.GetHashCode();
      if (RouteUri.Length != 0) hash ^= RouteUri.GetHashCode();
      if (DefaultName.Length != 0) hash ^= DefaultName.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (AttractionTypes != 0) hash ^= AttractionTypes.GetHashCode();
      if (TouristClasses != 0) hash ^= TouristClasses.GetHashCode();
      if (TouristObjects != 0) hash ^= TouristObjects.GetHashCode();
      if (PropertyGroups != 0) hash ^= PropertyGroups.GetHashCode();
      if (thumbnailUrl_ != null) hash ^= ThumbnailUrl.GetHashCode();
      if (defaultGalleryId_ != null) hash ^= DefaultGalleryId.GetHashCode();
      if (defaultExperienceId_ != null) hash ^= DefaultExperienceId.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (contact_ != null) hash ^= Contact.GetHashCode();
      if (website_ != null) hash ^= Website.GetHashCode();
      if (VisitDuration != 0) hash ^= VisitDuration.GetHashCode();
      if (PriceFrom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PriceFrom);
      if (currency_ != null) hash ^= Currency.GetHashCode();
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (mapImageUri_ != null) hash ^= MapImageUri.GetHashCode();
      if (TotalLikes != 0) hash ^= TotalLikes.GetHashCode();
      if (TotalComments != 0) hash ^= TotalComments.GetHashCode();
      if (TotalRates != 0) hash ^= TotalRates.GetHashCode();
      if (AvgRates != 0) hash ^= AvgRates.GetHashCode();
      if (author_ != null) hash ^= Author.GetHashCode();
      if (authorId_ != null) hash ^= AuthorId.GetHashCode();
      if (createDate_ != null) hash ^= CreateDate.GetHashCode();
      if (FromExperience != false) hash ^= FromExperience.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (destination_ != null) hash ^= Destination.GetHashCode();
      hash ^= attractionTags_.GetHashCode();
      if (attractionLanguage_ != null) hash ^= AttractionLanguage.GetHashCode();
      hash ^= attractionLanguages_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (DestinationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DestinationId);
      }
      if (RouteUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RouteUri);
      }
      if (DefaultName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DefaultName);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (AttractionTypes != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttractionTypes);
      }
      if (TouristClasses != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TouristClasses);
      }
      if (TouristObjects != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TouristObjects);
      }
      if (PropertyGroups != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PropertyGroups);
      }
      if (thumbnailUrl_ != null) {
        _single_thumbnailUrl_codec.WriteTagAndValue(output, ThumbnailUrl);
      }
      if (defaultGalleryId_ != null) {
        _single_defaultGalleryId_codec.WriteTagAndValue(output, DefaultGalleryId);
      }
      if (defaultExperienceId_ != null) {
        _single_defaultExperienceId_codec.WriteTagAndValue(output, DefaultExperienceId);
      }
      if (address_ != null) {
        _single_address_codec.WriteTagAndValue(output, Address);
      }
      if (contact_ != null) {
        _single_contact_codec.WriteTagAndValue(output, Contact);
      }
      if (website_ != null) {
        _single_website_codec.WriteTagAndValue(output, Website);
      }
      if (VisitDuration != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(VisitDuration);
      }
      if (PriceFrom != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(PriceFrom);
      }
      if (currency_ != null) {
        _single_currency_codec.WriteTagAndValue(output, Currency);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(161, 1);
        output.WriteDouble(Longitude);
      }
      if (mapImageUri_ != null) {
        _single_mapImageUri_codec.WriteTagAndValue(output, MapImageUri);
      }
      if (TotalLikes != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(TotalLikes);
      }
      if (TotalComments != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(TotalComments);
      }
      if (TotalRates != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(TotalRates);
      }
      if (AvgRates != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(AvgRates);
      }
      if (author_ != null) {
        _single_author_codec.WriteTagAndValue(output, Author);
      }
      if (authorId_ != null) {
        _single_authorId_codec.WriteTagAndValue(output, AuthorId);
      }
      if (createDate_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CreateDate);
      }
      if (FromExperience != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(FromExperience);
      }
      if (Priority != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Priority);
      }
      if (Status != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(Status);
      }
      if (destination_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(Destination);
      }
      attractionTags_.WriteTo(output, _repeated_attractionTags_codec);
      if (attractionLanguage_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(AttractionLanguage);
      }
      attractionLanguages_.WriteTo(output, _repeated_attractionLanguages_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (DestinationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DestinationId);
      }
      if (RouteUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RouteUri);
      }
      if (DefaultName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DefaultName);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(ref output, Description);
      }
      if (AttractionTypes != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttractionTypes);
      }
      if (TouristClasses != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TouristClasses);
      }
      if (TouristObjects != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TouristObjects);
      }
      if (PropertyGroups != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PropertyGroups);
      }
      if (thumbnailUrl_ != null) {
        _single_thumbnailUrl_codec.WriteTagAndValue(ref output, ThumbnailUrl);
      }
      if (defaultGalleryId_ != null) {
        _single_defaultGalleryId_codec.WriteTagAndValue(ref output, DefaultGalleryId);
      }
      if (defaultExperienceId_ != null) {
        _single_defaultExperienceId_codec.WriteTagAndValue(ref output, DefaultExperienceId);
      }
      if (address_ != null) {
        _single_address_codec.WriteTagAndValue(ref output, Address);
      }
      if (contact_ != null) {
        _single_contact_codec.WriteTagAndValue(ref output, Contact);
      }
      if (website_ != null) {
        _single_website_codec.WriteTagAndValue(ref output, Website);
      }
      if (VisitDuration != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(VisitDuration);
      }
      if (PriceFrom != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(PriceFrom);
      }
      if (currency_ != null) {
        _single_currency_codec.WriteTagAndValue(ref output, Currency);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(161, 1);
        output.WriteDouble(Longitude);
      }
      if (mapImageUri_ != null) {
        _single_mapImageUri_codec.WriteTagAndValue(ref output, MapImageUri);
      }
      if (TotalLikes != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(TotalLikes);
      }
      if (TotalComments != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(TotalComments);
      }
      if (TotalRates != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(TotalRates);
      }
      if (AvgRates != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(AvgRates);
      }
      if (author_ != null) {
        _single_author_codec.WriteTagAndValue(ref output, Author);
      }
      if (authorId_ != null) {
        _single_authorId_codec.WriteTagAndValue(ref output, AuthorId);
      }
      if (createDate_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CreateDate);
      }
      if (FromExperience != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(FromExperience);
      }
      if (Priority != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Priority);
      }
      if (Status != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(Status);
      }
      if (destination_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(Destination);
      }
      attractionTags_.WriteTo(ref output, _repeated_attractionTags_codec);
      if (attractionLanguage_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(AttractionLanguage);
      }
      attractionLanguages_.WriteTo(ref output, _repeated_attractionLanguages_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (DestinationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinationId);
      }
      if (RouteUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RouteUri);
      }
      if (DefaultName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultName);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (AttractionTypes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttractionTypes);
      }
      if (TouristClasses != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TouristClasses);
      }
      if (TouristObjects != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TouristObjects);
      }
      if (PropertyGroups != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropertyGroups);
      }
      if (thumbnailUrl_ != null) {
        size += _single_thumbnailUrl_codec.CalculateSizeWithTag(ThumbnailUrl);
      }
      if (defaultGalleryId_ != null) {
        size += _single_defaultGalleryId_codec.CalculateSizeWithTag(DefaultGalleryId);
      }
      if (defaultExperienceId_ != null) {
        size += _single_defaultExperienceId_codec.CalculateSizeWithTag(DefaultExperienceId);
      }
      if (address_ != null) {
        size += _single_address_codec.CalculateSizeWithTag(Address);
      }
      if (contact_ != null) {
        size += _single_contact_codec.CalculateSizeWithTag(Contact);
      }
      if (website_ != null) {
        size += _single_website_codec.CalculateSizeWithTag(Website);
      }
      if (VisitDuration != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VisitDuration);
      }
      if (PriceFrom != 0F) {
        size += 2 + 4;
      }
      if (currency_ != null) {
        size += _single_currency_codec.CalculateSizeWithTag(Currency);
      }
      if (Latitude != 0D) {
        size += 2 + 8;
      }
      if (Longitude != 0D) {
        size += 2 + 8;
      }
      if (mapImageUri_ != null) {
        size += _single_mapImageUri_codec.CalculateSizeWithTag(MapImageUri);
      }
      if (TotalLikes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotalLikes);
      }
      if (TotalComments != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotalComments);
      }
      if (TotalRates != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotalRates);
      }
      if (AvgRates != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AvgRates);
      }
      if (author_ != null) {
        size += _single_author_codec.CalculateSizeWithTag(Author);
      }
      if (authorId_ != null) {
        size += _single_authorId_codec.CalculateSizeWithTag(AuthorId);
      }
      if (createDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateDate);
      }
      if (FromExperience != false) {
        size += 2 + 1;
      }
      if (Priority != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (Status != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (destination_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Destination);
      }
      size += attractionTags_.CalculateSize(_repeated_attractionTags_codec);
      if (attractionLanguage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AttractionLanguage);
      }
      size += attractionLanguages_.CalculateSize(_repeated_attractionLanguages_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttractionStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.DestinationId.Length != 0) {
        DestinationId = other.DestinationId;
      }
      if (other.RouteUri.Length != 0) {
        RouteUri = other.RouteUri;
      }
      if (other.DefaultName.Length != 0) {
        DefaultName = other.DefaultName;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.AttractionTypes != 0) {
        AttractionTypes = other.AttractionTypes;
      }
      if (other.TouristClasses != 0) {
        TouristClasses = other.TouristClasses;
      }
      if (other.TouristObjects != 0) {
        TouristObjects = other.TouristObjects;
      }
      if (other.PropertyGroups != 0) {
        PropertyGroups = other.PropertyGroups;
      }
      if (other.thumbnailUrl_ != null) {
        if (thumbnailUrl_ == null || other.ThumbnailUrl != "") {
          ThumbnailUrl = other.ThumbnailUrl;
        }
      }
      if (other.defaultGalleryId_ != null) {
        if (defaultGalleryId_ == null || other.DefaultGalleryId != "") {
          DefaultGalleryId = other.DefaultGalleryId;
        }
      }
      if (other.defaultExperienceId_ != null) {
        if (defaultExperienceId_ == null || other.DefaultExperienceId != "") {
          DefaultExperienceId = other.DefaultExperienceId;
        }
      }
      if (other.address_ != null) {
        if (address_ == null || other.Address != "") {
          Address = other.Address;
        }
      }
      if (other.contact_ != null) {
        if (contact_ == null || other.Contact != "") {
          Contact = other.Contact;
        }
      }
      if (other.website_ != null) {
        if (website_ == null || other.Website != "") {
          Website = other.Website;
        }
      }
      if (other.VisitDuration != 0) {
        VisitDuration = other.VisitDuration;
      }
      if (other.PriceFrom != 0F) {
        PriceFrom = other.PriceFrom;
      }
      if (other.currency_ != null) {
        if (currency_ == null || other.Currency != "") {
          Currency = other.Currency;
        }
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.mapImageUri_ != null) {
        if (mapImageUri_ == null || other.MapImageUri != "") {
          MapImageUri = other.MapImageUri;
        }
      }
      if (other.TotalLikes != 0) {
        TotalLikes = other.TotalLikes;
      }
      if (other.TotalComments != 0) {
        TotalComments = other.TotalComments;
      }
      if (other.TotalRates != 0) {
        TotalRates = other.TotalRates;
      }
      if (other.AvgRates != 0) {
        AvgRates = other.AvgRates;
      }
      if (other.author_ != null) {
        if (author_ == null || other.Author != "") {
          Author = other.Author;
        }
      }
      if (other.authorId_ != null) {
        if (authorId_ == null || other.AuthorId != "") {
          AuthorId = other.AuthorId;
        }
      }
      if (other.createDate_ != null) {
        if (createDate_ == null) {
          CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateDate.MergeFrom(other.CreateDate);
      }
      if (other.FromExperience != false) {
        FromExperience = other.FromExperience;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.destination_ != null) {
        if (destination_ == null) {
          Destination = new global::DbData.Protos.DestinationStruct();
        }
        Destination.MergeFrom(other.Destination);
      }
      attractionTags_.Add(other.attractionTags_);
      if (other.attractionLanguage_ != null) {
        if (attractionLanguage_ == null) {
          AttractionLanguage = new global::DbData.Protos.AttractionLanguageStruct();
        }
        AttractionLanguage.MergeFrom(other.AttractionLanguage);
      }
      attractionLanguages_.Add(other.attractionLanguages_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            DestinationId = input.ReadString();
            break;
          }
          case 26: {
            RouteUri = input.ReadString();
            break;
          }
          case 34: {
            DefaultName = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 48: {
            AttractionTypes = input.ReadInt32();
            break;
          }
          case 56: {
            TouristClasses = input.ReadInt32();
            break;
          }
          case 64: {
            TouristObjects = input.ReadInt32();
            break;
          }
          case 72: {
            PropertyGroups = input.ReadInt32();
            break;
          }
          case 82: {
            string value = _single_thumbnailUrl_codec.Read(input);
            if (thumbnailUrl_ == null || value != "") {
              ThumbnailUrl = value;
            }
            break;
          }
          case 90: {
            string value = _single_defaultGalleryId_codec.Read(input);
            if (defaultGalleryId_ == null || value != "") {
              DefaultGalleryId = value;
            }
            break;
          }
          case 98: {
            string value = _single_defaultExperienceId_codec.Read(input);
            if (defaultExperienceId_ == null || value != "") {
              DefaultExperienceId = value;
            }
            break;
          }
          case 106: {
            string value = _single_address_codec.Read(input);
            if (address_ == null || value != "") {
              Address = value;
            }
            break;
          }
          case 114: {
            string value = _single_contact_codec.Read(input);
            if (contact_ == null || value != "") {
              Contact = value;
            }
            break;
          }
          case 122: {
            string value = _single_website_codec.Read(input);
            if (website_ == null || value != "") {
              Website = value;
            }
            break;
          }
          case 128: {
            VisitDuration = input.ReadInt32();
            break;
          }
          case 141: {
            PriceFrom = input.ReadFloat();
            break;
          }
          case 146: {
            string value = _single_currency_codec.Read(input);
            if (currency_ == null || value != "") {
              Currency = value;
            }
            break;
          }
          case 153: {
            Latitude = input.ReadDouble();
            break;
          }
          case 161: {
            Longitude = input.ReadDouble();
            break;
          }
          case 170: {
            string value = _single_mapImageUri_codec.Read(input);
            if (mapImageUri_ == null || value != "") {
              MapImageUri = value;
            }
            break;
          }
          case 176: {
            TotalLikes = input.ReadInt32();
            break;
          }
          case 184: {
            TotalComments = input.ReadInt32();
            break;
          }
          case 192: {
            TotalRates = input.ReadInt32();
            break;
          }
          case 200: {
            AvgRates = input.ReadInt32();
            break;
          }
          case 210: {
            string value = _single_author_codec.Read(input);
            if (author_ == null || value != "") {
              Author = value;
            }
            break;
          }
          case 218: {
            string value = _single_authorId_codec.Read(input);
            if (authorId_ == null || value != "") {
              AuthorId = value;
            }
            break;
          }
          case 226: {
            if (createDate_ == null) {
              CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateDate);
            break;
          }
          case 232: {
            FromExperience = input.ReadBool();
            break;
          }
          case 240: {
            Priority = input.ReadInt32();
            break;
          }
          case 248: {
            Status = input.ReadInt32();
            break;
          }
          case 258: {
            if (destination_ == null) {
              Destination = new global::DbData.Protos.DestinationStruct();
            }
            input.ReadMessage(Destination);
            break;
          }
          case 266: {
            attractionTags_.AddEntriesFrom(input, _repeated_attractionTags_codec);
            break;
          }
          case 274: {
            if (attractionLanguage_ == null) {
              AttractionLanguage = new global::DbData.Protos.AttractionLanguageStruct();
            }
            input.ReadMessage(AttractionLanguage);
            break;
          }
          case 282: {
            attractionLanguages_.AddEntriesFrom(input, _repeated_attractionLanguages_codec);
            break;
          }
          case 290: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            DestinationId = input.ReadString();
            break;
          }
          case 26: {
            RouteUri = input.ReadString();
            break;
          }
          case 34: {
            DefaultName = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(ref input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 48: {
            AttractionTypes = input.ReadInt32();
            break;
          }
          case 56: {
            TouristClasses = input.ReadInt32();
            break;
          }
          case 64: {
            TouristObjects = input.ReadInt32();
            break;
          }
          case 72: {
            PropertyGroups = input.ReadInt32();
            break;
          }
          case 82: {
            string value = _single_thumbnailUrl_codec.Read(ref input);
            if (thumbnailUrl_ == null || value != "") {
              ThumbnailUrl = value;
            }
            break;
          }
          case 90: {
            string value = _single_defaultGalleryId_codec.Read(ref input);
            if (defaultGalleryId_ == null || value != "") {
              DefaultGalleryId = value;
            }
            break;
          }
          case 98: {
            string value = _single_defaultExperienceId_codec.Read(ref input);
            if (defaultExperienceId_ == null || value != "") {
              DefaultExperienceId = value;
            }
            break;
          }
          case 106: {
            string value = _single_address_codec.Read(ref input);
            if (address_ == null || value != "") {
              Address = value;
            }
            break;
          }
          case 114: {
            string value = _single_contact_codec.Read(ref input);
            if (contact_ == null || value != "") {
              Contact = value;
            }
            break;
          }
          case 122: {
            string value = _single_website_codec.Read(ref input);
            if (website_ == null || value != "") {
              Website = value;
            }
            break;
          }
          case 128: {
            VisitDuration = input.ReadInt32();
            break;
          }
          case 141: {
            PriceFrom = input.ReadFloat();
            break;
          }
          case 146: {
            string value = _single_currency_codec.Read(ref input);
            if (currency_ == null || value != "") {
              Currency = value;
            }
            break;
          }
          case 153: {
            Latitude = input.ReadDouble();
            break;
          }
          case 161: {
            Longitude = input.ReadDouble();
            break;
          }
          case 170: {
            string value = _single_mapImageUri_codec.Read(ref input);
            if (mapImageUri_ == null || value != "") {
              MapImageUri = value;
            }
            break;
          }
          case 176: {
            TotalLikes = input.ReadInt32();
            break;
          }
          case 184: {
            TotalComments = input.ReadInt32();
            break;
          }
          case 192: {
            TotalRates = input.ReadInt32();
            break;
          }
          case 200: {
            AvgRates = input.ReadInt32();
            break;
          }
          case 210: {
            string value = _single_author_codec.Read(ref input);
            if (author_ == null || value != "") {
              Author = value;
            }
            break;
          }
          case 218: {
            string value = _single_authorId_codec.Read(ref input);
            if (authorId_ == null || value != "") {
              AuthorId = value;
            }
            break;
          }
          case 226: {
            if (createDate_ == null) {
              CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateDate);
            break;
          }
          case 232: {
            FromExperience = input.ReadBool();
            break;
          }
          case 240: {
            Priority = input.ReadInt32();
            break;
          }
          case 248: {
            Status = input.ReadInt32();
            break;
          }
          case 258: {
            if (destination_ == null) {
              Destination = new global::DbData.Protos.DestinationStruct();
            }
            input.ReadMessage(Destination);
            break;
          }
          case 266: {
            attractionTags_.AddEntriesFrom(ref input, _repeated_attractionTags_codec);
            break;
          }
          case 274: {
            if (attractionLanguage_ == null) {
              AttractionLanguage = new global::DbData.Protos.AttractionLanguageStruct();
            }
            input.ReadMessage(AttractionLanguage);
            break;
          }
          case 282: {
            attractionLanguages_.AddEntriesFrom(ref input, _repeated_attractionLanguages_codec);
            break;
          }
          case 290: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AttractionLanguageStruct : pb::IMessage<AttractionLanguageStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttractionLanguageStruct> _parser = new pb::MessageParser<AttractionLanguageStruct>(() => new AttractionLanguageStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttractionLanguageStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgAttractionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionLanguageStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionLanguageStruct(AttractionLanguageStruct other) : this() {
      Id = other.Id;
      AttractionId = other.AttractionId;
      langCode_ = other.langCode_;
      name_ = other.name_;
      Description = other.Description;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionLanguageStruct Clone() {
      return new AttractionLanguageStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "attractionId" field.</summary>
    public const int AttractionIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_attractionId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string attractionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttractionId {
      get { return attractionId_; }
      set {
        attractionId_ = value;
      }
    }


    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 3;
    private string langCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttractionLanguageStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttractionLanguageStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AttractionId != other.AttractionId) return false;
      if (LangCode != other.LangCode) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (attractionId_ != null) hash ^= AttractionId.GetHashCode();
      if (LangCode.Length != 0) hash ^= LangCode.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (attractionId_ != null) {
        _single_attractionId_codec.WriteTagAndValue(output, AttractionId);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LangCode);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (attractionId_ != null) {
        _single_attractionId_codec.WriteTagAndValue(ref output, AttractionId);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LangCode);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(ref output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (attractionId_ != null) {
        size += _single_attractionId_codec.CalculateSizeWithTag(AttractionId);
      }
      if (LangCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangCode);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttractionLanguageStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.attractionId_ != null) {
        if (attractionId_ == null || other.AttractionId != "") {
          AttractionId = other.AttractionId;
        }
      }
      if (other.LangCode.Length != 0) {
        LangCode = other.LangCode;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_attractionId_codec.Read(input);
            if (attractionId_ == null || value != "") {
              AttractionId = value;
            }
            break;
          }
          case 26: {
            LangCode = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_attractionId_codec.Read(ref input);
            if (attractionId_ == null || value != "") {
              AttractionId = value;
            }
            break;
          }
          case 26: {
            LangCode = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(ref input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AttractionFilter : pb::IMessage<AttractionFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttractionFilter> _parser = new pb::MessageParser<AttractionFilter>(() => new AttractionFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttractionFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgAttractionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionFilter(AttractionFilter other) : this() {
      paging_ = other.paging_ != null ? other.paging_.Clone() : null;
      sort_ = other.sort_ != null ? other.sort_.Clone() : null;
      Name = other.Name;
      DestinationId = other.DestinationId;
      attractionTypes_ = other.attractionTypes_;
      touristClasses_ = other.touristClasses_;
      touristObjects_ = other.touristObjects_;
      propertyGroups_ = other.propertyGroups_;
      Tags = other.Tags;
      LangCode = other.LangCode;
      DefaultLang = other.DefaultLang;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionFilter Clone() {
      return new AttractionFilter(this);
    }

    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 1;
    private global::DbData.Protos.PagingType paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.PagingType Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 2;
    private global::DbData.Protos.SortType sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.SortType Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "destinationId" field.</summary>
    public const int DestinationIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_destinationId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string destinationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationId {
      get { return destinationId_; }
      set {
        destinationId_ = value;
      }
    }


    /// <summary>Field number for the "attractionTypes" field.</summary>
    public const int AttractionTypesFieldNumber = 5;
    private int attractionTypes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttractionTypes {
      get { return attractionTypes_; }
      set {
        attractionTypes_ = value;
      }
    }

    /// <summary>Field number for the "touristClasses" field.</summary>
    public const int TouristClassesFieldNumber = 6;
    private int touristClasses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TouristClasses {
      get { return touristClasses_; }
      set {
        touristClasses_ = value;
      }
    }

    /// <summary>Field number for the "touristObjects" field.</summary>
    public const int TouristObjectsFieldNumber = 7;
    private int touristObjects_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TouristObjects {
      get { return touristObjects_; }
      set {
        touristObjects_ = value;
      }
    }

    /// <summary>Field number for the "propertyGroups" field.</summary>
    public const int PropertyGroupsFieldNumber = 8;
    private int propertyGroups_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropertyGroups {
      get { return propertyGroups_; }
      set {
        propertyGroups_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_tags_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }


    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_langCode_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string langCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = value;
      }
    }


    /// <summary>Field number for the "defaultLang" field.</summary>
    public const int DefaultLangFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_defaultLang_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string defaultLang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultLang {
      get { return defaultLang_; }
      set {
        defaultLang_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttractionFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttractionFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Paging, other.Paging)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (Name != other.Name) return false;
      if (DestinationId != other.DestinationId) return false;
      if (AttractionTypes != other.AttractionTypes) return false;
      if (TouristClasses != other.TouristClasses) return false;
      if (TouristObjects != other.TouristObjects) return false;
      if (PropertyGroups != other.PropertyGroups) return false;
      if (Tags != other.Tags) return false;
      if (LangCode != other.LangCode) return false;
      if (DefaultLang != other.DefaultLang) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (paging_ != null) hash ^= Paging.GetHashCode();
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (destinationId_ != null) hash ^= DestinationId.GetHashCode();
      if (AttractionTypes != 0) hash ^= AttractionTypes.GetHashCode();
      if (TouristClasses != 0) hash ^= TouristClasses.GetHashCode();
      if (TouristObjects != 0) hash ^= TouristObjects.GetHashCode();
      if (PropertyGroups != 0) hash ^= PropertyGroups.GetHashCode();
      if (tags_ != null) hash ^= Tags.GetHashCode();
      if (langCode_ != null) hash ^= LangCode.GetHashCode();
      if (defaultLang_ != null) hash ^= DefaultLang.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (destinationId_ != null) {
        _single_destinationId_codec.WriteTagAndValue(output, DestinationId);
      }
      if (AttractionTypes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AttractionTypes);
      }
      if (TouristClasses != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TouristClasses);
      }
      if (TouristObjects != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TouristObjects);
      }
      if (PropertyGroups != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PropertyGroups);
      }
      if (tags_ != null) {
        _single_tags_codec.WriteTagAndValue(output, Tags);
      }
      if (langCode_ != null) {
        _single_langCode_codec.WriteTagAndValue(output, LangCode);
      }
      if (defaultLang_ != null) {
        _single_defaultLang_codec.WriteTagAndValue(output, DefaultLang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(ref output, Name);
      }
      if (destinationId_ != null) {
        _single_destinationId_codec.WriteTagAndValue(ref output, DestinationId);
      }
      if (AttractionTypes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AttractionTypes);
      }
      if (TouristClasses != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TouristClasses);
      }
      if (TouristObjects != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TouristObjects);
      }
      if (PropertyGroups != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PropertyGroups);
      }
      if (tags_ != null) {
        _single_tags_codec.WriteTagAndValue(ref output, Tags);
      }
      if (langCode_ != null) {
        _single_langCode_codec.WriteTagAndValue(ref output, LangCode);
      }
      if (defaultLang_ != null) {
        _single_defaultLang_codec.WriteTagAndValue(ref output, DefaultLang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (paging_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
      }
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (destinationId_ != null) {
        size += _single_destinationId_codec.CalculateSizeWithTag(DestinationId);
      }
      if (AttractionTypes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttractionTypes);
      }
      if (TouristClasses != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TouristClasses);
      }
      if (TouristObjects != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TouristObjects);
      }
      if (PropertyGroups != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropertyGroups);
      }
      if (tags_ != null) {
        size += _single_tags_codec.CalculateSizeWithTag(Tags);
      }
      if (langCode_ != null) {
        size += _single_langCode_codec.CalculateSizeWithTag(LangCode);
      }
      if (defaultLang_ != null) {
        size += _single_defaultLang_codec.CalculateSizeWithTag(DefaultLang);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttractionFilter other) {
      if (other == null) {
        return;
      }
      if (other.paging_ != null) {
        if (paging_ == null) {
          Paging = new global::DbData.Protos.PagingType();
        }
        Paging.MergeFrom(other.Paging);
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          Sort = new global::DbData.Protos.SortType();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.destinationId_ != null) {
        if (destinationId_ == null || other.DestinationId != "") {
          DestinationId = other.DestinationId;
        }
      }
      if (other.AttractionTypes != 0) {
        AttractionTypes = other.AttractionTypes;
      }
      if (other.TouristClasses != 0) {
        TouristClasses = other.TouristClasses;
      }
      if (other.TouristObjects != 0) {
        TouristObjects = other.TouristObjects;
      }
      if (other.PropertyGroups != 0) {
        PropertyGroups = other.PropertyGroups;
      }
      if (other.tags_ != null) {
        if (tags_ == null || other.Tags != "") {
          Tags = other.Tags;
        }
      }
      if (other.langCode_ != null) {
        if (langCode_ == null || other.LangCode != "") {
          LangCode = other.LangCode;
        }
      }
      if (other.defaultLang_ != null) {
        if (defaultLang_ == null || other.DefaultLang != "") {
          DefaultLang = other.DefaultLang;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 34: {
            string value = _single_destinationId_codec.Read(input);
            if (destinationId_ == null || value != "") {
              DestinationId = value;
            }
            break;
          }
          case 40: {
            AttractionTypes = input.ReadInt32();
            break;
          }
          case 48: {
            TouristClasses = input.ReadInt32();
            break;
          }
          case 56: {
            TouristObjects = input.ReadInt32();
            break;
          }
          case 64: {
            PropertyGroups = input.ReadInt32();
            break;
          }
          case 74: {
            string value = _single_tags_codec.Read(input);
            if (tags_ == null || value != "") {
              Tags = value;
            }
            break;
          }
          case 82: {
            string value = _single_langCode_codec.Read(input);
            if (langCode_ == null || value != "") {
              LangCode = value;
            }
            break;
          }
          case 90: {
            string value = _single_defaultLang_codec.Read(input);
            if (defaultLang_ == null || value != "") {
              DefaultLang = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(ref input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 34: {
            string value = _single_destinationId_codec.Read(ref input);
            if (destinationId_ == null || value != "") {
              DestinationId = value;
            }
            break;
          }
          case 40: {
            AttractionTypes = input.ReadInt32();
            break;
          }
          case 48: {
            TouristClasses = input.ReadInt32();
            break;
          }
          case 56: {
            TouristObjects = input.ReadInt32();
            break;
          }
          case 64: {
            PropertyGroups = input.ReadInt32();
            break;
          }
          case 74: {
            string value = _single_tags_codec.Read(ref input);
            if (tags_ == null || value != "") {
              Tags = value;
            }
            break;
          }
          case 82: {
            string value = _single_langCode_codec.Read(ref input);
            if (langCode_ == null || value != "") {
              LangCode = value;
            }
            break;
          }
          case 90: {
            string value = _single_defaultLang_codec.Read(ref input);
            if (defaultLang_ == null || value != "") {
              DefaultLang = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListAttractionResponse : pb::IMessage<ListAttractionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListAttractionResponse> _parser = new pb::MessageParser<ListAttractionResponse>(() => new ListAttractionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAttractionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgAttractionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAttractionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAttractionResponse(ListAttractionResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAttractionResponse Clone() {
      return new ListAttractionResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DbData.Protos.AttractionStruct> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::DbData.Protos.AttractionStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.AttractionStruct> data_ = new pbc::RepeatedField<global::DbData.Protos.AttractionStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.AttractionStruct> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAttractionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAttractionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAttractionResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AttractionTagStruct : pb::IMessage<AttractionTagStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttractionTagStruct> _parser = new pb::MessageParser<AttractionTagStruct>(() => new AttractionTagStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttractionTagStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgAttractionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionTagStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionTagStruct(AttractionTagStruct other) : this() {
      AttractionId = other.AttractionId;
      TagId = other.TagId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttractionTagStruct Clone() {
      return new AttractionTagStruct(this);
    }

    /// <summary>Field number for the "attractionId" field.</summary>
    public const int AttractionIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_attractionId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string attractionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttractionId {
      get { return attractionId_; }
      set {
        attractionId_ = value;
      }
    }


    /// <summary>Field number for the "tagId" field.</summary>
    public const int TagIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_tagId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string tagId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagId {
      get { return tagId_; }
      set {
        tagId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttractionTagStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttractionTagStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttractionId != other.AttractionId) return false;
      if (TagId != other.TagId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (attractionId_ != null) hash ^= AttractionId.GetHashCode();
      if (tagId_ != null) hash ^= TagId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (attractionId_ != null) {
        _single_attractionId_codec.WriteTagAndValue(output, AttractionId);
      }
      if (tagId_ != null) {
        _single_tagId_codec.WriteTagAndValue(output, TagId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (attractionId_ != null) {
        _single_attractionId_codec.WriteTagAndValue(ref output, AttractionId);
      }
      if (tagId_ != null) {
        _single_tagId_codec.WriteTagAndValue(ref output, TagId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (attractionId_ != null) {
        size += _single_attractionId_codec.CalculateSizeWithTag(AttractionId);
      }
      if (tagId_ != null) {
        size += _single_tagId_codec.CalculateSizeWithTag(TagId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttractionTagStruct other) {
      if (other == null) {
        return;
      }
      if (other.attractionId_ != null) {
        if (attractionId_ == null || other.AttractionId != "") {
          AttractionId = other.AttractionId;
        }
      }
      if (other.tagId_ != null) {
        if (tagId_ == null || other.TagId != "") {
          TagId = other.TagId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_attractionId_codec.Read(input);
            if (attractionId_ == null || value != "") {
              AttractionId = value;
            }
            break;
          }
          case 18: {
            string value = _single_tagId_codec.Read(input);
            if (tagId_ == null || value != "") {
              TagId = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_attractionId_codec.Read(ref input);
            if (attractionId_ == null || value != "") {
              AttractionId = value;
            }
            break;
          }
          case 18: {
            string value = _single_tagId_codec.Read(ref input);
            if (tagId_ == null || value != "") {
              TagId = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
