// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msgDestination.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DbData.Protos {

  /// <summary>Holder for reflection information generated from msgDestination.proto</summary>
  public static partial class MsgDestinationReflection {

    #region Descriptor
    /// <summary>File descriptor for msgDestination.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgDestinationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRtc2dEZXN0aW5hdGlvbi5wcm90bxIGZGJkYXRhGh5nb29nbGUvcHJvdG9i",
            "dWYvd3JhcHBlcnMucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAu",
            "cHJvdG8aFW1zZ0RiRGF0YUNvbW1vbi5wcm90byKBCAoRRGVzdGluYXRpb25T",
            "dHJ1Y3QSKAoCaWQYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSLwoJY29udGluZW50GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEhEKCWNvdW50cnlJZBgDIAEoBRITCgtjb3VudHJ5TmFtZRgEIAEo",
            "CRIPCgdzdGF0ZUlkGAUgASgFEi8KCXN0YXRlTmFtZRgGIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIOCgZjaXR5SWQYByABKAUSLgoIY2l0",
            "eU5hbWUYCCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEwoL",
            "ZGVmYXVsdE5hbWUYCSABKAkSMQoLZGVzY3JpcHRpb24YCiABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEAoIcm91dGVVcmkYCyABKAkSMgoM",
            "dGh1bWJuYWlsVXJsGAwgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEi8KCWJhbm5lclVybBgNIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZRI7ChVkZXN0aW5hdGlvbk92ZXJ2aWV3SWQYDiABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNgoQZGVmYXVsdEdhbGxlcnlJZBgP",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIQCghsYXRpdHVk",
            "ZRgQIAEoARIRCglsb25naXR1ZGUYESABKAESMQoLbWFwSW1hZ2VVcmkYEiAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEgoKdG90YWxMaWtl",
            "cxgTIAEoBRISCgp0b3RhbFJhdGVzGBQgASgFEhAKCGF2Z1JhdGVzGBUgASgF",
            "Ej4KE2Rlc3RpbmF0aW9uTGFuZ3VhZ2UYFiABKAsyIS5kYmRhdGEuRGVzdGlu",
            "YXRpb25MYW5ndWFnZVN0cnVjdBI/ChRkZXN0aW5hdGlvbkxhbmd1YWdlcxgX",
            "IAMoCzIhLmRiZGF0YS5EZXN0aW5hdGlvbkxhbmd1YWdlU3RydWN0Ej4KE2Rl",
            "c3RpbmF0aW9uT3ZlcnZpZXcYGCABKAsyIS5kYmRhdGEuRGVzdGluYXRpb25P",
            "dmVydmlld1N0cnVjdBI/ChRkZXN0aW5hdGlvbk92ZXJ2aWV3cxgZIAMoCzIh",
            "LmRiZGF0YS5EZXN0aW5hdGlvbk92ZXJ2aWV3U3RydWN0Eh8KBHRhZ3MYGiAD",
            "KAsyES5kYmRhdGEuVGFnU3RydWN0Is0BChlEZXN0aW5hdGlvbkxhbmd1YWdl",
            "U3RydWN0EigKAmlkGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjMKDWRlc3RpbmF0aW9uSWQYAiABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSEAoIbGFuZ0NvZGUYAyABKAkSDAoEbmFtZRgEIAEoCRIx",
            "CgtkZXNjcmlwdGlvbhgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZSKfAwoZRGVzdGluYXRpb25PdmVydmlld1N0cnVjdBIoCgJpZBgBIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIQCghsYW5nQ29kZRgC",
            "IAEoCRIQCghSb3V0ZVVyaRgDIAEoCRINCgVUaXRsZRgEIAEoCRIuCghTdWJU",
            "aXRsZRgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIxCgtE",
            "ZXNjcmlwdGlvbhgGIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRIsCgZEZXRhaWwYByABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSMgoMVGh1bWJuYWlsVXJsGAggASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEg4KBkF1dGhvchgJIAEoCRIQCghBdXRob3JJZBgKIAEoCRIu",
            "CgpDcmVhdGVEYXRlGAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIOCgZTdGF0dXMYDCABKAUi/wMKEURlc3RpbmF0aW9uRmlsdGVyEiIKBnBh",
            "Z2luZxgBIAEoCzISLmRiZGF0YS5QYWdpbmdUeXBlEh4KBHNvcnQYAiABKAsy",
            "EC5kYmRhdGEuU29ydFR5cGUSKgoETmFtZRgDIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIvCglDb250aW5lbnQYBCABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSLQoHQ291bnRyeRgFIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIRCglDb3VudHJ5SWQYBiABKAUSKwoF",
            "U3RhdGUYByABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSDwoH",
            "U3RhdGVJZBgIIAEoBRIqCgRDaXR5GAkgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEg4KBkNpdHlJZBgKIAEoBRIqCgRUYWdzGAsgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCGxhbmdDb2RlGAwgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjEKC2RlZmF1bHRMYW5n",
            "GA0gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIlgKF0xpc3RE",
            "ZXN0aW5hdGlvblJlc3BvbnNlEhQKDHRvdGFsUmVjb3JkcxgBIAEoBRInCgRE",
            "YXRhGAIgAygLMhkuZGJkYXRhLkRlc3RpbmF0aW9uU3RydWN0QhCqAg1EYkRh",
            "dGEuUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::DbData.Protos.MsgDbDataCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.DestinationStruct), global::DbData.Protos.DestinationStruct.Parser, new[]{ "Id", "Continent", "CountryId", "CountryName", "StateId", "StateName", "CityId", "CityName", "DefaultName", "Description", "RouteUri", "ThumbnailUrl", "BannerUrl", "DestinationOverviewId", "DefaultGalleryId", "Latitude", "Longitude", "MapImageUri", "TotalLikes", "TotalRates", "AvgRates", "DestinationLanguage", "DestinationLanguages", "DestinationOverview", "DestinationOverviews", "Tags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.DestinationLanguageStruct), global::DbData.Protos.DestinationLanguageStruct.Parser, new[]{ "Id", "DestinationId", "LangCode", "Name", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.DestinationOverviewStruct), global::DbData.Protos.DestinationOverviewStruct.Parser, new[]{ "Id", "LangCode", "RouteUri", "Title", "SubTitle", "Description", "Detail", "ThumbnailUrl", "Author", "AuthorId", "CreateDate", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.DestinationFilter), global::DbData.Protos.DestinationFilter.Parser, new[]{ "Paging", "Sort", "Name", "Continent", "Country", "CountryId", "State", "StateId", "City", "CityId", "Tags", "LangCode", "DefaultLang" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DbData.Protos.ListDestinationResponse), global::DbData.Protos.ListDestinationResponse.Parser, new[]{ "TotalRecords", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DestinationStruct : pb::IMessage<DestinationStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DestinationStruct> _parser = new pb::MessageParser<DestinationStruct>(() => new DestinationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestinationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgDestinationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationStruct(DestinationStruct other) : this() {
      Id = other.Id;
      Continent = other.Continent;
      countryId_ = other.countryId_;
      countryName_ = other.countryName_;
      stateId_ = other.stateId_;
      StateName = other.StateName;
      cityId_ = other.cityId_;
      CityName = other.CityName;
      defaultName_ = other.defaultName_;
      Description = other.Description;
      routeUri_ = other.routeUri_;
      ThumbnailUrl = other.ThumbnailUrl;
      BannerUrl = other.BannerUrl;
      DestinationOverviewId = other.DestinationOverviewId;
      DefaultGalleryId = other.DefaultGalleryId;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      MapImageUri = other.MapImageUri;
      totalLikes_ = other.totalLikes_;
      totalRates_ = other.totalRates_;
      avgRates_ = other.avgRates_;
      destinationLanguage_ = other.destinationLanguage_ != null ? other.destinationLanguage_.Clone() : null;
      destinationLanguages_ = other.destinationLanguages_.Clone();
      destinationOverview_ = other.destinationOverview_ != null ? other.destinationOverview_.Clone() : null;
      destinationOverviews_ = other.destinationOverviews_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationStruct Clone() {
      return new DestinationStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "continent" field.</summary>
    public const int ContinentFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_continent_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string continent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Continent {
      get { return continent_; }
      set {
        continent_ = value;
      }
    }


    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 3;
    private int countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountryId {
      get { return countryId_; }
      set {
        countryId_ = value;
      }
    }

    /// <summary>Field number for the "countryName" field.</summary>
    public const int CountryNameFieldNumber = 4;
    private string countryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryName {
      get { return countryName_; }
      set {
        countryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stateId" field.</summary>
    public const int StateIdFieldNumber = 5;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "stateName" field.</summary>
    public const int StateNameFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_stateName_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string stateName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateName {
      get { return stateName_; }
      set {
        stateName_ = value;
      }
    }


    /// <summary>Field number for the "cityId" field.</summary>
    public const int CityIdFieldNumber = 7;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "cityName" field.</summary>
    public const int CityNameFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_cityName_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string cityName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CityName {
      get { return cityName_; }
      set {
        cityName_ = value;
      }
    }


    /// <summary>Field number for the "defaultName" field.</summary>
    public const int DefaultNameFieldNumber = 9;
    private string defaultName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultName {
      get { return defaultName_; }
      set {
        defaultName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "routeUri" field.</summary>
    public const int RouteUriFieldNumber = 11;
    private string routeUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RouteUri {
      get { return routeUri_; }
      set {
        routeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thumbnailUrl" field.</summary>
    public const int ThumbnailUrlFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_thumbnailUrl_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string thumbnailUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbnailUrl {
      get { return thumbnailUrl_; }
      set {
        thumbnailUrl_ = value;
      }
    }


    /// <summary>Field number for the "bannerUrl" field.</summary>
    public const int BannerUrlFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_bannerUrl_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string bannerUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BannerUrl {
      get { return bannerUrl_; }
      set {
        bannerUrl_ = value;
      }
    }


    /// <summary>Field number for the "destinationOverviewId" field.</summary>
    public const int DestinationOverviewIdFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_destinationOverviewId_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string destinationOverviewId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationOverviewId {
      get { return destinationOverviewId_; }
      set {
        destinationOverviewId_ = value;
      }
    }


    /// <summary>Field number for the "defaultGalleryId" field.</summary>
    public const int DefaultGalleryIdFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_defaultGalleryId_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string defaultGalleryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultGalleryId {
      get { return defaultGalleryId_; }
      set {
        defaultGalleryId_ = value;
      }
    }


    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 16;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 17;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "mapImageUri" field.</summary>
    public const int MapImageUriFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_mapImageUri_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string mapImageUri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapImageUri {
      get { return mapImageUri_; }
      set {
        mapImageUri_ = value;
      }
    }


    /// <summary>Field number for the "totalLikes" field.</summary>
    public const int TotalLikesFieldNumber = 19;
    private int totalLikes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalLikes {
      get { return totalLikes_; }
      set {
        totalLikes_ = value;
      }
    }

    /// <summary>Field number for the "totalRates" field.</summary>
    public const int TotalRatesFieldNumber = 20;
    private int totalRates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRates {
      get { return totalRates_; }
      set {
        totalRates_ = value;
      }
    }

    /// <summary>Field number for the "avgRates" field.</summary>
    public const int AvgRatesFieldNumber = 21;
    private int avgRates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvgRates {
      get { return avgRates_; }
      set {
        avgRates_ = value;
      }
    }

    /// <summary>Field number for the "destinationLanguage" field.</summary>
    public const int DestinationLanguageFieldNumber = 22;
    private global::DbData.Protos.DestinationLanguageStruct destinationLanguage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.DestinationLanguageStruct DestinationLanguage {
      get { return destinationLanguage_; }
      set {
        destinationLanguage_ = value;
      }
    }

    /// <summary>Field number for the "destinationLanguages" field.</summary>
    public const int DestinationLanguagesFieldNumber = 23;
    private static readonly pb::FieldCodec<global::DbData.Protos.DestinationLanguageStruct> _repeated_destinationLanguages_codec
        = pb::FieldCodec.ForMessage(186, global::DbData.Protos.DestinationLanguageStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.DestinationLanguageStruct> destinationLanguages_ = new pbc::RepeatedField<global::DbData.Protos.DestinationLanguageStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.DestinationLanguageStruct> DestinationLanguages {
      get { return destinationLanguages_; }
    }

    /// <summary>Field number for the "destinationOverview" field.</summary>
    public const int DestinationOverviewFieldNumber = 24;
    private global::DbData.Protos.DestinationOverviewStruct destinationOverview_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.DestinationOverviewStruct DestinationOverview {
      get { return destinationOverview_; }
      set {
        destinationOverview_ = value;
      }
    }

    /// <summary>Field number for the "destinationOverviews" field.</summary>
    public const int DestinationOverviewsFieldNumber = 25;
    private static readonly pb::FieldCodec<global::DbData.Protos.DestinationOverviewStruct> _repeated_destinationOverviews_codec
        = pb::FieldCodec.ForMessage(202, global::DbData.Protos.DestinationOverviewStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.DestinationOverviewStruct> destinationOverviews_ = new pbc::RepeatedField<global::DbData.Protos.DestinationOverviewStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.DestinationOverviewStruct> DestinationOverviews {
      get { return destinationOverviews_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 26;
    private static readonly pb::FieldCodec<global::DbData.Protos.TagStruct> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(210, global::DbData.Protos.TagStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.TagStruct> tags_ = new pbc::RepeatedField<global::DbData.Protos.TagStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.TagStruct> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestinationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestinationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Continent != other.Continent) return false;
      if (CountryId != other.CountryId) return false;
      if (CountryName != other.CountryName) return false;
      if (StateId != other.StateId) return false;
      if (StateName != other.StateName) return false;
      if (CityId != other.CityId) return false;
      if (CityName != other.CityName) return false;
      if (DefaultName != other.DefaultName) return false;
      if (Description != other.Description) return false;
      if (RouteUri != other.RouteUri) return false;
      if (ThumbnailUrl != other.ThumbnailUrl) return false;
      if (BannerUrl != other.BannerUrl) return false;
      if (DestinationOverviewId != other.DestinationOverviewId) return false;
      if (DefaultGalleryId != other.DefaultGalleryId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (MapImageUri != other.MapImageUri) return false;
      if (TotalLikes != other.TotalLikes) return false;
      if (TotalRates != other.TotalRates) return false;
      if (AvgRates != other.AvgRates) return false;
      if (!object.Equals(DestinationLanguage, other.DestinationLanguage)) return false;
      if(!destinationLanguages_.Equals(other.destinationLanguages_)) return false;
      if (!object.Equals(DestinationOverview, other.DestinationOverview)) return false;
      if(!destinationOverviews_.Equals(other.destinationOverviews_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (continent_ != null) hash ^= Continent.GetHashCode();
      if (CountryId != 0) hash ^= CountryId.GetHashCode();
      if (CountryName.Length != 0) hash ^= CountryName.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (stateName_ != null) hash ^= StateName.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (cityName_ != null) hash ^= CityName.GetHashCode();
      if (DefaultName.Length != 0) hash ^= DefaultName.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (RouteUri.Length != 0) hash ^= RouteUri.GetHashCode();
      if (thumbnailUrl_ != null) hash ^= ThumbnailUrl.GetHashCode();
      if (bannerUrl_ != null) hash ^= BannerUrl.GetHashCode();
      if (destinationOverviewId_ != null) hash ^= DestinationOverviewId.GetHashCode();
      if (defaultGalleryId_ != null) hash ^= DefaultGalleryId.GetHashCode();
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (mapImageUri_ != null) hash ^= MapImageUri.GetHashCode();
      if (TotalLikes != 0) hash ^= TotalLikes.GetHashCode();
      if (TotalRates != 0) hash ^= TotalRates.GetHashCode();
      if (AvgRates != 0) hash ^= AvgRates.GetHashCode();
      if (destinationLanguage_ != null) hash ^= DestinationLanguage.GetHashCode();
      hash ^= destinationLanguages_.GetHashCode();
      if (destinationOverview_ != null) hash ^= DestinationOverview.GetHashCode();
      hash ^= destinationOverviews_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (continent_ != null) {
        _single_continent_codec.WriteTagAndValue(output, Continent);
      }
      if (CountryId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CountryId);
      }
      if (CountryName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CountryName);
      }
      if (StateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StateId);
      }
      if (stateName_ != null) {
        _single_stateName_codec.WriteTagAndValue(output, StateName);
      }
      if (CityId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CityId);
      }
      if (cityName_ != null) {
        _single_cityName_codec.WriteTagAndValue(output, CityName);
      }
      if (DefaultName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DefaultName);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (RouteUri.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RouteUri);
      }
      if (thumbnailUrl_ != null) {
        _single_thumbnailUrl_codec.WriteTagAndValue(output, ThumbnailUrl);
      }
      if (bannerUrl_ != null) {
        _single_bannerUrl_codec.WriteTagAndValue(output, BannerUrl);
      }
      if (destinationOverviewId_ != null) {
        _single_destinationOverviewId_codec.WriteTagAndValue(output, DestinationOverviewId);
      }
      if (defaultGalleryId_ != null) {
        _single_defaultGalleryId_codec.WriteTagAndValue(output, DefaultGalleryId);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(Longitude);
      }
      if (mapImageUri_ != null) {
        _single_mapImageUri_codec.WriteTagAndValue(output, MapImageUri);
      }
      if (TotalLikes != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TotalLikes);
      }
      if (TotalRates != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(TotalRates);
      }
      if (AvgRates != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(AvgRates);
      }
      if (destinationLanguage_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(DestinationLanguage);
      }
      destinationLanguages_.WriteTo(output, _repeated_destinationLanguages_codec);
      if (destinationOverview_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(DestinationOverview);
      }
      destinationOverviews_.WriteTo(output, _repeated_destinationOverviews_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (continent_ != null) {
        _single_continent_codec.WriteTagAndValue(ref output, Continent);
      }
      if (CountryId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CountryId);
      }
      if (CountryName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CountryName);
      }
      if (StateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StateId);
      }
      if (stateName_ != null) {
        _single_stateName_codec.WriteTagAndValue(ref output, StateName);
      }
      if (CityId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CityId);
      }
      if (cityName_ != null) {
        _single_cityName_codec.WriteTagAndValue(ref output, CityName);
      }
      if (DefaultName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DefaultName);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(ref output, Description);
      }
      if (RouteUri.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RouteUri);
      }
      if (thumbnailUrl_ != null) {
        _single_thumbnailUrl_codec.WriteTagAndValue(ref output, ThumbnailUrl);
      }
      if (bannerUrl_ != null) {
        _single_bannerUrl_codec.WriteTagAndValue(ref output, BannerUrl);
      }
      if (destinationOverviewId_ != null) {
        _single_destinationOverviewId_codec.WriteTagAndValue(ref output, DestinationOverviewId);
      }
      if (defaultGalleryId_ != null) {
        _single_defaultGalleryId_codec.WriteTagAndValue(ref output, DefaultGalleryId);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(Longitude);
      }
      if (mapImageUri_ != null) {
        _single_mapImageUri_codec.WriteTagAndValue(ref output, MapImageUri);
      }
      if (TotalLikes != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TotalLikes);
      }
      if (TotalRates != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(TotalRates);
      }
      if (AvgRates != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(AvgRates);
      }
      if (destinationLanguage_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(DestinationLanguage);
      }
      destinationLanguages_.WriteTo(ref output, _repeated_destinationLanguages_codec);
      if (destinationOverview_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(DestinationOverview);
      }
      destinationOverviews_.WriteTo(ref output, _repeated_destinationOverviews_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (continent_ != null) {
        size += _single_continent_codec.CalculateSizeWithTag(Continent);
      }
      if (CountryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountryId);
      }
      if (CountryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryName);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (stateName_ != null) {
        size += _single_stateName_codec.CalculateSizeWithTag(StateName);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (cityName_ != null) {
        size += _single_cityName_codec.CalculateSizeWithTag(CityName);
      }
      if (DefaultName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultName);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (RouteUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RouteUri);
      }
      if (thumbnailUrl_ != null) {
        size += _single_thumbnailUrl_codec.CalculateSizeWithTag(ThumbnailUrl);
      }
      if (bannerUrl_ != null) {
        size += _single_bannerUrl_codec.CalculateSizeWithTag(BannerUrl);
      }
      if (destinationOverviewId_ != null) {
        size += _single_destinationOverviewId_codec.CalculateSizeWithTag(DestinationOverviewId);
      }
      if (defaultGalleryId_ != null) {
        size += _single_defaultGalleryId_codec.CalculateSizeWithTag(DefaultGalleryId);
      }
      if (Latitude != 0D) {
        size += 2 + 8;
      }
      if (Longitude != 0D) {
        size += 2 + 8;
      }
      if (mapImageUri_ != null) {
        size += _single_mapImageUri_codec.CalculateSizeWithTag(MapImageUri);
      }
      if (TotalLikes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotalLikes);
      }
      if (TotalRates != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotalRates);
      }
      if (AvgRates != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AvgRates);
      }
      if (destinationLanguage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DestinationLanguage);
      }
      size += destinationLanguages_.CalculateSize(_repeated_destinationLanguages_codec);
      if (destinationOverview_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DestinationOverview);
      }
      size += destinationOverviews_.CalculateSize(_repeated_destinationOverviews_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestinationStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.continent_ != null) {
        if (continent_ == null || other.Continent != "") {
          Continent = other.Continent;
        }
      }
      if (other.CountryId != 0) {
        CountryId = other.CountryId;
      }
      if (other.CountryName.Length != 0) {
        CountryName = other.CountryName;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.stateName_ != null) {
        if (stateName_ == null || other.StateName != "") {
          StateName = other.StateName;
        }
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.cityName_ != null) {
        if (cityName_ == null || other.CityName != "") {
          CityName = other.CityName;
        }
      }
      if (other.DefaultName.Length != 0) {
        DefaultName = other.DefaultName;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.RouteUri.Length != 0) {
        RouteUri = other.RouteUri;
      }
      if (other.thumbnailUrl_ != null) {
        if (thumbnailUrl_ == null || other.ThumbnailUrl != "") {
          ThumbnailUrl = other.ThumbnailUrl;
        }
      }
      if (other.bannerUrl_ != null) {
        if (bannerUrl_ == null || other.BannerUrl != "") {
          BannerUrl = other.BannerUrl;
        }
      }
      if (other.destinationOverviewId_ != null) {
        if (destinationOverviewId_ == null || other.DestinationOverviewId != "") {
          DestinationOverviewId = other.DestinationOverviewId;
        }
      }
      if (other.defaultGalleryId_ != null) {
        if (defaultGalleryId_ == null || other.DefaultGalleryId != "") {
          DefaultGalleryId = other.DefaultGalleryId;
        }
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.mapImageUri_ != null) {
        if (mapImageUri_ == null || other.MapImageUri != "") {
          MapImageUri = other.MapImageUri;
        }
      }
      if (other.TotalLikes != 0) {
        TotalLikes = other.TotalLikes;
      }
      if (other.TotalRates != 0) {
        TotalRates = other.TotalRates;
      }
      if (other.AvgRates != 0) {
        AvgRates = other.AvgRates;
      }
      if (other.destinationLanguage_ != null) {
        if (destinationLanguage_ == null) {
          DestinationLanguage = new global::DbData.Protos.DestinationLanguageStruct();
        }
        DestinationLanguage.MergeFrom(other.DestinationLanguage);
      }
      destinationLanguages_.Add(other.destinationLanguages_);
      if (other.destinationOverview_ != null) {
        if (destinationOverview_ == null) {
          DestinationOverview = new global::DbData.Protos.DestinationOverviewStruct();
        }
        DestinationOverview.MergeFrom(other.DestinationOverview);
      }
      destinationOverviews_.Add(other.destinationOverviews_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_continent_codec.Read(input);
            if (continent_ == null || value != "") {
              Continent = value;
            }
            break;
          }
          case 24: {
            CountryId = input.ReadInt32();
            break;
          }
          case 34: {
            CountryName = input.ReadString();
            break;
          }
          case 40: {
            StateId = input.ReadInt32();
            break;
          }
          case 50: {
            string value = _single_stateName_codec.Read(input);
            if (stateName_ == null || value != "") {
              StateName = value;
            }
            break;
          }
          case 56: {
            CityId = input.ReadInt32();
            break;
          }
          case 66: {
            string value = _single_cityName_codec.Read(input);
            if (cityName_ == null || value != "") {
              CityName = value;
            }
            break;
          }
          case 74: {
            DefaultName = input.ReadString();
            break;
          }
          case 82: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 90: {
            RouteUri = input.ReadString();
            break;
          }
          case 98: {
            string value = _single_thumbnailUrl_codec.Read(input);
            if (thumbnailUrl_ == null || value != "") {
              ThumbnailUrl = value;
            }
            break;
          }
          case 106: {
            string value = _single_bannerUrl_codec.Read(input);
            if (bannerUrl_ == null || value != "") {
              BannerUrl = value;
            }
            break;
          }
          case 114: {
            string value = _single_destinationOverviewId_codec.Read(input);
            if (destinationOverviewId_ == null || value != "") {
              DestinationOverviewId = value;
            }
            break;
          }
          case 122: {
            string value = _single_defaultGalleryId_codec.Read(input);
            if (defaultGalleryId_ == null || value != "") {
              DefaultGalleryId = value;
            }
            break;
          }
          case 129: {
            Latitude = input.ReadDouble();
            break;
          }
          case 137: {
            Longitude = input.ReadDouble();
            break;
          }
          case 146: {
            string value = _single_mapImageUri_codec.Read(input);
            if (mapImageUri_ == null || value != "") {
              MapImageUri = value;
            }
            break;
          }
          case 152: {
            TotalLikes = input.ReadInt32();
            break;
          }
          case 160: {
            TotalRates = input.ReadInt32();
            break;
          }
          case 168: {
            AvgRates = input.ReadInt32();
            break;
          }
          case 178: {
            if (destinationLanguage_ == null) {
              DestinationLanguage = new global::DbData.Protos.DestinationLanguageStruct();
            }
            input.ReadMessage(DestinationLanguage);
            break;
          }
          case 186: {
            destinationLanguages_.AddEntriesFrom(input, _repeated_destinationLanguages_codec);
            break;
          }
          case 194: {
            if (destinationOverview_ == null) {
              DestinationOverview = new global::DbData.Protos.DestinationOverviewStruct();
            }
            input.ReadMessage(DestinationOverview);
            break;
          }
          case 202: {
            destinationOverviews_.AddEntriesFrom(input, _repeated_destinationOverviews_codec);
            break;
          }
          case 210: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_continent_codec.Read(ref input);
            if (continent_ == null || value != "") {
              Continent = value;
            }
            break;
          }
          case 24: {
            CountryId = input.ReadInt32();
            break;
          }
          case 34: {
            CountryName = input.ReadString();
            break;
          }
          case 40: {
            StateId = input.ReadInt32();
            break;
          }
          case 50: {
            string value = _single_stateName_codec.Read(ref input);
            if (stateName_ == null || value != "") {
              StateName = value;
            }
            break;
          }
          case 56: {
            CityId = input.ReadInt32();
            break;
          }
          case 66: {
            string value = _single_cityName_codec.Read(ref input);
            if (cityName_ == null || value != "") {
              CityName = value;
            }
            break;
          }
          case 74: {
            DefaultName = input.ReadString();
            break;
          }
          case 82: {
            string value = _single_description_codec.Read(ref input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 90: {
            RouteUri = input.ReadString();
            break;
          }
          case 98: {
            string value = _single_thumbnailUrl_codec.Read(ref input);
            if (thumbnailUrl_ == null || value != "") {
              ThumbnailUrl = value;
            }
            break;
          }
          case 106: {
            string value = _single_bannerUrl_codec.Read(ref input);
            if (bannerUrl_ == null || value != "") {
              BannerUrl = value;
            }
            break;
          }
          case 114: {
            string value = _single_destinationOverviewId_codec.Read(ref input);
            if (destinationOverviewId_ == null || value != "") {
              DestinationOverviewId = value;
            }
            break;
          }
          case 122: {
            string value = _single_defaultGalleryId_codec.Read(ref input);
            if (defaultGalleryId_ == null || value != "") {
              DefaultGalleryId = value;
            }
            break;
          }
          case 129: {
            Latitude = input.ReadDouble();
            break;
          }
          case 137: {
            Longitude = input.ReadDouble();
            break;
          }
          case 146: {
            string value = _single_mapImageUri_codec.Read(ref input);
            if (mapImageUri_ == null || value != "") {
              MapImageUri = value;
            }
            break;
          }
          case 152: {
            TotalLikes = input.ReadInt32();
            break;
          }
          case 160: {
            TotalRates = input.ReadInt32();
            break;
          }
          case 168: {
            AvgRates = input.ReadInt32();
            break;
          }
          case 178: {
            if (destinationLanguage_ == null) {
              DestinationLanguage = new global::DbData.Protos.DestinationLanguageStruct();
            }
            input.ReadMessage(DestinationLanguage);
            break;
          }
          case 186: {
            destinationLanguages_.AddEntriesFrom(ref input, _repeated_destinationLanguages_codec);
            break;
          }
          case 194: {
            if (destinationOverview_ == null) {
              DestinationOverview = new global::DbData.Protos.DestinationOverviewStruct();
            }
            input.ReadMessage(DestinationOverview);
            break;
          }
          case 202: {
            destinationOverviews_.AddEntriesFrom(ref input, _repeated_destinationOverviews_codec);
            break;
          }
          case 210: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DestinationLanguageStruct : pb::IMessage<DestinationLanguageStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DestinationLanguageStruct> _parser = new pb::MessageParser<DestinationLanguageStruct>(() => new DestinationLanguageStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestinationLanguageStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgDestinationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationLanguageStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationLanguageStruct(DestinationLanguageStruct other) : this() {
      Id = other.Id;
      DestinationId = other.DestinationId;
      langCode_ = other.langCode_;
      name_ = other.name_;
      Description = other.Description;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationLanguageStruct Clone() {
      return new DestinationLanguageStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "destinationId" field.</summary>
    public const int DestinationIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_destinationId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string destinationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationId {
      get { return destinationId_; }
      set {
        destinationId_ = value;
      }
    }


    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 3;
    private string langCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestinationLanguageStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestinationLanguageStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DestinationId != other.DestinationId) return false;
      if (LangCode != other.LangCode) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (destinationId_ != null) hash ^= DestinationId.GetHashCode();
      if (LangCode.Length != 0) hash ^= LangCode.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (destinationId_ != null) {
        _single_destinationId_codec.WriteTagAndValue(output, DestinationId);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LangCode);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (destinationId_ != null) {
        _single_destinationId_codec.WriteTagAndValue(ref output, DestinationId);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LangCode);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(ref output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (destinationId_ != null) {
        size += _single_destinationId_codec.CalculateSizeWithTag(DestinationId);
      }
      if (LangCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangCode);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestinationLanguageStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.destinationId_ != null) {
        if (destinationId_ == null || other.DestinationId != "") {
          DestinationId = other.DestinationId;
        }
      }
      if (other.LangCode.Length != 0) {
        LangCode = other.LangCode;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_destinationId_codec.Read(input);
            if (destinationId_ == null || value != "") {
              DestinationId = value;
            }
            break;
          }
          case 26: {
            LangCode = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_destinationId_codec.Read(ref input);
            if (destinationId_ == null || value != "") {
              DestinationId = value;
            }
            break;
          }
          case 26: {
            LangCode = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(ref input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DestinationOverviewStruct : pb::IMessage<DestinationOverviewStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DestinationOverviewStruct> _parser = new pb::MessageParser<DestinationOverviewStruct>(() => new DestinationOverviewStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestinationOverviewStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgDestinationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOverviewStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOverviewStruct(DestinationOverviewStruct other) : this() {
      Id = other.Id;
      langCode_ = other.langCode_;
      routeUri_ = other.routeUri_;
      title_ = other.title_;
      SubTitle = other.SubTitle;
      Description = other.Description;
      Detail = other.Detail;
      ThumbnailUrl = other.ThumbnailUrl;
      author_ = other.author_;
      authorId_ = other.authorId_;
      createDate_ = other.createDate_ != null ? other.createDate_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOverviewStruct Clone() {
      return new DestinationOverviewStruct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 2;
    private string langCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RouteUri" field.</summary>
    public const int RouteUriFieldNumber = 3;
    private string routeUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RouteUri {
      get { return routeUri_; }
      set {
        routeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubTitle" field.</summary>
    public const int SubTitleFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_subTitle_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string subTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubTitle {
      get { return subTitle_; }
      set {
        subTitle_ = value;
      }
    }


    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "Detail" field.</summary>
    public const int DetailFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_detail_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string detail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }


    /// <summary>Field number for the "ThumbnailUrl" field.</summary>
    public const int ThumbnailUrlFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_thumbnailUrl_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string thumbnailUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbnailUrl {
      get { return thumbnailUrl_; }
      set {
        thumbnailUrl_ = value;
      }
    }


    /// <summary>Field number for the "Author" field.</summary>
    public const int AuthorFieldNumber = 9;
    private string author_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AuthorId" field.</summary>
    public const int AuthorIdFieldNumber = 10;
    private string authorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorId {
      get { return authorId_; }
      set {
        authorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreateDate" field.</summary>
    public const int CreateDateFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateDate {
      get { return createDate_; }
      set {
        createDate_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 12;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestinationOverviewStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestinationOverviewStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LangCode != other.LangCode) return false;
      if (RouteUri != other.RouteUri) return false;
      if (Title != other.Title) return false;
      if (SubTitle != other.SubTitle) return false;
      if (Description != other.Description) return false;
      if (Detail != other.Detail) return false;
      if (ThumbnailUrl != other.ThumbnailUrl) return false;
      if (Author != other.Author) return false;
      if (AuthorId != other.AuthorId) return false;
      if (!object.Equals(CreateDate, other.CreateDate)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (LangCode.Length != 0) hash ^= LangCode.GetHashCode();
      if (RouteUri.Length != 0) hash ^= RouteUri.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (subTitle_ != null) hash ^= SubTitle.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (detail_ != null) hash ^= Detail.GetHashCode();
      if (thumbnailUrl_ != null) hash ^= ThumbnailUrl.GetHashCode();
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      if (AuthorId.Length != 0) hash ^= AuthorId.GetHashCode();
      if (createDate_ != null) hash ^= CreateDate.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LangCode);
      }
      if (RouteUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RouteUri);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (subTitle_ != null) {
        _single_subTitle_codec.WriteTagAndValue(output, SubTitle);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (detail_ != null) {
        _single_detail_codec.WriteTagAndValue(output, Detail);
      }
      if (thumbnailUrl_ != null) {
        _single_thumbnailUrl_codec.WriteTagAndValue(output, ThumbnailUrl);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Author);
      }
      if (AuthorId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AuthorId);
      }
      if (createDate_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateDate);
      }
      if (Status != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (LangCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LangCode);
      }
      if (RouteUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RouteUri);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (subTitle_ != null) {
        _single_subTitle_codec.WriteTagAndValue(ref output, SubTitle);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(ref output, Description);
      }
      if (detail_ != null) {
        _single_detail_codec.WriteTagAndValue(ref output, Detail);
      }
      if (thumbnailUrl_ != null) {
        _single_thumbnailUrl_codec.WriteTagAndValue(ref output, ThumbnailUrl);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Author);
      }
      if (AuthorId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AuthorId);
      }
      if (createDate_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateDate);
      }
      if (Status != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (LangCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LangCode);
      }
      if (RouteUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RouteUri);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (subTitle_ != null) {
        size += _single_subTitle_codec.CalculateSizeWithTag(SubTitle);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (detail_ != null) {
        size += _single_detail_codec.CalculateSizeWithTag(Detail);
      }
      if (thumbnailUrl_ != null) {
        size += _single_thumbnailUrl_codec.CalculateSizeWithTag(ThumbnailUrl);
      }
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      if (AuthorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorId);
      }
      if (createDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateDate);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestinationOverviewStruct other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.LangCode.Length != 0) {
        LangCode = other.LangCode;
      }
      if (other.RouteUri.Length != 0) {
        RouteUri = other.RouteUri;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.subTitle_ != null) {
        if (subTitle_ == null || other.SubTitle != "") {
          SubTitle = other.SubTitle;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.detail_ != null) {
        if (detail_ == null || other.Detail != "") {
          Detail = other.Detail;
        }
      }
      if (other.thumbnailUrl_ != null) {
        if (thumbnailUrl_ == null || other.ThumbnailUrl != "") {
          ThumbnailUrl = other.ThumbnailUrl;
        }
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      if (other.AuthorId.Length != 0) {
        AuthorId = other.AuthorId;
      }
      if (other.createDate_ != null) {
        if (createDate_ == null) {
          CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateDate.MergeFrom(other.CreateDate);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            LangCode = input.ReadString();
            break;
          }
          case 26: {
            RouteUri = input.ReadString();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_subTitle_codec.Read(input);
            if (subTitle_ == null || value != "") {
              SubTitle = value;
            }
            break;
          }
          case 50: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 58: {
            string value = _single_detail_codec.Read(input);
            if (detail_ == null || value != "") {
              Detail = value;
            }
            break;
          }
          case 66: {
            string value = _single_thumbnailUrl_codec.Read(input);
            if (thumbnailUrl_ == null || value != "") {
              ThumbnailUrl = value;
            }
            break;
          }
          case 74: {
            Author = input.ReadString();
            break;
          }
          case 82: {
            AuthorId = input.ReadString();
            break;
          }
          case 90: {
            if (createDate_ == null) {
              CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateDate);
            break;
          }
          case 96: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            LangCode = input.ReadString();
            break;
          }
          case 26: {
            RouteUri = input.ReadString();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_subTitle_codec.Read(ref input);
            if (subTitle_ == null || value != "") {
              SubTitle = value;
            }
            break;
          }
          case 50: {
            string value = _single_description_codec.Read(ref input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 58: {
            string value = _single_detail_codec.Read(ref input);
            if (detail_ == null || value != "") {
              Detail = value;
            }
            break;
          }
          case 66: {
            string value = _single_thumbnailUrl_codec.Read(ref input);
            if (thumbnailUrl_ == null || value != "") {
              ThumbnailUrl = value;
            }
            break;
          }
          case 74: {
            Author = input.ReadString();
            break;
          }
          case 82: {
            AuthorId = input.ReadString();
            break;
          }
          case 90: {
            if (createDate_ == null) {
              CreateDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateDate);
            break;
          }
          case 96: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DestinationFilter : pb::IMessage<DestinationFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DestinationFilter> _parser = new pb::MessageParser<DestinationFilter>(() => new DestinationFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestinationFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgDestinationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationFilter(DestinationFilter other) : this() {
      paging_ = other.paging_ != null ? other.paging_.Clone() : null;
      sort_ = other.sort_ != null ? other.sort_.Clone() : null;
      Name = other.Name;
      Continent = other.Continent;
      Country = other.Country;
      countryId_ = other.countryId_;
      State = other.State;
      stateId_ = other.stateId_;
      City = other.City;
      cityId_ = other.cityId_;
      Tags = other.Tags;
      LangCode = other.LangCode;
      DefaultLang = other.DefaultLang;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationFilter Clone() {
      return new DestinationFilter(this);
    }

    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 1;
    private global::DbData.Protos.PagingType paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.PagingType Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 2;
    private global::DbData.Protos.SortType sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DbData.Protos.SortType Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "Continent" field.</summary>
    public const int ContinentFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_continent_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string continent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Continent {
      get { return continent_; }
      set {
        continent_ = value;
      }
    }


    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_country_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = value;
      }
    }


    /// <summary>Field number for the "CountryId" field.</summary>
    public const int CountryIdFieldNumber = 6;
    private int countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountryId {
      get { return countryId_; }
      set {
        countryId_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_state_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = value;
      }
    }


    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 8;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_city_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = value;
      }
    }


    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 10;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "Tags" field.</summary>
    public const int TagsFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_tags_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }


    /// <summary>Field number for the "langCode" field.</summary>
    public const int LangCodeFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_langCode_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string langCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LangCode {
      get { return langCode_; }
      set {
        langCode_ = value;
      }
    }


    /// <summary>Field number for the "defaultLang" field.</summary>
    public const int DefaultLangFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_defaultLang_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string defaultLang_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultLang {
      get { return defaultLang_; }
      set {
        defaultLang_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestinationFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestinationFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Paging, other.Paging)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (Name != other.Name) return false;
      if (Continent != other.Continent) return false;
      if (Country != other.Country) return false;
      if (CountryId != other.CountryId) return false;
      if (State != other.State) return false;
      if (StateId != other.StateId) return false;
      if (City != other.City) return false;
      if (CityId != other.CityId) return false;
      if (Tags != other.Tags) return false;
      if (LangCode != other.LangCode) return false;
      if (DefaultLang != other.DefaultLang) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (paging_ != null) hash ^= Paging.GetHashCode();
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (continent_ != null) hash ^= Continent.GetHashCode();
      if (country_ != null) hash ^= Country.GetHashCode();
      if (CountryId != 0) hash ^= CountryId.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (tags_ != null) hash ^= Tags.GetHashCode();
      if (langCode_ != null) hash ^= LangCode.GetHashCode();
      if (defaultLang_ != null) hash ^= DefaultLang.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (continent_ != null) {
        _single_continent_codec.WriteTagAndValue(output, Continent);
      }
      if (country_ != null) {
        _single_country_codec.WriteTagAndValue(output, Country);
      }
      if (CountryId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CountryId);
      }
      if (state_ != null) {
        _single_state_codec.WriteTagAndValue(output, State);
      }
      if (StateId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(StateId);
      }
      if (city_ != null) {
        _single_city_codec.WriteTagAndValue(output, City);
      }
      if (CityId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CityId);
      }
      if (tags_ != null) {
        _single_tags_codec.WriteTagAndValue(output, Tags);
      }
      if (langCode_ != null) {
        _single_langCode_codec.WriteTagAndValue(output, LangCode);
      }
      if (defaultLang_ != null) {
        _single_defaultLang_codec.WriteTagAndValue(output, DefaultLang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (paging_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Paging);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(ref output, Name);
      }
      if (continent_ != null) {
        _single_continent_codec.WriteTagAndValue(ref output, Continent);
      }
      if (country_ != null) {
        _single_country_codec.WriteTagAndValue(ref output, Country);
      }
      if (CountryId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CountryId);
      }
      if (state_ != null) {
        _single_state_codec.WriteTagAndValue(ref output, State);
      }
      if (StateId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(StateId);
      }
      if (city_ != null) {
        _single_city_codec.WriteTagAndValue(ref output, City);
      }
      if (CityId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CityId);
      }
      if (tags_ != null) {
        _single_tags_codec.WriteTagAndValue(ref output, Tags);
      }
      if (langCode_ != null) {
        _single_langCode_codec.WriteTagAndValue(ref output, LangCode);
      }
      if (defaultLang_ != null) {
        _single_defaultLang_codec.WriteTagAndValue(ref output, DefaultLang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (paging_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
      }
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (continent_ != null) {
        size += _single_continent_codec.CalculateSizeWithTag(Continent);
      }
      if (country_ != null) {
        size += _single_country_codec.CalculateSizeWithTag(Country);
      }
      if (CountryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountryId);
      }
      if (state_ != null) {
        size += _single_state_codec.CalculateSizeWithTag(State);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (city_ != null) {
        size += _single_city_codec.CalculateSizeWithTag(City);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (tags_ != null) {
        size += _single_tags_codec.CalculateSizeWithTag(Tags);
      }
      if (langCode_ != null) {
        size += _single_langCode_codec.CalculateSizeWithTag(LangCode);
      }
      if (defaultLang_ != null) {
        size += _single_defaultLang_codec.CalculateSizeWithTag(DefaultLang);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestinationFilter other) {
      if (other == null) {
        return;
      }
      if (other.paging_ != null) {
        if (paging_ == null) {
          Paging = new global::DbData.Protos.PagingType();
        }
        Paging.MergeFrom(other.Paging);
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          Sort = new global::DbData.Protos.SortType();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.continent_ != null) {
        if (continent_ == null || other.Continent != "") {
          Continent = other.Continent;
        }
      }
      if (other.country_ != null) {
        if (country_ == null || other.Country != "") {
          Country = other.Country;
        }
      }
      if (other.CountryId != 0) {
        CountryId = other.CountryId;
      }
      if (other.state_ != null) {
        if (state_ == null || other.State != "") {
          State = other.State;
        }
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.city_ != null) {
        if (city_ == null || other.City != "") {
          City = other.City;
        }
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.tags_ != null) {
        if (tags_ == null || other.Tags != "") {
          Tags = other.Tags;
        }
      }
      if (other.langCode_ != null) {
        if (langCode_ == null || other.LangCode != "") {
          LangCode = other.LangCode;
        }
      }
      if (other.defaultLang_ != null) {
        if (defaultLang_ == null || other.DefaultLang != "") {
          DefaultLang = other.DefaultLang;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 34: {
            string value = _single_continent_codec.Read(input);
            if (continent_ == null || value != "") {
              Continent = value;
            }
            break;
          }
          case 42: {
            string value = _single_country_codec.Read(input);
            if (country_ == null || value != "") {
              Country = value;
            }
            break;
          }
          case 48: {
            CountryId = input.ReadInt32();
            break;
          }
          case 58: {
            string value = _single_state_codec.Read(input);
            if (state_ == null || value != "") {
              State = value;
            }
            break;
          }
          case 64: {
            StateId = input.ReadInt32();
            break;
          }
          case 74: {
            string value = _single_city_codec.Read(input);
            if (city_ == null || value != "") {
              City = value;
            }
            break;
          }
          case 80: {
            CityId = input.ReadInt32();
            break;
          }
          case 90: {
            string value = _single_tags_codec.Read(input);
            if (tags_ == null || value != "") {
              Tags = value;
            }
            break;
          }
          case 98: {
            string value = _single_langCode_codec.Read(input);
            if (langCode_ == null || value != "") {
              LangCode = value;
            }
            break;
          }
          case 106: {
            string value = _single_defaultLang_codec.Read(input);
            if (defaultLang_ == null || value != "") {
              DefaultLang = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (paging_ == null) {
              Paging = new global::DbData.Protos.PagingType();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 18: {
            if (sort_ == null) {
              Sort = new global::DbData.Protos.SortType();
            }
            input.ReadMessage(Sort);
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(ref input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 34: {
            string value = _single_continent_codec.Read(ref input);
            if (continent_ == null || value != "") {
              Continent = value;
            }
            break;
          }
          case 42: {
            string value = _single_country_codec.Read(ref input);
            if (country_ == null || value != "") {
              Country = value;
            }
            break;
          }
          case 48: {
            CountryId = input.ReadInt32();
            break;
          }
          case 58: {
            string value = _single_state_codec.Read(ref input);
            if (state_ == null || value != "") {
              State = value;
            }
            break;
          }
          case 64: {
            StateId = input.ReadInt32();
            break;
          }
          case 74: {
            string value = _single_city_codec.Read(ref input);
            if (city_ == null || value != "") {
              City = value;
            }
            break;
          }
          case 80: {
            CityId = input.ReadInt32();
            break;
          }
          case 90: {
            string value = _single_tags_codec.Read(ref input);
            if (tags_ == null || value != "") {
              Tags = value;
            }
            break;
          }
          case 98: {
            string value = _single_langCode_codec.Read(ref input);
            if (langCode_ == null || value != "") {
              LangCode = value;
            }
            break;
          }
          case 106: {
            string value = _single_defaultLang_codec.Read(ref input);
            if (defaultLang_ == null || value != "") {
              DefaultLang = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListDestinationResponse : pb::IMessage<ListDestinationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDestinationResponse> _parser = new pb::MessageParser<ListDestinationResponse>(() => new ListDestinationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDestinationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DbData.Protos.MsgDestinationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDestinationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDestinationResponse(ListDestinationResponse other) : this() {
      totalRecords_ = other.totalRecords_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDestinationResponse Clone() {
      return new ListDestinationResponse(this);
    }

    /// <summary>Field number for the "totalRecords" field.</summary>
    public const int TotalRecordsFieldNumber = 1;
    private int totalRecords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalRecords {
      get { return totalRecords_; }
      set {
        totalRecords_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DbData.Protos.DestinationStruct> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::DbData.Protos.DestinationStruct.Parser);
    private readonly pbc::RepeatedField<global::DbData.Protos.DestinationStruct> data_ = new pbc::RepeatedField<global::DbData.Protos.DestinationStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DbData.Protos.DestinationStruct> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDestinationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDestinationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalRecords != other.TotalRecords) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalRecords != 0) hash ^= TotalRecords.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalRecords != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalRecords);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalRecords != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRecords);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDestinationResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalRecords != 0) {
        TotalRecords = other.TotalRecords;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalRecords = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
