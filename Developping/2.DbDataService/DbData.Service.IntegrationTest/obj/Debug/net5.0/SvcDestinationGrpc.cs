// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: svcDestination.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace DbData.Protos {
  /// <summary>
  /// service definition.
  /// </summary>
  public static partial class DestinationServices
  {
    static readonly string __ServiceName = "dbdata.DestinationServices";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::DbData.Protos.IdLangRequest> __Marshaller_dbdata_IdLangRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DbData.Protos.IdLangRequest.Parser));
    static readonly grpc::Marshaller<global::DbData.Protos.DestinationStruct> __Marshaller_dbdata_DestinationStruct = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DbData.Protos.DestinationStruct.Parser));
    static readonly grpc::Marshaller<global::DbData.Protos.IdRequest> __Marshaller_dbdata_IdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DbData.Protos.IdRequest.Parser));
    static readonly grpc::Marshaller<global::DbData.Protos.DestinationFilter> __Marshaller_dbdata_DestinationFilter = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DbData.Protos.DestinationFilter.Parser));
    static readonly grpc::Marshaller<global::DbData.Protos.ListDestinationResponse> __Marshaller_dbdata_ListDestinationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DbData.Protos.ListDestinationResponse.Parser));
    static readonly grpc::Marshaller<global::DbData.Protos.ResponseMessage> __Marshaller_dbdata_ResponseMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DbData.Protos.ResponseMessage.Parser));

    static readonly grpc::Method<global::DbData.Protos.IdLangRequest, global::DbData.Protos.DestinationStruct> __Method_Get = new grpc::Method<global::DbData.Protos.IdLangRequest, global::DbData.Protos.DestinationStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_dbdata_IdLangRequest,
        __Marshaller_dbdata_DestinationStruct);

    static readonly grpc::Method<global::DbData.Protos.IdRequest, global::DbData.Protos.DestinationStruct> __Method_GetBy = new grpc::Method<global::DbData.Protos.IdRequest, global::DbData.Protos.DestinationStruct>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBy",
        __Marshaller_dbdata_IdRequest,
        __Marshaller_dbdata_DestinationStruct);

    static readonly grpc::Method<global::DbData.Protos.DestinationFilter, global::DbData.Protos.ListDestinationResponse> __Method_GetList = new grpc::Method<global::DbData.Protos.DestinationFilter, global::DbData.Protos.ListDestinationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetList",
        __Marshaller_dbdata_DestinationFilter,
        __Marshaller_dbdata_ListDestinationResponse);

    static readonly grpc::Method<global::DbData.Protos.DestinationStruct, global::DbData.Protos.ResponseMessage> __Method_Add = new grpc::Method<global::DbData.Protos.DestinationStruct, global::DbData.Protos.ResponseMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_dbdata_DestinationStruct,
        __Marshaller_dbdata_ResponseMessage);

    static readonly grpc::Method<global::DbData.Protos.DestinationStruct, global::DbData.Protos.ResponseMessage> __Method_Edit = new grpc::Method<global::DbData.Protos.DestinationStruct, global::DbData.Protos.ResponseMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Edit",
        __Marshaller_dbdata_DestinationStruct,
        __Marshaller_dbdata_ResponseMessage);

    static readonly grpc::Method<global::DbData.Protos.IdRequest, global::DbData.Protos.ResponseMessage> __Method_Delete = new grpc::Method<global::DbData.Protos.IdRequest, global::DbData.Protos.ResponseMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_dbdata_IdRequest,
        __Marshaller_dbdata_ResponseMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::DbData.Protos.SvcDestinationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for DestinationServices</summary>
    public partial class DestinationServicesClient : grpc::ClientBase<DestinationServicesClient>
    {
      /// <summary>Creates a new client for DestinationServices</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DestinationServicesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DestinationServices that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DestinationServicesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DestinationServicesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DestinationServicesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Id: RouteUri
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DbData.Protos.DestinationStruct Get(global::DbData.Protos.IdLangRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Id: RouteUri
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DbData.Protos.DestinationStruct Get(global::DbData.Protos.IdLangRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Id: RouteUri
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.DestinationStruct> GetAsync(global::DbData.Protos.IdLangRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Id: RouteUri
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.DestinationStruct> GetAsync(global::DbData.Protos.IdLangRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Id: Guid
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DbData.Protos.DestinationStruct GetBy(global::DbData.Protos.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Id: Guid
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DbData.Protos.DestinationStruct GetBy(global::DbData.Protos.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBy, null, options, request);
      }
      /// <summary>
      /// Id: Guid
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.DestinationStruct> GetByAsync(global::DbData.Protos.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Id: Guid
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.DestinationStruct> GetByAsync(global::DbData.Protos.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBy, null, options, request);
      }
      public virtual global::DbData.Protos.ListDestinationResponse GetList(global::DbData.Protos.DestinationFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DbData.Protos.ListDestinationResponse GetList(global::DbData.Protos.DestinationFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetList, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.ListDestinationResponse> GetListAsync(global::DbData.Protos.DestinationFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.ListDestinationResponse> GetListAsync(global::DbData.Protos.DestinationFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetList, null, options, request);
      }
      public virtual global::DbData.Protos.ResponseMessage Add(global::DbData.Protos.DestinationStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Add(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DbData.Protos.ResponseMessage Add(global::DbData.Protos.DestinationStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Add, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.ResponseMessage> AddAsync(global::DbData.Protos.DestinationStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.ResponseMessage> AddAsync(global::DbData.Protos.DestinationStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Add, null, options, request);
      }
      public virtual global::DbData.Protos.ResponseMessage Edit(global::DbData.Protos.DestinationStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Edit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DbData.Protos.ResponseMessage Edit(global::DbData.Protos.DestinationStruct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Edit, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.ResponseMessage> EditAsync(global::DbData.Protos.DestinationStruct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.ResponseMessage> EditAsync(global::DbData.Protos.DestinationStruct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Edit, null, options, request);
      }
      public virtual global::DbData.Protos.ResponseMessage Delete(global::DbData.Protos.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DbData.Protos.ResponseMessage Delete(global::DbData.Protos.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.ResponseMessage> DeleteAsync(global::DbData.Protos.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DbData.Protos.ResponseMessage> DeleteAsync(global::DbData.Protos.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DestinationServicesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DestinationServicesClient(configuration);
      }
    }

  }
}
#endregion
